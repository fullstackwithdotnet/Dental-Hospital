<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GetEstheticCorrDetailsById" xml:space="preserve">
    <value>select * from CONSEstheticCorrectionDetails where ConservativeId ={0} and EstheticCorrId NOT IN ({1})</value>
  </data>
  <data name="Steiner" xml:space="preserve">
    <value> Select * from ORTHOStaticSteiner where DelInd = 0</value>
  </data>
  <data name="MaxillaforPatient" xml:space="preserve">
    <value>Select * from ORTHOCranialMaxillaDetails as a
inner join ORTHOStaticMaxillaCranial as b on b.CranialMaxStaticId=a.CranialMaxStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="BillTaxDetails" xml:space="preserve">
    <value>select  SUM(ServiceCGST+ServiceSGST) as GSTPercentage,SUM(ServiceAmount) as NetAmount,SUM(DiscountAmt) as DiscountAmt, SUM(NetAmount) as BillAmount
FROM    BillingDetails where BillId={0}</value>
  </data>
  <data name="LoadDept" xml:space="preserve">
    <value> select DeptId,(DeptCode +' - '+  DeptName) as DeptName from MASDepartment where IsReferredView ='Y'
AND DelInd=0 Order by DeptId</value>
  </data>
  <data name="ScheduleSearch" xml:space="preserve">
    <value> SELECT S.ScheduleId,S.PatientId,P.PatientName,P.OpNo,P.Age,CONVERT(VARCHAR(10),S.FromDate, 126) as FromDate ,P.genderId, RS.ReferredId,
C.CodeDescription as TypeName,S.StatusId,
('/OMFS/IPEdit?PatientId='+ CAST(S.PatientId as varchar(20))+'&amp;amp;scheduleId=' + CAST(S.ScheduleId as varchar(20))+'&amp;amp;ReferredId=' + CAST(RS.ReferredId as varchar(20)))as Link  
from ReferralStatus as RS
inner join OMFSIPSchedule as S on RS.PatientId=S.PatientId
inner join OPDPatientRegistration as P on P.PatientId=S.PatientId
inner join MASCode AS C ON C.CodeId = S.TypeId
WHERE rs.ToDeptId={3} and((Convert(varchar(10), S.FromDate,126) )between  '{0}' and '{1}') and S.StatusId={2}</value>
  </data>
  <data name="OMFSOpList" xml:space="preserve">
    <value>select OMFSOpId,OMFSOpNo,CONVERT(VARCHAR(10), OMFSOpDate, 126) as OMFSOpDateDisplay,ChiefComplaint  as OpChiefComplaint from OMFSOPCasesheet
where PatientId={0}</value>
  </data>
  <data name="GetProsMfpDetailsById" xml:space="preserve">
    <value> select ProsMaxilloProId,	ProsthoMFPId, CONVERT(VARCHAR(10), MfpTreatmentDate, 126) as MfpTreatmentDateDisplay,MfpTreatmentDescription	,MfpRemarks from PROSMFPTreatmentDescription where ProsthoMFPId ={0} and ProsMaxilloProId NOT IN ({1})</value>
  </data>
  <data name="LoadStudentScheduleddetails" xml:space="preserve">
    <value> SELECT     SS.StudentSchId, SS.StudentId, SR.StudentName, SR.StudentRegNo, C.CourseName, CY.CourseYearName,CONVERT(varchar(11), SS.SchFromDate, 126) AS SchFromDate, CONVERT(varchar(11), SS.SchToDate, 126) AS SchToDate, 
D.DeptCode FROM StudentSchedule AS SS INNER JOIN MASStudentRegistration AS SR ON 
SS.StudentId = SR.StudentId INNER JOIN MASDepartment AS D ON SS.DeptId = D.DeptId 
INNER JOIN MASCourse AS C ON SR.StudentCourseId = C.CourseId INNER JOIN
MASCourseYear AS CY ON SR.StudentYearId = CY.CourseYearId
WHERE     (SS.DelInd = 0) AND (SS.SchToDate &gt;= CONVERT(datetime, GETDATE()))
AND 
(SR.StudentCourseId = {0}) AND (SR.StudentYearId = {1})</value>
  </data>
  <data name="DeleteBilldet" xml:space="preserve">
    <value>Delete from BillingDetails where BillId={0}</value>
  </data>
  <data name="TestNameHeading" xml:space="preserve">
    <value> select RD.LabId,RD.LabDetId,RD.ServiceId,RD.TeethNo,BS.ServiceName,MG.GroupName,RT.RadioTempId,RR.PatientId,MB.DeptId
from RADIORegistrationDetails as RD
inner join MasBillingServices as BS on RD.ServiceId=BS.ServiceId
inner join RADIOTemplate as RT on RT.ServiceId=BS.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
inner join RADIORegistration as RR on RD.LabId=RR.LabId
inner join MASBillingServices as MB on MB.ServiceId=Rd.ServiceId
where RD.ServiceId={0} and RD.LabDetId={1}</value>
  </data>
  <data name="DisplayOrthoApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY ORTHO.ORTHOId ORDER BY SA.AllotId DESC) AS rn, ORTHO.ORTHOId ,(OP.PatientName) as PatientName, 
 CASE WHEN ORTHO.SendForApproval1 =1  AND ORTHO.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN ORTHO.SendForApproval2 =1  AND ORTHO.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN ORTHO.SendForApproval3 =1  AND ORTHO.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN ORTHO.Approval3=1 THEN 'Final level'when ORTHO.Approval2=1 then '2nd level'				
WHEN ORTHO.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM ORTHOCasesheet AS ORTHO INNER JOIN OPDPatientRegistration AS OP ON  ORTHO.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and ORTHOId={1} order by  ORTHOId desc</value>
  </data>
  <data name="OMRApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/OMR/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId 
INNER JOIN OMRCaseSheet as  OM on OM.OMRId=A.CaserecordId WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND CaserecordId=OMRId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="BillingMaster" xml:space="preserve">
    <value>Select distinct PatientID,DeptId,sum(PayableAmount)as NetAmount,DiscountGivenBy,DiscountPurpose,CreatedBy 
		From BillQueueDetails WHERE PatientID={0}  and DeptId={1} and IsBillPaid='N' and  IsApproved='Y'
		Group by PatientID, DeptId,DiscountGivenBy,DiscountPurpose,CreatedBy</value>
  </data>
  <data name="GetSpToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSSurgicalProcedureDetails where ConservativeId={0}</value>
  </data>
  <data name="ReportReferralDetails" xml:space="preserve">
    <value>SELECT  ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS RowNum,CONVERT(VARCHAR(10), R.FromDate, 126) as DisplayDate,OP.OpNo, OP.IsCreated, OP.PatientName, OP.Age,R.FromDate,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,
R.TreatmentDate, R.TreatmentStatus FROM   ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId  
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}') AND R.ToDeptId ={2}</value>
  </data>
  <data name="AllotmentDoctorDropdownlist" xml:space="preserve">
    <value>SELECT DoctorId as StudentId,DoctorName AS StudentName
FROM   MASDoctor WHERE  (DelInd = 0 and DeptId={0})</value>
  </data>
  <data name="GetBillQueueAppStatus" xml:space="preserve">
    <value>select  IsApproved as Approvalvalue from BillQueueDetails where BillQueueId= {0}</value>
  </data>
  <data name="AllotHome" xml:space="preserve">
    <value>SELECT     SA.AllotId, CONVERT(VARCHAR(10), SA.AllotDate, 126) AS AllotDate, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, SR.StudentName, SR.StudentRegNo, SA.PatientId,
SA.ReferredId, SA.DeptId, SA.StudentId FROM StudentAllotment AS SA INNER JOIN
OPDPatientRegistration AS P ON SA.PatientId = P.PatientId INNER JOIN
MASCode AS C ON C.CodeId = P.TitleId INNER JOIN MASStudentRegistration AS SR ON SA.StudentId = SR.StudentId 
INNER JOIN ReferralStatus AS R ON P.PatientId = R.PatientId
WHERE (SA.DeptId ={0}) and (R.ToDeptId ={0}) and  R.TreatmentStatus=0</value>
  </data>
  <data name="DCardPERIOSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) PE.PerioId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PERIOCasesheet AS PE INNER JOIN OMRCasesheet AS MR ON MR.PatientId = PE.PatientId INNER JOIN OPDPatientRegistration AS OP ON PE.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="DeletePreviousUnTreatedPatientList" xml:space="preserve">
    <value>Delete from ReferralStatus where PatientId = {0}  and FromdeptId={1} and  ToDeptId = {2} and TreatmentStatus = 0</value>
  </data>
  <data name="BurstoneHardforPatient" xml:space="preserve">
    <value> Select * from ORTHOBurstoneHardDetails as a
inner join ORTHOStaticBurstoneHard as b on b.BurstoneHardStaticId=a.BurstoneHardStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as BurstoneHardId,BurstoneHardStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,BurstoneHardStaticId,Measurements,Male,Female,Indicator, DelInd from ORTHOStaticBurstoneHard where DelInd = 0 and  BurstoneHardStaticId not in (
Select b.BurstoneHardStaticId from ORTHOBurstoneHardDetails as a
inner join ORTHOStaticBurstoneHard as b on b.BurstoneHardStaticId=a.BurstoneHardStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="LoadVisitType" xml:space="preserve">
    <value>select distinct  VisitType from ReferralStatus where VisitType is not null</value>
  </data>
  <data name="DentoUpper" xml:space="preserve">
    <value>Select a.*,null as MidRx,null as PreRx,null as PostModulation,null as Postrx,null as Retention,null as Change from ORTHOStaticDentoUpper  
 as a left join ORTHODentoUpperDetails  as b on a.DentoUpperStaticId=b.DentoUpperStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="DentoLowerforPatient" xml:space="preserve">
    <value>Select * from ORTHODentoLowerDetails as a
inner join ORTHOStaticDentoLower as b on b.DentoLowerStaticId=a.DentoLowerStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="ReferralList" xml:space="preserve">
    <value>  SELECT  R.ReferredId, R.PatientId, R.FromdeptId,CONVERT(VARCHAR(10), R.FromDate, 126)
as FromDateDisplay, R.ReferredReason, R.ToDeptId, R.Priority, R.RoomNo, 
CASE WHEN R.TreatmentStatus =1 THEN 'Completed' ELSE 'Pending' END AS TreatmentStatus, 
CONVERT(VARCHAR(10), R.TreatmentDate, 126)As TreatmentDateDisplay, R.ReferredTreatmentId, R.VisitType, 
FD.DeptCode AS FromDeptCode, TD.DeptCode as ToDeptCode FROM  ReferralStatus AS R INNER JOIN
MASDepartment AS FD ON R.FromdeptId = FD.DeptId INNER JOIN
MASDepartment AS TD ON R.ToDeptId = TD.DeptId where R.PatientId={0}  order by R.ReferredId desc</value>
  </data>
  <data name="ReferralHome" xml:space="preserve">
    <value>SELECT     RS.ReferredId, RS.PatientId, CONVERT(VARCHAR(10), RS.FromDate, 126) AS FromDate, P.OpNo,
C.CodeDescription + P.PatientName AS PatientName, P.Age, D.DeptCode AS FromDeptName, 
RS.ReferredReason, SA.AllotId FROM ReferralStatus AS RS 
INNER JOIN OPDPatientRegistration AS P ON RS.PatientId = P.PatientId 
INNER JOIN MASDepartment AS D ON D.DeptId = RS.FromdeptId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
LEFT OUTER JOIN StudentAllotment AS SA ON RS.ReferredId = SA.ReferredId
WHERE     (ToDeptId ={0}) and SA.AllotId is  null</value>
  </data>
  <data name="OPCollectionforReport" xml:space="preserve">
    <value> SELECT ROW_NUMBER() OVER(ORDER BY B.BillDateTime ASC) AS RowNum,CONVERT(VARCHAR(10), B.BillDateTime, 126) AS DisplayDate,
OP.OpNo,B.BillNo, OP.PatientName,B.BillAmount,0 as DiscPer
from Billing as B 
INNER JOIN OPDPatientRegistration AS OP ON B.PatientId = OP.PatientId
where ((Convert(varchar(10), B.BillDateTime,126))between '{0}' and '{1}') and B.DeptId={2}</value>
  </data>
  <data name="GetMaxBillNo" xml:space="preserve">
    <value>select BillNo from billing where BillId= (select top 1 isnull(max(BillId),0)  BillId from billing)</value>
  </data>
  <data name="GetIdbyUseRoleId" xml:space="preserve">
    <value>Select id from userroles where userid={0} and roleid={1}</value>
  </data>
  <data name="LaboratoryTestNameReport" xml:space="preserve">
    <value>  select LD.*,MBS.ServiceName,LE.* from  LaboratoryRegistrationDetails as LD 
inner join  LaboratoryResultEntry as LE on LE. LaboratoryDetId=LD. LaboratoryDetId 
inner join MASBillingServices as MBS on MBS.ServiceId=LE.ServiceId 
where LaboratoryId={0}</value>
  </data>
  <data name="DentoLower" xml:space="preserve">
    <value>Select a.*,null as MidRx,null as PreRx,null as PostModulation,null as Postrx,null as Retention,null as Change from ORTHOStaticDentoLower   
as a left join ORTHODentoLowerDetails  as b on a.DentoLowerStaticId=b.DentoLowerStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="AllotDelete" xml:space="preserve">
    <value>SELECT     D.DeptCode, R.ReferredReason, SR.StudentName, SR.StudentRegNo, CY.CourseYearName, C.CourseName, OP.OpNo, OP.PatientName,  OP.GenderId, A.AllotId, (CAST(OP.Age as varchar(20)) + '/' + Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End ) as AgeGender
FROM StudentAllotment AS A INNER JOIN MASDepartment AS D ON A.DeptId = D.DeptId INNER JOIN ReferralStatus AS R ON R.ReferredId = A.ReferredId INNER JOIN
MASStudentRegistration AS SR ON A.StudentId = SR.StudentId INNER JOIN MASCourse AS C ON SR.StudentCourseId = C.CourseId INNER JOIN
MASCourseYear AS CY ON SR.StudentYearId = CY.CourseYearId INNER JOIN OPDPatientRegistration AS OP ON A.PatientId = OP.PatientId where A.AllotId={0}</value>
  </data>
  <data name="GetYearsbycourseId" xml:space="preserve">
    <value>select * from mascourseyear where CourseId={0} and delind=0</value>
  </data>
  <data name="RevisitedList" xml:space="preserve">
    <value>Select CONVERT(NVARCHAR(10),OPDR.RevisitDate,126) AS RevisitDateDisplay,OPD.OpNo,OPD.PatientName,OPDR.PatientId,
revisitid from OPDRevisitRegistration as OPDR
inner join OPDPatientRegistration as OPD on OPDR.PatientId=OPD.PatientId</value>
  </data>
  <data name="Arnett" xml:space="preserve">
    <value>Select a.*,null as PreRx,null as PostModulation from ORTHOStaticArnett  as a
left join ORTHOArnettDetails as b on a.ArnettStaticId=b.ArnettStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="GetToothNumByConsId" xml:space="preserve">
    <value>SELECT [RestorativeProId],[ConservativeId],[ToothNumber],[CavityType],[PhotographsCastsXray],[RestorativeMaterial],[CavityPreparation],[ImpressionPattern],[LinearBasesVarnish],[MatrixBandWedges],[Restoration],[FinishingAndRestoration],[DirectIndirectReview1],[DirectIndirectReview2],[DirectIndirectReview3],[DeepCariesReview1],[DeepCariesReview2],[DeepCariesReview3]  FROM CONSRestorativeProcedureDetails where ConservativeId={0}</value>
  </data>
  <data name="PaidBillsList" xml:space="preserve">
    <value>  select B.BillId,B.BillNo,CONVERT(VARCHAR(10), B.BillDateTime, 126) AS DisplayBillDateTime,OPD.OPNo,OPD.PatientName,MD.DeptName,B.BillAmount,('{2}/Billing/BillingReport?BillId='+ CAST(B.BillId as varchar(20))+'&amp;DeptId=' + CAST
(B.DeptId as varchar(20)))as Link from Billing as B
inner join opdpatientregistration  as OPD on opd.PatientId=B.PatientId
inner join MASDepartment as MD on MD.DeptId=B.DeptId where B.BillCancelled='N'
and (CONVERT(VARCHAR(10), B.BillDateTime, 126)  between '{0}' and '{1}') order by B.BillId desc</value>
  </data>
  <data name="GetServicesbyId" xml:space="preserve">
    <value>select * from masbillingservices where DeptId={0}</value>
  </data>
  <data name="ReportTreatmentDetails" xml:space="preserve">
    <value>SELECT  ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS RowNum,CONVERT(VARCHAR(10), R.FromDate, 126) as DisplayDate,OP.OpNo, OP.PatientName, OP.Age,R.FromDate,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,
R.TreatmentDate, R.TreatmentStatus FROM   ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId  
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}') AND R.ToDeptId ={2} AND R.TreatmentStatus=1</value>
  </data>
  <data name="Growth" xml:space="preserve">
    <value>Select a.*,null as PtValue from ORTHOStaticGrowth  as a left join ORTHOGrowthDetails as b on 
a.GrowthStaticId=b.GrowthStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="DeleteScheduleDet" xml:space="preserve">
    <value>delete from OMFSIPScheduleDetails WHERE ScheduleId={0}</value>
  </data>
  <data name="BillGst" xml:space="preserve">
    <value>select (sum(MS.CGST)+SUM(MS.SGST))as gst from billqueuedetails as BQ
inner join MASBillingServices as MS on MS.ServiceId=BQ.ServiceId
where BQ.PatientId={0} and BQ.DeptId={1}</value>
  </data>
  <data name="Treatments" xml:space="preserve">
    <value>SELECT  TreatmentId,TreatmentName from TreatmentTypes where Visibility='Y' and deptid={0}</value>
  </data>
  <data name="GetUserbyId" xml:space="preserve">
    <value>select ur.id, u.userid ,firstname, lastname, password, username, ur.roleid, rolename from [user] as u
inner join UserRoles as ur on ur.userid=u.userid
inner join [role]as r on r.roleid=ur.roleid where  u.userid={0}</value>
  </data>
  <data name="TweedsforPatient" xml:space="preserve">
    <value> Select * from ORTHOTweedsDetails as a
inner join ORTHOStaticTweeds as b on b.TweedsStaticId=a.TweedsStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as TweedsId,TweedsStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,TweedsStaticId,Angle,Mean,DelInd from ORTHOStaticTweeds where DelInd = 0 and  TweedsStaticId not in (
Select b.TweedsStaticId from ORTHOTweedsDetails as a
inner join ORTHOStaticTweeds as b on b.TweedsStaticId=a.TweedsStaticId where (b.DelInd = 0) and OrthoId={0}  )</value>
  </data>
  <data name="FrontalGrumforPatient" xml:space="preserve">
    <value> Select * from ORTHOFrontalGrumDetails as a
inner join ORTHOStaticFrontalGrum as b on b.FrontalGrumStaticId=a.FrontalGrumStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as FrontalGrumId,FrontalGrumStaticId,0 as OrthoId,null as LeftPreRx,null as LeftPostRx,null as RightPreRx,null as RightPostRx,null as DiffPreRx,null as DiffPostRx,FrontalGrumStaticId,Field,DelInd from ORTHOStaticFrontalGrum where DelInd = 0 and  FrontalGrumStaticId not in (
Select b.FrontalGrumStaticId from ORTHOFrontalGrumDetails as a
inner join ORTHOStaticFrontalGrum as b on b.FrontalGrumStaticId=a.FrontalGrumStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="SchwarzforPatient" xml:space="preserve">
    <value> Select * from ORTHOSchwarzDetails as a
inner join ORTHOStaticSchwarz as b on b.SchwarzStaticId=a.SchwarzStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as SchwarzId,SchwarzStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,SchwarzStaticId,Parameters,Mean, DelInd from ORTHOStaticSchwarz where DelInd = 0 and  SchwarzStaticId not in (
Select b.SchwarzStaticId from ORTHOSchwarzDetails as a
inner join ORTHOStaticSchwarz as b on b.SchwarzStaticId=a.SchwarzStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="LaboratoryTestNameHeading" xml:space="preserve">
    <value> select RD.LaboratoryId,RD.LaboratoryDetId,RD.ServiceId,RD.TeethNo,BS.ServiceName,MG.GroupName,RT.RadioTempId,RR.PatientId,MB.DeptId
from LaboratoryRegistrationDetails as RD
inner join MasBillingServices as BS on RD.ServiceId=BS.ServiceId
inner join RADIOTemplate as RT on RT.ServiceId=BS.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
inner join LaboratoryRegistration as RR on RD.LaboratoryId=RR.LaboratoryId
inner join MASBillingServices as MB on MB.ServiceId=Rd.ServiceId
where RD.ServiceId={0} and RD.LaboratoryDetId={1}</value>
  </data>
  <data name="DeptTreatmentforReport" xml:space="preserve">
    <value>select BQ.TeethNo, MB.serviceName,BQ.Qty,BQ.NetAmount,BD.NetAmount as PaidAmount,B.BillNo,CONVERT(VARCHAR(10), B.BillDateTime, 126) AS BillDateTimeDisplay from BillQueueDetails  BQ
left join billingdetails BD on BQ.BillQueueId=BD.BillQueueId
left join Billing as B on B.BillId=BD.BillId
left join MASBillingServices MB on MB.ServiceId=BD.ServiceId
where B.PatientId={0} and BQ.deptid={1} and BQ.CaserecordId={2} and BQ.ReferredTreatmentId={3} and mb.deptid ={1}
union
select BQ.TeethNo, MB.serviceName,BQ.Qty,BQ.NetAmount,null as PaidAmount,null as BillNo,null as BillDateTimeDisplay from BillQueueDetails  BQ
left join MASBillingServices MB on MB.ServiceId=BQ.ServiceId
where BQ.IsBillPaid='N' and PatientId={0} and BQ.deptid={1} and BQ.CaserecordId={2} and BQ.ReferredTreatmentId={3} and mb.deptid ={1}</value>
  </data>
  <data name="AllotWithDateOMFS" xml:space="preserve">
    <value>SELECT     SA.AllotId, CONVERT(VARCHAR(10), SA.AllotDate, 126) AS AllotDate, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, SR.StudentName, SR.StudentRegNo, SA.PatientId,
SA.ReferredId, SA.DeptId, SA.StudentId ,OM.ScheduleId,
('/{3}/Operations?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;patientId=' + CAST(SA.PatientId as varchar(20))+'&amp;ScheduleId=' + CAST(OM.ScheduleId as varchar(20)) )as Link 
FROM StudentAllotment AS SA INNER JOIN
OPDPatientRegistration AS P ON SA.PatientId = P.PatientId INNER JOIN
MASCode AS C ON C.CodeId = P.TitleId INNER JOIN MASStudentRegistration AS SR ON SA.StudentId = SR.StudentId 
INNER JOIN ReferralStatus AS R ON P.PatientId = R.PatientId
INNER JOIN OMFSIPSchedule as OM on OM.PatientId=P.PatientId
WHERE (SA.DeptId ={0}) and (R.ToDeptId ={0}) and  R.TreatmentStatus=0 and 
(Convert(varchar(10), SA.AllotDate,126)between '{1}' and '{2}')  order by SA.AllotId desc</value>
  </data>
  <data name="OMRPatientTreatmentList" xml:space="preserve">
    <value>SELECT     OMRId, PatientId, OMRNo,CONVERT(VARCHAR(10), OMRDate, 126) AS OMRDateDisplay ,ChiefComplaint 
FROM       OMRCasesheet   where PatientId ={0} order by  OMRId desc</value>
  </data>
  <data name="GetTemplateDetbyId" xml:space="preserve">
    <value>select * from radiotemplatedetails where  RadioTempId={0} and RadioTempDetId not in ({1})</value>
  </data>
  <data name="PHDSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PHD.PHDId ORDER BY SA.AllotId DESC) AS rn, 
PHD.PHDId, SA.AllotId, SA.AllotDate,CONVERT(VARCHAR(10),  PHD.LastVisitedDate, 126) as PHDDate,OP.OpNo, PHD.PHDNo,(OP.PatientName) as PatientName, OP.Age, OP.GenderId,OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
 OP.Area, Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,('{3}/PHD/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PHDId=' + CAST(PHD.PHDId as varchar(20)) )as Link, CASE WHEN PHD.SendForApproval1 =1  AND PHD.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PHD.SendForApproval2 =1  AND PHD.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PHD.SendForApproval3 =1  AND PHD.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PHD.Approval3=1 THEN 'Final level'when PHD.Approval2=1 then '2nd level'				
WHEN PHD.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM PHDCasesheet AS PHD 
INNER JOIN OPDPatientRegistration AS OP ON PHD.PatientId = OP.PatientId 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
 WHERE ((Convert(varchar(10),  R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2}  AND {4}) SELECT * FROM cte WHERE rn = 1 order by  PHDID desc</value>
  </data>
  <data name="Bjroks" xml:space="preserve">
    <value>Select a.*,null as PreRx,null as During,null as PostRx from ORTHOStaticBjroks  as a 
left join ORTHOBjroksDetails as b on a.BjroksStaticId=b.BjroksStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="PROSRPDRegPatient" xml:space="preserve">
    <value>select ProsthoRPDid,ProsthoRPDNo,CONVERT(varchar(10), prosthoRPDdate,126) as ProsthoRPDdateDisplay ,chiefcomplaint as prosRPDchiefcomplaint 
from PROSRPDCasesheet where patientid={0}</value>
  </data>
  <data name="DCardPROSTHOFPDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) P.ProsthoFPDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSFPDCasesheet AS P INNER JOIN OMRCasesheet AS MR ON MR.PatientId = P.PatientId INNER JOIN OPDPatientRegistration AS OP ON P.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="Schwarz" xml:space="preserve">
    <value>Select * from ORTHOStaticSchwarz where DelInd = 0</value>
  </data>
  <data name="GetRcToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSRootCanalDetails where ConservativeId={0}</value>
  </data>
  <data name="PROSCDRegPatient" xml:space="preserve">
    <value>select ProsthoCDid,ProsthoCDNo,CONVERT(varchar(10), ProsthoCDdate,126) as ProsthoCDdateDisplay ,chiefcomplaint as prosCDchiefcomplaint 
from PROSCDCasesheet where patientid={0}</value>
  </data>
  <data name="GetBillwiseCollectionforReport" xml:space="preserve">
    <value> SELECT  ROW_NUMBER() OVER(ORDER BY B.BillDateTime ASC) AS RowNum,CONVERT(VARCHAR(10), B.BillDateTime, 126) AS DisplayDate,
OP.OpNo,MD.DeptCode, MC.CodeDescription,SUM(bd.ServiceAmount) as TotalAmount,SUM(ISNULL(bd.DiscountAmt, 0))as DiscountAmt,SUM(bqd.BalanceAmount) as Balance,B.BillAmount as ReceivedAmount,OP.PatientId
 from Billing as B 
INNER JOIN OPDPatientRegistration AS OP ON B.PatientId = OP.PatientId
INNER JOIN MASDepartment AS MD ON MD.DeptId=B.DeptId
inner  join BILLingdetails as bd on bd.BillId=b.BillId
inner join BILLQUEUEDETAILS as bqd on bqd.BillQueueId=bd.BillQueueId
INNER JOIN BillingPaymentDetails AS BP ON BP.BillId=B.BillId
INNER JOIN MASCode AS MC ON MC.CodeId=BP.CodeId
where ((Convert(varchar(10), B.BillDateTime,126))between '{0}' and '{1}')  and {2}
group by BillDateTime,OpNo,DeptCode,CodeDescription,BillAmount,OP.PatientId</value>
  </data>
  <data name="DeptByName" xml:space="preserve">
    <value>Select * from MASDepartment where DeptId = {0}</value>
  </data>
  <data name="DisplayOmfsApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY OMFS.OMFSOPID ORDER BY SA.AllotId DESC) AS rn, OMFS.OMFSOPID ,(OP.PatientName) as PatientName, 
 CASE WHEN OMFS.SendForApproval1 =1  AND OMFS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN OMFS.SendForApproval2 =1  AND OMFS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN OMFS.SendForApproval3 =1  AND OMFS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN OMFS.Approval3=1 THEN 'Final level'when OMFS.Approval2=1 then '2nd level'				
WHEN OMFS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM OMFSOPCasesheet AS OMFS INNER JOIN OPDPatientRegistration AS OP ON  OMFS.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and OMFSOPId={1} order by  OMFSOPID desc</value>
  </data>
  <data name="AllotedPatientDetails" xml:space="preserve">
    <value>SELECT  SA.AllotId, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, CAT.CategoryName,
CASE WHEN SA.AllotTypeId =4 THEN  C1.CourseName  + '-' + D1.DoctorName ELSE
(C1.CourseName + '-' + SR.StudentName + '-' +  SR.StudentRegNo) END  AS  StudentName, SA.PatientId, SA.ReferredId, SA.DeptId, 
SA.StudentId, P.GenderId, P.Phone, P.Area, SA.DoctorId, SA.ProcedureNotes, SA.DoctorApproval, 
D.DoctorName, DT.DeptName 
FROM  StudentAllotment AS SA 
INNER JOIN OPDPatientRegistration AS P ON SA.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON C.CodeId = P.TitleId 
INNER JOIN MASStudentRegistration AS SR ON SA.StudentId = SR.StudentId 
INNER JOIN MASCourse AS C1 ON SA.AllotTypeId = C1.CourseId 
INNER JOIN MASDepartment AS DT ON SA.DeptId = DT.DeptId 
LEFT OUTER JOIN MASDoctor AS D ON SA.DoctorId = D.DoctorId 
LEFT OUTER JOIN MASDoctor AS D1 ON SA.StudentId = D1.DoctorId 
INNER JOIN MASCategory AS CAT ON CAT.CategoryId=P.CategoryId
WHERE (SA.AllotId = {0})</value>
  </data>
  <data name="DCardRevisitPROSCDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.ProsthoCDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSCDCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="LaboratorySearch" xml:space="preserve">
    <value>   select Distinct L.LaboratoryId,L.LaboratoryNo,L.BillId,CONVERT(VARCHAR(10),L.SampleCollectedDate, 126) 
as SampleCollectedDateDisplay,R.PatientId ,R.OpNo,R.PatientName,D.DeptCode,
('{2}/Laboratory/Edit?id='+ CAST(L.LaboratoryId as varchar(20)))as Link 
 from LaboratoryRegistration as L 
inner join OPDPatientRegistration as R on L.PatientId=R.PatientId
inner join BILLING as B on B.BillId=L.BillId
inner join MASDepartment as D on b.DeptId=d.DeptId
where (CONVERT(VARCHAR(10), L.SampleCollectedDate, 126)  between '{0}' and '{1}')</value>
  </data>
  <data name="PatientBillQueueDetails" xml:space="preserve">
    <value>SELECT   S.DeptId , S.ServiceName, BQ.ChildServiceId, BQ.BillQueueId, BQ.ServiceId, BQ.TeethNo, BQ.Qty, BQ.Rate, 
BQ.DiscountPer, BQ.NetAmount, BQ.Amount, (BQ.NetAmount -BQ.PaidAmount )as PayableAmount, PayableAmount as PayableRequestAmount,BQ.PaidAmount, 
BQ.BalanceAmount,IsApproved as Approvalvalue,Case when IsApproved='Y' then 'Approved' when IsApproved='N' then IsApproved End as ApprovalStatus  
FROM BillQueueDetails AS BQ INNER JOIN
MASBillingServices AS S ON BQ.ServiceId = S.ServiceId
WHERE     (BQ.PatientId = {0}) and BQ.DeptId={1} and BQ.ReferredTreatmentId={2} and BQ.IsBillPaid='N' {3}</value>
  </data>
  <data name="PERIOPatientTreatmentList" xml:space="preserve">
    <value>SELECT     PerioId, PatientId, PerioNo,CONVERT(VARCHAR(10), PerioDate, 126) AS PerioDateDisplay ,ChiefComplaint 
FROM       PERIOCasesheet   where PatientId ={0} order by  PerioId desc</value>
  </data>
  <data name="PROSDIMSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoDIMId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoDIMId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoDIMNo as ProsthoNo,
OP.OpNo,  OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/DIMEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSDIMId=' + CAST(PROS.ProsthoDIMId as varchar(20)) )as Link
,CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId INNER JOIN PROSDIMCasesheet AS PROS ON OP.PatientId = PROS.PatientId
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
 SA.DeptId ={2}  AND {4} ) SELECT * FROM cte WHERE rn = 1 order by  ProsthoDIMId desc</value>
  </data>
  <data name="DownsforPatient" xml:space="preserve">
    <value> Select * from ORTHODownsDetails as a
inner join ORTHOStaticDowns as b on b.DownsStaticId=a.DownsStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as DownsId,DownsStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,DownsStaticId,Measurements,Mean,DelInd from ORTHOStaticDowns where DelInd = 0 and  DownsStaticId not in (
Select b.DownsStaticId from ORTHODownsDetails as a
inner join ORTHOStaticDowns as b on b.DownsStaticId=a.DownsStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="AllotedProcedureNotesDetails" xml:space="preserve">
    <value> SELECT CONVERT(VARCHAR(10), A.AllotDate, 126) AS DisplayAllotDate , 
CASE WHEN A.AllotTypeId =4 THEN C1.CourseName + '-' +  D1.DoctorName ELSE
(C1.CourseName + '-' + S.StudentName + '-' +  S.StudentRegNo) END AS  StudentName,
A.DoctorApproval , D.DoctorName, A.ProcedureNotes,A.AllotId,  A.StudentId,A.DoctorId 
FROM StudentAllotment AS A INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS C1 ON A.AllotTypeId = C1.CourseId LEFT OUTER JOIN
MASDoctor AS D ON A.DoctorId = D.DoctorId LEFT OUTER JOIN MASDoctor AS D1 ON A.StudentId = D1.DoctorId 
where A.PatientId ={0} and  A.DeptId ={1} and  A.ReferredTreatmentId ={2}</value>
  </data>
  <data name="GetDrugDetailsN" xml:space="preserve">
    <value>SELECT OD.DrugDetailsId,OD.DrugId as DrugIdN,OD.OMFSIpId,OD.Dose as DoseN,Md.DrugName as DrugNameN from OMFSIPDrugDetails as OD
inner join MasDrug as Md on Md.DrugId=OD.DrugId
where OMFSIpId={0} and FromFlag={1}</value>
  </data>
  <data name="GetTraumatisedToothDetailsById" xml:space="preserve">
    <value>select * from CONSTraumatisedToothDetails where ConservativeId ={0} and TraumatisedToothId NOT IN ({1})</value>
  </data>
  <data name="GetTtToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSTraumatisedToothDetails where ConservativeId={0}</value>
  </data>
  <data name="PERIOSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PERIO.PerioId ORDER BY SA.AllotId DESC) AS rn, 
PERIO.PerioId, SA.AllotId, SA.AllotDate,CONVERT(VARCHAR(10),   PERIO.LastVisitedDate, 126) AS PerioDate,OP.OpNo, PERIO.PerioNo,
(OP.PatientName) as PatientName, OP.Age,  Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,OP.GenderId, OP.Area,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,('{3}/PERIO/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PerioId=' + CAST(PERIO.PerioId as varchar(20)) )as Link  , CASE WHEN PERIO.SendForApproval1 =1  AND PERIO.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PERIO.SendForApproval2 =1  AND PERIO.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PERIO.SendForApproval3 =1  AND PERIO.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PERIO.Approval3=1 THEN 'Final level'when PERIO.Approval2=1 then '2nd level'				
WHEN PERIO.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType       
FROM PERIOCasesheet AS PERIO 
INNER JOIN OPDPatientRegistration AS OP ON PERIO.PatientId = OP.PatientId 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
WHERE ((Convert(varchar(10),  R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2}  AND {4}) SELECT * FROM cte WHERE rn = 1 order by  PerioDate desc</value>
  </data>
  <data name="PEDOSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER 
(PARTITION BY PEDO.PEDOId ORDER BY SA.AllotId DESC) AS rn, PEDO.PEDOId,PEDO.PEDONo, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PEDO.LastVisitedDate, 126) as PEDODate,
OP.OpNo,(OP.PatientName) as PatientName, OP.Age, OP.GenderId, OP.Area,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PEDO/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PEDOId=' + 
CAST(PEDO.PEDOId as varchar(20)) )as Link
, CASE WHEN PEDO.SendForApproval1 =1  AND PEDO.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PEDO.SendForApproval2 =1  AND PEDO.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PEDO.SendForApproval3 =1  AND PEDO.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PEDO.Approval3=1 THEN 'Final level'when PEDO.Approval2=1 then '2nd level'				
WHEN PEDO.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType
 FROM PEDOCasesheet AS PEDO 
INNER JOIN OPDPatientRegistration AS OP ON PEDO.PatientId = OP.PatientId 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId
INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId 
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
 WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2}  AND {4}) 
 SELECT * FROM cte WHERE rn = 1 order by  PEDOId desc</value>
  </data>
  <data name="IsDummySearch" xml:space="preserve">
    <value>update IsDummyEnable set SearchForm='{0}',ReportForm='{1}' where DummyEnableId={2}</value>
  </data>
  <data name="DeleteAllotment" xml:space="preserve">
    <value>Delete from StudentAllotment where AllotId={0}</value>
  </data>
  <data name="PROSFPDRegPatient" xml:space="preserve">
    <value>select ProsthoFPDid,ProsthoFPDNo,CONVERT(varchar(10), prosthoFPDdate,126) as ProsthoFPDdateDisplay ,chiefcomplaint as prosFPDchiefcomplaint 
from PROSFPDCasesheet where patientid={0}</value>
  </data>
  <data name="PreviousPrescriptions" xml:space="preserve">
    <value>SELECT   COUNT(*) ,P.AllotId, CONVERT(VARCHAR(10), P.Prescriptiondate, 126) as DisplayDate, 
MD.DeptCode as Department,  D.DoctorName as Doctor
FROM         Prescriptions AS P INNER JOIN
MASDepartment AS MD ON P.DeptId = MD.DeptId INNER JOIN
MASDoctor AS D ON P.DoctorId = D.DoctorId INNER JOIN
MASStudentRegistration AS SR ON P.StudentId = SR.StudentId where P.PatientId={0} GROUP BY P.AllotId ,Prescriptiondate,
DeptCode,DoctorName</value>
  </data>
  <data name="OrpathApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/OralPathology/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId 
INNER JOIN ORPATHCasesheet as  ORP on ORP.RequisitionId=A.CaserecordId 
WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="DisplayProsCdApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY CD.ProsthoCDId  ORDER BY SA.AllotId DESC) AS rn, CD.ProsthoCDId ,(OP.PatientName) as PatientName, 
 CASE WHEN CD.SendForApproval1 =1  AND CD.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN CD.SendForApproval2 =1  AND CD.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN CD.SendForApproval3 =1  AND CD.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN CD.Approval3=1 THEN 'Final level'when CD.Approval2=1 then '2nd level'				
WHEN CD.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PROSCDCasesheet AS CD INNER JOIN OPDPatientRegistration AS OP ON  CD.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and ProsthoCDId={1} order by  ProsthoCDId desc</value>
  </data>
  <data name="SkeletalforPatient" xml:space="preserve">
    <value>Select * from ORTHOSkeletalDetails as a
inner join ORTHOStaticSkeletal as b on b.SkeletalStaticId=a.SkeletalStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="GetBlToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSBleachingDetails where ConservativeId={0}</value>
  </data>
  <data name="RevisitFollowupList" xml:space="preserve">
    <value>Select FW.FollowupId,CONVERT(NVARCHAR(10),FW.FollowupDate,126) AS FollowupDateDisplay,CONVERT(VARCHAR(20),FW.FollowupTime,100) as FollowupTimeDisplay,
FW.FollowupReason,MD.DeptName,FW.PatientId,FW.DeptId,OPD.OpNo,OPD.PatientName from FollowUp as FW inner join  OPDPatientRegistration as OPD on FW.PatientId=OPD.PatientId
inner join MASDepartment as MD on MD.DeptId=FW.DeptId where RevisitId is null and [Status] is null and FW.PatientId={0}</value>
  </data>
  <data name="McNamara" xml:space="preserve">
    <value>  Select * from ORTHOStaticMcNamara where DelInd = 0</value>
  </data>
  <data name="BillDetforServices" xml:space="preserve">
    <value>SELECT  Q.BillQueueId, Q.ServiceId, BS.ServiceName, Q.TeethNo, Q.Qty, Q.Rate,
Q.DiscountPer, Q.DiscountAmt,BS.DeptId,
 Q.Amount, Q.NetAmount , Q.PayableAmount ,Q.PaidAmount ,BS.GSTPercentage,CAST(ROUND((((Q.PayableAmount*BS.GSTPercentage)/100)/2),1)  as Numeric(18,2)) as SGST
,CAST(ROUND((((Q.PayableAmount*BS.GSTPercentage)/100)/2),1)  as Numeric(18,2))  as CGST
,CAST(ROUND(sum(PayableAmount+(((Q.PayableAmount*BS.GSTPercentage)/100)/2)+
 (((Q.PayableAmount*BS.GSTPercentage)/100)/2)),1)  as Numeric(18,2)) as TotalAmountafterTax ,'true' as IsChecked,Q.BalanceAmount
FROM    BillQueueDetails AS Q INNER JOIN
MASBillingServices AS BS ON Q.ServiceId = BS.ServiceId
where Q.IsBillPaid='N' and Q.IsApproved='Y' and Q.PatientId={0} and Q.DeptId ={1} and Q.BalanceAmount&lt;=0
group by BillQueueId,Q.ServiceId,ServiceName,TeethNo,Qty,Rate,DiscountPer,BS.DeptId,Amount,NetAmount,GSTPercentage,BalanceAmount,DiscountAmt,PayableAmount,PaidAmount
union
 SELECT  Q.BillQueueId, Q.ServiceId, BS.ServiceName, Q.TeethNo, Q.Qty, Q.Rate,
Q.DiscountPer, Q.DiscountAmt,BS.DeptId,
 Q.Amount, Q.NetAmount , Q.PayableAmount ,Q.PaidAmount ,BS.GSTPercentage,CAST(ROUND((((Q.PayableAmount*BS.GSTPercentage)/100)/2),1)  as Numeric(18,2)) as SGST
,CAST(ROUND((((Q.PayableAmount*BS.GSTPercentage)/100)/2),1)  as Numeric(18,2))  as CGST
,CAST(ROUND(sum(PayableAmount+(((Q.PayableAmount*BS.GSTPercentage)/100)/2)+
 (((Q.PayableAmount*BS.GSTPercentage)/100)/2)),1)  as Numeric(18,2)) as TotalAmountafterTax ,'true' as IsChecked,Q.BalanceAmount
FROM    BillQueueDetails AS Q INNER JOIN
MASBillingServices AS BS ON Q.ServiceId = BS.ServiceId
where Q.IsBillPaid='N' and Q.IsApproved='Y' and Q.PatientId={0} and Q.DeptId ={1} and Q.BalanceAmount &gt;0
group by BillQueueId,Q.ServiceId,ServiceName,TeethNo,Qty,Rate,DiscountPer,BS.DeptId,Amount,NetAmount,GSTPercentage,BalanceAmount,DiscountAmt,PayableAmount,PaidAmount</value>
  </data>
  <data name="GetBleachingDetailsById" xml:space="preserve">
    <value>select * from CONSBleachingDetails where ConservativeId ={0} and BleachingId NOT IN ({1})</value>
  </data>
  <data name="GetLabDetforAllDepts" xml:space="preserve">
    <value>select * from Laboratoryregistrationdetails  lr
inner join Laboratoryresultentry as lre on lr.LaboratoryDetId=lre.LaboratoryDetId
inner join MASBillingServices as ms on ms.ServiceId=lr.ServiceId
where lr.LaboratoryId={0}</value>
  </data>
  <data name="GetRadioNoforAllDept" xml:space="preserve">
    <value>SELECT LabId,LabNo + ' - ( ' + CONVERT(VARCHAR(10), RadioDate, 126)+ ' )' AS LabNo FROM  RADIORegistration WHERE PatientId={0}</value>
  </data>
  <data name="OpCensusCategoryDetails" xml:space="preserve">
    <value>SELECT     ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS RowNum,CONVERT(VARCHAR(10), R.FromDate, 126) AS DisplayDate, OP.OpNo, OP.PatientName, OP.Area,OP.CategoryId, OP.Age, R.FromDate, 
CASE WHEN OP.GenderId = 1 THEN 'Male' WHEN OP.GenderId = 2 THEN 'Female' WHEN OP.GenderId = 3 THEN 'Mx' END AS GenderName, R.VisitType, 
C.CodeDescription as CategoryName
FROM         ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.CategoryId
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}'){2} and  OP.CategoryId ={3} {4}</value>
  </data>
  <data name="GetSurgicalProDetailsById" xml:space="preserve">
    <value>select * from CONSSurgicalProcedureDetails where ConservativeId ={0} and SurgicalProId NOT IN ({1})</value>
  </data>
  <data name="DeleteUserDepartmentsById" xml:space="preserve">
    <value>Delete from UserDepartments where userid={0}</value>
  </data>
  <data name="TestNamesforEdit" xml:space="preserve">
    <value> select RD.LabId,RD.LabDetId,RD.ServiceId,RR.ResultId,RD.TeethNo,RD.TestDone,BS.ServiceName,MG.GroupName from RADIORegistrationDetails as RD
inner join MasBillingServices as BS on RD.ServiceId=BS.ServiceId
inner join RADIOTemplate as RT on RT.ServiceId=BS.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
left join RADIOResultEntry as RR on  RD.LabDetId=RR.LabDetId
where   RD.LabId={0}</value>
  </data>
  <data name="PROSFPDApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PROSTHO/FPDApproval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PROSFPDCASESHEET AS PRF ON PRF.ProsthoFPDId= A.CaserecordId  WHERE  (A.DoctorApproval = 'N' )  
AND  ReferredTreatmentId ={4}
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and  DeptId={2}  AND PATIENTID=A.PatientId AND CASERECORDID=ProsthoFPDId and ReferredTreatmentId ={4}) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} and ReferredTreatmentId ={4} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="PEDOApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PEDO/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal 
FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PEDOCasesheet as PC ON	PC.PEDOId=A.CaserecordId
WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="GetScheduleEditDetails" xml:space="preserve">
    <value>SELECT S.ScheduleId,S.PatientId,P.PatientName,P.OpNo,P.Age,CONVERT(VARCHAR(10),S.FromDate, 126) as FromDate ,P.genderId,
C.CodeDescription as TypeName,S.StatusId
from OMFSIPSchedule as S
inner join OPDPatientRegistration as P on P.PatientId=S.PatientId
inner join MASCode AS C ON C.CodeId = S.TypeId
WHERE  S.PatientId={0} and S.ScheduleId={1}</value>
  </data>
  <data name="DeletePcToothDetails" xml:space="preserve">
    <value>Delete From CONSPostAndCoreDetails where PostAndCoreId={0}</value>
  </data>
  <data name="LoadPrescription" xml:space="preserve">
    <value>  SELECT     P.PrescriptionId, P.PrescriptionDate, P.PatientId, P.DoctorId, P.StudentId, P.DeptId, P.ReferredTreatmentId, P.TypeId, P.PresMedication, P.PresStrength, P.PrescriptionQty, P.PresFrequency, P.PresTimes, C.CodeDescription as TypeName,D.DoctorName, S.StudentName, S.StudentRegNo FROM Prescriptions AS P INNER JOIN
MASCode AS C ON P.TypeId = C.CodeId INNER JOIN MASDoctor AS D ON P.DoctorId = D.DoctorId INNER JOIN
MASStudentRegistration AS S ON P.StudentId = S.StudentId where P.PatientId={0} and P.DeptId={1} and P.ReferredTreatmentId={2}</value>
  </data>
  <data name="GetRootCanalDetailsById" xml:space="preserve">
    <value>select * from CONSRootCanalDetails where ConservativeId ={0} and RootCanalId NOT IN ({1})</value>
  </data>
  <data name="Vertical" xml:space="preserve">
    <value>Select a.*,null as Inference,null as PreRx,null as PostModulation,null as Postrx,null as Retention,null as Change from ORTHOStaticVertical   as a 
left join ORTHOVerticalDetails  as b on a.VerticalStaticId=b.VerticalStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="PROSAllSearch" xml:space="preserve">
    <value>WITH cte1 AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoCDId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoCDId as ProsthoId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoCDNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area, 
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/CDEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSCDId=' + CAST(PROS.ProsthoCDId as varchar(20)) )as Link, CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
INNER JOIN PROSCDCasesheet AS PROS ON OP.PatientId = PROS.PatientId 
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
SA.DeptId ={2}  AND {4} ),

cte2 AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoDIMId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoDIMId as ProsthoId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoDIMNo as ProsthoNo,
OP.OpNo,  OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/DIMEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSDIMId=' + CAST(PROS.ProsthoDIMId as varchar(20)) )as Link
,CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
 INNER JOIN PROSDIMCasesheet AS PROS ON OP.PatientId = PROS.PatientId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
SA.DeptId ={2}  AND {4} ),

cte3 AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoFPDId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoFPDId as ProsthoId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoFPDNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/FPDEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSFPDId=' + CAST(PROS.ProsthoFPDId as varchar(20)) )as Link
,CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId INNER JOIN
PROSFPDCasesheet AS PROS ON OP.PatientId = PROS.PatientId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId

WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
SA.DeptId ={2}  AND {4} ) , 

cte4 AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.PatientId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoMFPId as ProsthoId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoMFPNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/MFPEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSMFPId=' + CAST(PROS.ProsthoMFPId as varchar(20)) )as Link
,CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId INNER JOIN 
PROSMFPCasesheet AS PROS ON OP.PatientId = PROS.PatientId
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
SA.DeptId ={2}  AND {4} ) ,

cte5 AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoRPDId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoRPDId as ProsthoId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoRPDNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/RPDEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSRPDId=' + CAST(PROS.ProsthoRPDId as varchar(20)) )as Link
,CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId INNER JOIN
PROSRPDCasesheet AS PROS ON OP.PatientId = PROS.PatientId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId

WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
SA.DeptId ={2}  AND {4} ) 

SELECT * FROM cte1  where rn =1 
UNION ALL
SELECT * FROM cte2   where rn =1 
UNION ALL
SELECT * FROM cte3   where rn =1 
UNION ALL
SELECT * FROM cte4   where rn =1 
UNION ALL
SELECT * FROM cte5   where rn =1</value>
  </data>
  <data name="BillTotalAmount" xml:space="preserve">
    <value>select PatientID,DeptId,sum(NetAmount) as NetAmount,sum(BalanceAmount) as BalanceAmount ,sum(PayableAmount) as PayableAmount 
from (
Select Distinct PatientID,DeptId,sum(Amount)as NetAmount,SUM(NetAmount -PayableAmount) AS BalanceAmount, SUM(PayableAmount)as PayableAmount
From BillQueueDetails AS A 
Where A.ISBILLPAID='N' and A.IsApproved='Y' and PatientId={0} and DeptId ={1}  and BalanceAmount&gt;0
Group By PatientID, DeptId 
Union
Select Distinct PatientID,DeptId,sum(Amount)as NetAmount,SUM(NetAmount -PayableAmount) AS BalanceAmount, SUM(PayableAmount)as PayableAmount
From BillQueueDetails AS A 
Where A.ISBILLPAID='N' and A.IsApproved='Y' and PatientId={0} and DeptId ={1}  and BalanceAmount&lt;=0
Group By PatientID, DeptId )Table_1
GROUP BY  PatientID, DeptId</value>
  </data>
  <data name="GetPatientCountforChart" xml:space="preserve">
    <value>select CONVERT(varchar(10), RegDate,103) AS DisplayDate,Count (*) as PatientId,convert(date ,RegDate)   from OPDPatientRegistration
where CONVERT(varchar(10), RegDate,126) between '{0}' and '{1}'
group by  CONVERT(varchar(10), RegDate,103),convert(date ,RegDate) order by convert(date ,RegDate)</value>
  </data>
  <data name="DCardOMFSSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.OMFSOpId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM OMFSOPCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="Tweeds" xml:space="preserve">
    <value>  Select * from ORTHOStaticTweeds where DelInd = 0</value>
  </data>
  <data name="ORTHOSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY ORTHO.ORTHOId ORDER BY SA.AllotId DESC) AS rn, ORTHO.ORTHOId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  ORTHO.LastVisitedDate, 126) as ORTHODate,OP.OpNo,ORTHO.ORTHONo,(OP.PatientName) as PatientName, OP.Age,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,OP.Phone, Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
OP.Area,('{3}/ORTHO/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;ORTHOId=' + CAST(ORTHO.ORTHOId as varchar(20)) )as Link
, CASE WHEN ORTHO.SendForApproval1 =1  AND ORTHO.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN ORTHO.SendForApproval2 =1  AND ORTHO.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN ORTHO.SendForApproval3 =1  AND ORTHO.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN ORTHO.Approval3=1 THEN 'Final level'when ORTHO.Approval2=1 then '2nd level'				
WHEN ORTHO.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType  FROM ORTHOCasesheet AS ORTHO 
INNER JOIN OPDPatientRegistration AS OP ON  ORTHO.PatientId = OP.PatientId 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId 
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2} AND {4} ) SELECT * FROM cte WHERE rn = 1 order by  ORTHOId desc</value>
  </data>
  <data name="DisplayPHDApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PHD.PHDId ORDER BY SA.AllotId DESC) AS rn, PHD.PHDId ,(OP.PatientName) as PatientName, 
 CASE WHEN PHD.SendForApproval1 =1  AND PHD.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PHD.SendForApproval2 =1  AND PHD.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PHD.SendForApproval3 =1  AND PHD.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PHD.Approval3=1 THEN 'Final level'when PHD.Approval2=1 then '2nd level'				
WHEN PHD.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PHDCasesheet AS PHD INNER JOIN OPDPatientRegistration AS OP ON  PHD.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and PHDId={1} order by  PHDId desc</value>
  </data>
  <data name="ReferralHomeWithDate" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY RS.PatientId ORDER BY RS.Priority ASC) AS rn, 
RS.ReferredId, RS.PatientId, CONVERT(VARCHAR(10), RS.FromDate, 126) AS FromDate, RIGHT(CONVERT(VARCHAR(50), RS.FromDate, 100), 7) AS FromTime,P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, P.Area, D.DeptCode AS FromDeptName, P.Phone,P.IsCreated,RS.ToDeptId,
RS.ReferredReason, SA.AllotId, ('class="btn btn-primary btn-xs" onclick="showModel('+ CAST(RS.PatientId as varchar(20))+',' + CAST( RS.ReferredId as varchar(20))+')"' )as ForAllotment FROM ReferralStatus AS RS  INNER JOIN OPDPatientRegistration AS P ON RS.PatientId = P.PatientId INNER JOIN MASDepartment AS D ON D.DeptId = RS.FromdeptId  INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
LEFT OUTER JOIN StudentAllotment AS SA ON RS.ReferredId = SA.ReferredId WHERE --(ToDeptId =2) and 
(SA.AllotId is  null or SA.AllotId=0 and RS.TreatmentStatus =0) and isapproved='Y' and (CONVERT(VARCHAR(10),  RS.FromDate, 126)  between '{1}' and '{2}')) SELECT * FROM cte WHERE  (ToDeptId ={0}) ORDER BY ReferredId DESC</value>
  </data>
  <data name="Ricketts" xml:space="preserve">
    <value>Select * from ORTHOStaticRicketts where DelInd = 0</value>
  </data>
  <data name="GetDoctorList" xml:space="preserve">
    <value>select * from MASdoctor where Surgeon ='Y' and DelInd =0 and DeptId={0}</value>
  </data>
  <data name="Rakosi" xml:space="preserve">
    <value> Select * from ORTHOStaticRakosi where DelInd = 0</value>
  </data>
  <data name="GetAllPermissions" xml:space="preserve">
    <value>select * from Permission</value>
  </data>
  <data name="DisplayProsDimApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY DIM.ProsthoDIMID ORDER BY SA.AllotId DESC) AS rn, DIM.ProsthoDIMID ,(OP.PatientName) as PatientName, 
CASE WHEN DIM.SendForApproval1 =1  AND DIM.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN DIM.SendForApproval2 =1  AND DIM.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN DIM.SendForApproval3 =1  AND DIM.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN DIM.Approval3=1 THEN 'Final level' when DIM.Approval2=1 then '2nd level'				
WHEN DIM.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PROSDIMCasesheet AS DIM INNER JOIN OPDPatientRegistration AS OP ON  DIM.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0)) SELECT * FROM cte WHERE rn = 1 and ProsthoDIMID={1} order by  ProsthoDIMID desc</value>
  </data>
  <data name="GetToothNumByPROSFPDId" xml:space="preserve">
    <value>SELECT  [AbutmentTeethId],[ProsthoFPDId],[ToothNumber],[Location],[Crown],[Size],[Fracture],[Length],[Discoloration],[Position],[Wearfacets],[Caries],[Restorations],[Vitality],[Mobility] FROM [PROSFPDAbutmentTeeth] where  ProsthoFPDId ={0}</value>
  </data>
  <data name="OMFSOpApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/OMFS/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN OMFSOPCasesheet as PC ON	PC.omfsopid=A.CaserecordId 
WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="TestNamesforLaboratoryEdit" xml:space="preserve">
    <value> select RD.LaboratoryId,RD.LaboratoryDetId,RD.ServiceId,RR.LaboratoryResultId,RD.TeethNo,RD.TestDone,
BS.ServiceName,MG.GroupName from LaboratoryRegistrationDetails as RD
inner join MasBillingServices as BS on RD.ServiceId=BS.ServiceId
inner join RADIOTemplate as RT on RT.ServiceId=BS.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
left join LaboratoryResultentry as RR on  RD.LaboratoryDetId=RR.LaboratoryDetId
where   RD.LaboratoryId={0}</value>
  </data>
  <data name="GrowthforPatient" xml:space="preserve">
    <value>Select * from ORTHOGrowthDetails as a
inner join ORTHOStaticGrowth as b on b.GrowthStaticId=a.GrowthStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="GetReferredReasonbyId" xml:space="preserve">
    <value>SELECT [ReferredId]
      ,[PatientId]
      ,[FromdeptId]
      ,[FromDate]
      ,[ReferredReason]
      ,[ToDeptId]
      ,[Priority]
      ,[RoomNo]
      ,[TreatmentStatus]
      ,[TreatmentDate]
      ,[ReferredTreatmentId]
      ,[VisitType]
      ,[RevisitId]
      ,[IsApproved] as Approvalvalue
      ,[ApprovedBy]
      ,[ApprovedDate]
      ,[CreatedBy]
      ,[ModifiedBy]
      ,[CreatedDate]
      ,[ModifiedDate]
      ,[CreatedSystem]
      ,[ModifiedSystem]
  FROM  [ReferralStatus]</value>
  </data>
  <data name="GetReToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSReRctDetails where ConservativeId={0}</value>
  </data>
  <data name="DeleteSpToothDetails" xml:space="preserve">
    <value>Delete From CONSSurgicalProcedureDetails where SurgicalProId={0}</value>
  </data>
  <data name="DisplayPedoApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PEDO.PEDOId ORDER BY SA.AllotId DESC) AS rn, PEDO.PEDOId ,(OP.PatientName) as PatientName, 
 CASE WHEN PEDO.SendForApproval1 =1  AND PEDO.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PEDO.SendForApproval2 =1  AND PEDO.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PEDO.SendForApproval3 =1  AND PEDO.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PEDO.Approval3=1 THEN 'Final level'when PEDO.Approval2=1 then '2nd level'				
WHEN PEDO.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PEDOCasesheet AS PEDO INNER JOIN OPDPatientRegistration AS OP ON  PEDO.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and PEDOId={1} order by  PEDOId desc</value>
  </data>
  <data name="UpdateScheduleApprovedStatus" xml:space="preserve">
    <value>update OMFSIPSchedule set  StatusId={0}  where ScheduleId={1} </value>
  </data>
  <data name="TreatmentsTypes" xml:space="preserve">
    <value>SELECT  * from TreatmentTypes where Visibility='Y' and deptid={0} order by treatmentcode</value>
  </data>
  <data name="GetLaboratoryRegDetails" xml:space="preserve">
    <value> select Distinct L. LaboratoryId,L. LaboratoryNo,L.BillId,
CONVERT(VARCHAR(10),L.SampleCollectedDate, 126) as SampleCollectedDateDisplay,L.SamplecollectedBy,
R.PatientId ,R.OpNo,R.PatientName,R.Age,R.GenderId,D.DeptCode 
from  LaboratoryRegistration as L 
inner join OPDPatientRegistration as R on L.PatientId=R.PatientId
inner join BILLING as B on B.BillId=L.BillId
inner join MASDepartment as D on b.DeptId=d.DeptId
where L. LaboratoryId={0}</value>
  </data>
  <data name="GetDrugDetailsList" xml:space="preserve">
    <value>SELECT OD.*,Md.DrugName from OMFSIPDrugDetails as OD
inner join MasDrug as Md on Md.DrugId=OD.DrugId
where OMFSIpId={0} and FromFlag={1}</value>
  </data>
  <data name="GetMDSStudentbyDeptId" xml:space="preserve">
    <value> SELECT StudentId,(StudentName +'  ('+ StudentRegNo +')' )as StudentName
FROM MASStudentRegistration WHERE StudentCourseId ={0}  and StudentYearId={1}  and DeptId={2} and DelInd=0</value>
  </data>
  <data name="OPCensusReportPatientDetailsBoth" xml:space="preserve">
    <value>SELECT  ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS RowNum,CONVERT(VARCHAR(10), R.FromDate, 126) as DisplayDate,OP.OpNo, OP.IsCreated, OP.PatientName,OP.CategoryId, OP.Age,R.FromDate,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,
VisitType   FROM   ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId  
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}'){2}

union

SELECT  ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS RowNum,CONVERT(VARCHAR(10), R.FromDate, 126) as DisplayDate,OP.OpNo, OP.IsCreated, OP.PatientName,OP.CategoryId, OP.Age,R.FromDate,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,
VisitType  FROM   ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId  
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}'){3} order by VisitType asc</value>
  </data>
  <data name="GetReferralDetforPatient" xml:space="preserve">
    <value>select * from referralstatus where PatientId={0} and FromdeptId={1}</value>
  </data>
  <data name="LoadServiceDept" xml:space="preserve">
    <value>select DeptId,(DeptCode +' - '+  DeptName) as DeptName from MASDepartment where IsService ='Y' AND DelInd=0
 Order by DeptId</value>
  </data>
  <data name="GetMfpTreatDetailsByProsMfpId" xml:space="preserve">
    <value>SELECT  [ProsMaxilloProId]
      ,[ProsthoMFPId]
      ,CONVERT(VARCHAR(10), MfpTreatmentDate, 126) as MfpTreatmentDateDisplay
      ,[MfpTreatmentDescription]
      ,[MfpRemarks]
  FROM [PROSMFPTreatmentDescription] where ProsthoMFPId={0}</value>
  </data>
  <data name="OPDRevisitSearch" xml:space="preserve">
    <value> Select CONVERT(NVARCHAR(10),OPDR.RevisitDate,126) AS RevisitDate,OPD.OpNo, OPD.PatientName AS PatientName, OPD.Phone,
OPD.Age,CASE WHEN OPD.GenderId = 1 THEN 'Male' ELSE 'Female' END AS Gender,OPD.Area,
('{2}/OPDRevisitRegistration/Edit?PatientId='+CAST(OPDR.PatientId as varchar(20))+'&amp;amp;RevisitId='+CAST(RevisitId as varchar(20)) )as Link
From OPDRevisitRegistration as OPDR
inner join OPDPatientRegistration as OPD on OPDR.PatientId=OPD.PatientId
INNER JOIN MASCode AS C ON C.CodeId = OPD.TitleId 
WHERE ((Convert(varchar(10),  RevisitDate,126) )between '{0}' and '{1}') AND {3}</value>
  </data>
  <data name="OPDFollowupSearchByDept" xml:space="preserve">
    <value> SELECT CONVERT(NVARCHAR(10), FW.FollowupDate, 126) AS FollowupDate, CONVERT(VARCHAR(20), FW.FollowupTime, 100) AS FollowupTime, OPD.OpNo,OPD.PatientName AS PatientName, OPD.Age, CASE WHEN opd.GenderId = 1 THEN 'Male' ELSE 'Female' END AS Gender, OPD.Area, MD.DeptCode, FW.FollowupReason, 
'{3}/OPDRevisitRegistration/Index?Id=' + CAST(FW.FollowupId AS varchar(20)) + '&amp;amp;DeptCode=' + CAST(MD.DeptCode AS varchar(20)) AS Revisit, '# onclick="showReschedue(' + CAST(FW.FollowupId AS varchar(20)) + ',' + CAST(FW.DeptId AS varchar(20)) + ')"' AS Reschedule, OPD.Phone FROM         FollowUp AS FW INNER JOIN
OPDPatientRegistration AS OPD ON FW.PatientId = OPD.PatientId INNER JOIN MASCode AS C ON C.CodeId = OPD.TitleId INNER JOIN MASDepartment AS MD ON MD.DeptId = FW.DeptId WHERE RevisitId is null and [Status] is null AND ((Convert(varchar(10),  FollowupDate,126) )between '{0}' and '{1}') and FW.DeptId={2} and  {4}</value>
  </data>
  <data name="RadioforCreate" xml:space="preserve">
    <value> select B.BillId,B.BillNo,CONVERT(VARCHAR(10),  B.BillDateTime, 126) as BillDateTimeDisplay,B.PatientId,R.OpNo,R.PatientName,R.Age,R.GenderId ,D.DeptCode
from Billing as B
inner join MasDepartment as D on B.DeptId=D.DeptId
inner join OPDPatientRegistration as R on B.PatientId=R.PatientId where B.BillId={0} and B.PatientId={1}</value>
  </data>
  <data name="AllotedPreviousDetails" xml:space="preserve">
    <value> SELECT A.StudentId,CONVERT(nvarchar(20),A.AllotDate,126) as DisplayAllotDate,
CASE WHEN A.AllotTypeId =4 THEN C1.CourseName + '-' +  D1.DoctorName ELSE
(C1.CourseName + '-' + R.StudentName + '-' +  R.StudentRegNo) END  AS  StudentName
FROM  StudentAllotment AS A INNER JOIN
MASStudentRegistration AS R ON A.StudentId = R.StudentId INNER JOIN
MASCourse AS C ON R.StudentCourseId = C.CourseId INNER JOIN
MASCourseYear AS CY ON R.StudentYearId = CY.CourseYearId
INNER JOIN MASCourse AS C1 ON A.AllotTypeId = C1.CourseId INNER JOIN
MASDepartment AS DT ON A.DeptId = DT.DeptId LEFT OUTER JOIN
MASDoctor AS D ON A.DoctorId = D.DoctorId LEFT OUTER JOIN
MASDoctor AS D1 ON A.StudentId = D1.DoctorId
WHERE  (A.PatientId = {0}) AND (A.DeptId = {1})</value>
  </data>
  <data name="DCardRevisitOMFSSearch" xml:space="preserve">
    <value> SELECT  TOP ({0}) MF.OMFSOpId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM OMFSOPCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="DeletePaymentDet" xml:space="preserve">
    <value>Delete from BillingPaymentDetails where BillId={0}</value>
  </data>
  <data name="GetSurgeonDetails" xml:space="preserve">
    <value>select S.DoctorId,D.DoctorName from OMFSIPScheduleDetails as S
  inner join Masdoctor as D on D.DoctorId=S.DoctorId
  where ScheduleId={0}</value>
  </data>
  <data name="GetBillDetailsforPatientReg" xml:space="preserve">
    <value> SELECT B.BillId,B.BillDateTime,BD.BillDetId,BD.BillQueueId,BP.BillPayId,BD.ServiceId
FROM BILLING AS B
INNER JOIN BillingDetails AS BD ON BD.BillId=B.BillId
INNER JOIN BillingPaymentDetails AS BP ON BP.BillId=B.BillId
WHERE B.PatientId={0} AND B.DeptId={1}</value>
  </data>
  <data name="PROSDIMRegPatient" xml:space="preserve">
    <value>select ProsthoDIMid,ProsthoDIMNo,CONVERT(varchar(10), prosthoDIMdate,126) as ProsthoDIMdateDisplay ,chiefcomplaint as prosDIMchiefcomplaint 
from PROSDIMCasesheet where patientid={0}</value>
  </data>
  <data name="GetMedicalAlertvaluesForOMR" xml:space="preserve">
    <value> SELECT P.PropertyName, (P.Header + ' : ' +V.PropValues ) as PropValues
FROM  OMRCasesheetPropertyValues AS V INNER JOIN
OMRCasesheetProperties AS P ON P.PropertyId = V.PropId
WHERE  (V.OMRId = (SELECT TOP 1 OMRId FROM OMRCasesheet WHERE PatientId= {0} ORDER BY OMRId DESC )) 
AND (P.PropertyId BETWEEN {1} AND {2})</value>
  </data>
  <data name="DeleteRfToothDetails" xml:space="preserve">
    <value>Delete From CONSIncompleteRootFormDetails where IncompleteRootId={0}</value>
  </data>
  <data name="LoadStudentScheduleFrom" xml:space="preserve">
    <value>SELECT StudentId,(StudentName +'  ('+ StudentRegNo +')' )as StudentName
FROM MASStudentRegistration WHERE StudentCourseId ={0} and StudentYearId={1}
and StudentId Not in ( SELECT SS.StudentId
FROM   MASStudentRegistration AS SR 
INNER JOIN StudentSchedule AS SS ON SR.StudentId = SS.StudentId
WHERE (SS.DelInd = 0) AND (SR.DelInd = 0) AND 
('{2}' BETWEEN SS.SchFromDate AND SS.SchToDate) AND 
('{3}' BETWEEN SS.SchFromDate AND SS.SchToDate) AND 
(SR.StudentCourseId = {0}) AND (SR.StudentYearId = {1}))</value>
  </data>
  <data name="AllotHomeWithDate" xml:space="preserve">
    <value>SELECT  distinct  SA.AllotId, CONVERT(VARCHAR(10), SA.AllotDate, 126) AS AllotDate, RIGHT(CONVERT(VARCHAR(50),SA.CreatedDate, 100), 7) 
AS AllotTime, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, P.Phone,
SA.AllotTypeId , C1.CourseName + '-' + D1.DoctorName AS  StudentName, SA.PatientId,SA.ReferredId, SA.DeptId, SA.StudentId,
('{3}/Operations?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;patientId=' + CAST(SA.PatientId as varchar(20)) )as Link ,
('class="btn btn-danger btn-xs" onclick="showCancelAllotment('+ CAST(SA.AllotId as varchar(20))+')"' )as  DeleteLink
FROM StudentAllotment AS SA INNER JOIN OPDPatientRegistration AS P ON SA.PatientId = P.PatientId INNER JOIN
MASCode AS C ON C.CodeId = P.TitleId 
INNER JOIN ReferralStatus AS R ON SA.ReferredId = R.ReferredId
LEFT OUTER JOIN
MASDoctor AS D1 ON SA.StudentId = D1.DoctorId
INNER JOIN
MASCourse AS C1 ON SA.AllotTypeId = C1.CourseId
WHERE (SA.DeptId ={0}) and (R.ToDeptId ={0}) and  SA.ReferredTreatmentId=0 and R.TreatmentStatus=0 and 
(Convert(varchar(10), SA.AllotDate,126)between '{1}' and '{2}')  order by SA.AllotId desc</value>
  </data>
  <data name="DiscrepancyforPatient" xml:space="preserve">
    <value>Select * from ORTHODiscrepancyDetails as a
inner join ORTHOStaticDiscrepancy as b on b.DiscrepancyStaticId=a.DiscrepancyStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="LoadStudentScheduleTo" xml:space="preserve">
    <value> SELECT SS.StudentId,(SR.StudentName +'  ('+ SR.StudentRegNo +')' )as StudentName
FROM   MASStudentRegistration AS SR 
INNER JOIN StudentSchedule AS SS ON SR.StudentId = SS.StudentId
WHERE (SS.DelInd = 0) AND (SR.DelInd = 0) AND (SS.DeptId = {4}) AND 
('{2}'BETWEEN SS.SchFromDate AND SS.SchToDate) AND 
('{3}' BETWEEN SS.SchFromDate AND SS.SchToDate) AND 
(SR.StudentCourseId = {0}) AND (SR.StudentYearId = {1})</value>
  </data>
  <data name="DCardRevisitPEDOSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.PEDOId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PEDOCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="GetLaboratoryReportHeaderDetails" xml:space="preserve">
    <value> select Distinct L. LaboratoryId,L. LaboratoryNo,L.BillId,B.BillNo,
CONVERT(VARCHAR(10),L.SampleCollectedDate, 126) as Dateofreceiving,L.SamplecollectedBy,
R.PatientId ,R.OpNo,R.PatientName,R.Age,R.GenderId,D.DeptCode,CONVERT(VARCHAR(10),LE.CreatedDate, 126) as DateofDispatch
 from  LaboratoryRegistration as L 
inner join OPDPatientRegistration as R on L.PatientId=R.PatientId
inner join BILLING as B on B.BillId=L.BillId
inner join MASDepartment as D on b.DeptId=d.DeptId
inner join  LaboratoryRegistrationDetails as RD on RD. LaboratoryId=L. LaboratoryId
inner join  LaboratoryResultEntry as LE on LE. LaboratoryDetId=RD. LaboratoryDetId
where L. LaboratoryId={0}</value>
  </data>
  <data name="UpdateOMFSReferredTreamentId" xml:space="preserve">
    <value>Update ReferralStatus Set ReferredTreatmentId={0} where ReferredId={1}</value>
  </data>
  <data name="ServiceDetails" xml:space="preserve">
    <value> select RTD.* from RADIOTemplateDetails as RTD
inner join RADIOTemplate RT on RTD.RadioTempId=RT.RadioTempId
inner join MASBillingServices MB on MB.ServiceId=RT.ServiceId
where RT.RadioTempId={0} and MB.DeptId={1}  order by DisplayOrder asc</value>
  </data>
  <data name="LaboratoryIndex" xml:space="preserve">
    <value>    select distinct  B.BillId,B.BillNo,CONVERT(VARCHAR(10),  B.BillDateTime, 126)  as BillDateTimeDisplay,B.PatientId,R.OpNo,R.PatientName,R.Age,
BS.DeptId,D.DeptCode,('{3}/Laboratory/Create?id='+ CAST(B.BillId as varchar(20))+'&amp;patientid=' + CAST(B.PatientId as varchar(20)) )as Link from 
Billing as B inner join BillingDetails as BD on BD.BillId=B.BillId 
inner join MasBillingServices as BS on BS.ServiceId=BD.ServiceId
inner join MasDepartment as D on D.DeptId=B.DeptId
inner join OPDPatientRegistration as R on B.PatientId=R.PatientId where BS.DeptId={0}
 and (CONVERT(VARCHAR(10), B.BillDateTime, 126)  between '{1}' and '{2}')and b.billid not in (select billid from LaboratoryRegistration)</value>
  </data>
  <data name="GetPatientDetailsforReschedule" xml:space="preserve">
    <value>select OPD.OpNo,C.CodeDescription + OPD.PatientName AS PatientName, OPD.Age, MD.DeptCode,
CASE WHEN opd.GenderId = 1 THEN 'Male' ELSE 'Female' END AS Gender, OPD.Area,F.PatientId from FollowUp as F
inner join OPDPatientRegistration as OPD on OPD.PatientId=f.PatientId
INNER JOIN MASCode AS C ON C.CodeId = OPD.TitleId
INNER JOIN MASDepartment AS MD ON MD.DeptId = F.DeptId
where FollowupId={0}</value>
  </data>
  <data name="StudentWiseCensusReport" xml:space="preserve">
    <value>select OP.OpNo,OP.PatientName ,CONVERT(VARCHAR(10), S.AllotDate, 126) as DisplayDate
   ,M.CourseYearName from StudentAllotment as S
   inner join OPDPatientRegistration as OP on op.PatientId=S.PatientId
   inner join MASStudentRegistration as ms on ms.StudentId=S.StudentId
   inner join MASCourseYear as M on    ms.StudentYearId=M.CourseYearId  where s.StudentId={0}</value>
  </data>
  <data name="Holdaway" xml:space="preserve">
    <value>  Select * from ORTHOStaticHoldaway where DelInd = 0</value>
  </data>
  <data name="DisplayApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY OMR.OMRId ORDER BY SA.AllotId DESC) AS rn, OMR.OMRId ,(OP.PatientName) as PatientName, 
 CASE WHEN OMR.SendForApproval1 =1  AND OMR.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN OMR.SendForApproval2 =1  AND OMR.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN OMR.SendForApproval3 =1  AND OMR.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN OMR.Approval3=1 THEN 'Final level'when OMR.Approval2=1 then '2nd level'				
WHEN OMR.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM OMRCasesheet AS OMR INNER JOIN OPDPatientRegistration AS OP ON  OMR.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and OMRId={1} order by  OMRId desc</value>
  </data>
  <data name="GetPcToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSPostAndCoreDetails where ConservativeId={0}</value>
  </data>
  <data name="GetPrescriptionDetailsforPatient" xml:space="preserve">
    <value> select  OPD.PatientName,CAST(OPD.Age AS VARCHAR(10)) + '/' + (Case when OPD.GenderId=1 then 'Male' 
when OPD.GenderId=2 
then 'Female' when OPD.GenderId=3 then 'Mx' End  )as AgeGender,
md.DoctorName as Doctor, P.PresMedication,M.CodeDescription as TypeName,P.PresStrength,P.PrescriptionQty,P.PresFrequency,P.PresDays,P.PresTimes from Prescriptions as P
inner join OPDPatientRegistration as OPD on opd.PatientId=p.PatientId
inner join MASDoctor as md on md.DoctorId=p.DoctorId
inner join  MASCode as M on M.CodeId=P.TypeId
where p.AllotId={0}</value>
  </data>
  <data name="GetStudentDetailsbyBatchId" xml:space="preserve">
    <value> SELECT StudentId,(StudentName +'  ('+ StudentRegNo +')' )as StudentName
FROM MASStudentRegistration WHERE StudentCourseId ={0}  and StudentYearId={1} and BatchTypeId={2} and DelInd=0</value>
  </data>
  <data name="FollowUpDetailsById" xml:space="preserve">
    <value>select PatientId,FollowupReason,DeptId from followup where FollowupId={0}</value>
  </data>
  <data name="OMFSIPSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY OM.OMFSIpId ORDER BY SA.AllotId DESC) AS rn, OM.OMFSIpId as ID, SA.AllotId,
 SA.AllotDate, CONVERT(VARCHAR(10),  OM.LastVisitedDate, 126) as Date,OM.OMFSIpNo as OMFSNo,OP.OpNo,(C.CodeDescription + OP.PatientName) as PatientName,
 OP.Age, Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,
 OP.GenderId, OP.Area,('{3}/OMFS/OMFSIPEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;OMFSIpId=' + CAST(OM.OMFSIpId as varchar(20)) )as Link 
 FROM OMFSIPCasesheet AS OM INNER JOIN OPDPatientRegistration AS OP ON  OM.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA 
 ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId 
 WHERE ((Convert(varchar(10), OM.LastVisitedDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2} ) SELECT * FROM cte WHERE rn = 1 order by  ID desc</value>
  </data>
  <data name="FollowUpDetailsList" xml:space="preserve">
    <value>SELECT     FollowupId,CONVERT(NVARCHAR(10),FollowupDate,126) AS FollowupDateDisplay ,   
CONVERT(VARCHAR(20),  FollowupTime, 100) as FollowupTimeDisplay,
FollowupReason
FROM  FollowUp WHERE PatientId={0} AND DeptId={1} and ReferredTreatmentId ={2} order by FollowupId desc</value>
  </data>
  <data name="ReferredToOthers" xml:space="preserve">
    <value>SELECT ReferredOthersId,DoctorName,HospitalName,referredothersreason FROM ReferredToOthers where deptid={0} and patientid={1} and caserecordid={2} and treatmentid={3}</value>
  </data>
  <data name="GetTestNamesforReport" xml:space="preserve">
    <value> select 
mb.ServiceName,rt.ServiceItems,rt.IsHeader,result,re.LabDetId
from RADIOResultEntryDetails  as rd 
inner join RADIOResultEntry as re on re.ResultId=rd.ResultId
inner join RADIOTemplateDetails as rt on rt.RadioTempDetId=rd.RadioTempDetId
inner join MASBillingServices as mb on mb.ServiceId=re.ServiceId 
where re.LabDetId in(select rr.LabDetId from RADIORegistrationDetails as r 
inner join RADIOResultEntry as rr on rr.LabDetId=r.LabDetId 
where labid={0})</value>
  </data>
  <data name="MandibleforPatient" xml:space="preserve">
    <value>Select * from ORTHOCranialMandDetails as a
inner join ORTHOStaticMandCranial as b on b.CranialManStaticId=a.CranialManStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="GetExistSchedule" xml:space="preserve">
    <value>SELECT ScheduleId,PatientId, FromDate ,   
CONVERT(VARCHAR(20),  FromTime, 100) as FromTime,Duration,Operation,TypeId
FROM  OMFSIPSchedule WHERE PatientId={0} and  ScheduleId={1}</value>
  </data>
  <data name="DisplayProsMfpApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY MFP.ProsthoMFPID ORDER BY SA.AllotId DESC) AS rn, MFP.ProsthoMFPID ,(OP.PatientName) as PatientName, 
CASE WHEN MFP.SendForApproval1 =1  AND MFP.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN MFP.SendForApproval2 =1  AND MFP.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN MFP.SendForApproval3 =1  AND MFP.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN MFP.Approval3=1 THEN 'Final level' when MFP.Approval2=1 then '2nd level'				
WHEN MFP.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PROSMFPCasesheet AS MFP INNER JOIN OPDPatientRegistration AS OP ON  MFP.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0)) SELECT * FROM cte WHERE rn = 1 and ProsthoMFPID={1} order by  ProsthoMFPID desc</value>
  </data>
  <data name="DCardRevisitPHDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.PHDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PHDCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="GetBillDetbyId" xml:space="preserve">
    <value>select * from BillingDetails where BillId=2</value>
  </data>
  <data name="LoadAllStudentInDept" xml:space="preserve">
    <value>SELECT StudentId,(StudentName +'  ('+ StudentRegNo +')' )as StudentName
FROM MASStudentRegistration WHERE StudentCourseId ={0} and StudentYearId={1}
and DelInd=0</value>
  </data>
  <data name="CONSApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/CONS/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId 
INNER JOIN CONSCASESHEET as  OM on OM.ConservativeId=A.CaserecordId WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="BillingQueueBalanceUpdate" xml:space="preserve">
    <value> update BillQueueDetails set BalanceAmount={0}, PayableAmount={1},PaidAmount={2}
where BillQueueId={3}</value>
  </data>
  <data name="PROSCDSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoCDId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoCDId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoCDNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area, 
  Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/CDEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSCDId=' + CAST(PROS.ProsthoCDId as varchar(20)))as Link
, CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
INNER JOIN ReferralStatus as R on SA.ReferredId=R.ReferredId 
INNER JOIN PROSCDCasesheet AS PROS ON OP.PatientId = PROS.PatientId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
 SA.DeptId ={2}  AND {4}) SELECT * FROM cte WHERE rn = 1 order by  ProsthoCDId desc</value>
  </data>
  <data name="GetUsersWithDepartment" xml:space="preserve">
    <value>select u.userid, (firstname+' '+lastname) as Name, username, rolename,('{0}/User/Edit?Id='+CAST(u.userid as varchar(20)))as Link from [user]as u
inner join UserRoles as ur on ur.userid=u.userid inner join userdepartments as ud on ud.userid=u.userid  
inner join [role]as r on r.roleid=ur.roleid where u.userid!=1 and deptid={1}</value>
  </data>
  <data name="BillPayment" xml:space="preserve">
    <value>select  a.*  from BillingPaymentDetails as a  
inner join billing b on  a.BillId=b.BillId 
inner join billingdetails c on a.BillId=c.BillId
where b.PatientId={0} and c.IsBillPaid='N'</value>
  </data>
  <data name="DCardRevisitPROSFPDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.ProsthoFPDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSFPDCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="UpdateReschedulebyFollowUpId" xml:space="preserve">
    <value>update FollowUp set FollowupDate='{0}' ,FollowupTime='{1}',FollowupReason='{2}' where FollowupId={3}</value>
  </data>
  <data name="PROSRPDSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoRPDId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoRPDId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoRPDNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
  Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/RPDEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSRPDId=' + CAST(PROS.ProsthoRPDId as varchar(20)) )as Link
, CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
INNER JOIN PROSRPDCasesheet AS PROS ON OP.PatientId = PROS.PatientId
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
 SA.DeptId ={2}  AND {4} ) SELECT * FROM cte WHERE rn = 1 order by  ProsthoRPDId desc</value>
  </data>
  <data name="GetSelectedSurgeonList" xml:space="preserve">
    <value>select * from MASDoctor where DoctorId not in (select DoctorId from OMFSIPScheduleDetails where ScheduleId={0}) and  DeptId={1}
and surgeon='Y' and DelInd =0</value>
  </data>
  <data name="FrontalEsthetics" xml:space="preserve">
    <value>Select * from ORTHOStaticFrontalEsthetics where DelInd = 0</value>
  </data>
  <data name="CheckforResult" xml:space="preserve">
    <value>select * from  RADIOResultEntry where ResultId={0}</value>
  </data>
  <data name="DCardActualCount" xml:space="preserve">
    <value> SELECT  ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS ActualCount FROM   ReferralStatus AS R  INNER JOIN OPDPatientRegistration AS OP 
  ON OP.PatientId = R.PatientId WHERE ((Convert(varchar(10), R.TreatmentDate,126) )= '{0}') AND 
  R.ToDeptId ={1} and {2} AND R.TreatmentStatus=1 and {3}</value>
  </data>
  <data name="VerticalforPatient" xml:space="preserve">
    <value>Select * from ORTHOVerticalDetails as a
inner join ORTHOStaticVertical as b on b.VerticalStaticId=a.VerticalStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="GetIsDummyDetails" xml:space="preserve">
    <value>SELECT TOP 1 * from IsDummyEnable</value>
  </data>
  <data name="PROSMFPSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.PatientId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoMFPId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoMFPNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/MFPEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSMFPId=' + CAST(PROS.ProsthoMFPId as varchar(20)) )as Link, CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId INNER JOIN
PROSMFPCasesheet AS PROS ON OP.PatientId = PROS.PatientId
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
 SA.DeptId ={2}  AND {4} ) SELECT * FROM cte WHERE rn = 1 order by  ProsthoMFPId desc</value>
  </data>
  <data name="GetInferencebyOrthoId" xml:space="preserve">
    <value>select * from ORTHOInferenceDetails where OrthoId={0}</value>
  </data>
  <data name="DisplayProsFpdApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY FPD.ProsthoFPDID ORDER BY SA.AllotId DESC) AS rn, FPD.ProsthoFPDID ,(OP.PatientName) as PatientName, 
CASE WHEN FPD.SendForApproval1 =1  AND FPD.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN FPD.SendForApproval2 =1  AND FPD.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN FPD.SendForApproval3 =1  AND FPD.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN FPD.Approval3=1 THEN 'Final level' when FPD.Approval2=1 then '2nd level'				
WHEN FPD.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PROSFPDCasesheet AS FPD INNER JOIN OPDPatientRegistration AS OP ON  FPD.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0)) SELECT * FROM cte WHERE rn = 1 and ProsthoFPDID={1} order by  ProsthoFPDID desc</value>
  </data>
  <data name="GetRfToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSIncompleteRootFormDetails where ConservativeId={0}</value>
  </data>
  <data name="Mandible" xml:space="preserve">
    <value>Select a.*,null as PtValue from ORTHOStaticMandCranial  as a left join ORTHOCranialMandDetails as b on
 a.CranialManStaticId=b.CranialManStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="SteinerforPatient" xml:space="preserve">
    <value> Select * from ORTHOSteinerDetails as a
inner join ORTHOStaticSteiner as b on b.SteinerStaticId=a.SteinerStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as SteinerId,SteinerStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,SteinerStaticId,Letters,Measurements,Mean, DelInd from ORTHOStaticSteiner where DelInd = 0 and  SteinerStaticId not in (
Select b.SteinerStaticId from ORTHOSteinerDetails as a
inner join ORTHOStaticSteiner as b on b.SteinerStaticId=a.SteinerStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="GetSchedule" xml:space="preserve">
    <value>SELECT ScheduleId,PatientId, FromDate ,   
CONVERT(VARCHAR(20),  FromTime, 100) as FromTime,Duration,Operation,TypeId
FROM  OMFSIPSchedule WHERE ScheduleId={0}</value>
  </data>
  <data name="OrpathPatientTreatmentList" xml:space="preserve">
    <value>SELECT     RequisitionId, PatientId, RequisitionNo,CONVERT(VARCHAR(10), RequisitionDate, 126) AS RequisitionDateDisplay ,MChiefComplaint,BChiefComplaint
FROM       ORPATHCasesheet   where PatientId ={0} order by  RequisitionId desc</value>
  </data>
  <data name="PROSMFPApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PROSTHO/MFPApproval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PROSMFPCASESHEET AS MFP ON MFP.ProsthoMFPId= A.CaserecordId   WHERE  (A.DoctorApproval = 'N' )  
and ReferredTreatmentId ={4}
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=A.PatientId AND CaserecordId=ProsthoMFPId and ReferredTreatmentId ={4}) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} and ReferredTreatmentId ={4} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="OMFSIpApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/OMFS/IpApproval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link FROM  StudentAllotment AS A INNER JOIN OPDPatientRegistration 
AS P ON A.PatientId = P.PatientId INNER JOIN MASCode AS C ON P.TitleId = C.CodeId INNER JOIN 
MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId INNER JOIN MASCourseYear AS CY ON 
S.StudentYearId = CY.CourseYearId  INNER JOIN OMFSIPCasesheet as PC ON	PC.PatientId=P.PatientId
WHERE  (A.ProcedureNotes IS NOT NULL) AND (A.DoctorApproval = 'N') AND 
(A.ProcedureNotesDate between '{0}' and '{1}') and A.deptid='{2}'
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="Downs" xml:space="preserve">
    <value> 
Select * from ORTHOStaticDowns where DelInd = 0</value>
  </data>
  <data name="ArnettforPatient" xml:space="preserve">
    <value>Select * from ORTHOArnettDetails as a
inner join ORTHOStaticArnett as b on b.ArnettStaticId=a.ArnettStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="DCardORTHOSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) O.OrthoId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM ORTHOCasesheet AS O INNER JOIN OMRCasesheet AS MR ON MR.PatientId = O.PatientId INNER JOIN OPDPatientRegistration AS OP ON O.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="OMRSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY OMR.OMRId ORDER BY SA.AllotId DESC) AS rn, OMR.OMRId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  OMR.LastVisitedDate, 126) as OMRDate,OP.OpNo,OMR.OMRNo,(OP.PatientName) as PatientName, OP.Age,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,OP.Phone, Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
OP.Area,('{3}/OMR/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;OMRId=' + CAST(OMR.OMRId as varchar(20)) )as Link
, CASE WHEN OMR.SendForApproval1 =1  AND OMR.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN OMR.SendForApproval2 =1  AND OMR.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN OMR.SendForApproval3 =1  AND OMR.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN OMR.Approval3=1 THEN 'Final level'when OMR.Approval2=1 then '2nd level'				
WHEN OMR.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType  FROM OMRCasesheet AS OMR INNER JOIN OPDPatientRegistration AS OP ON  OMR.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2} AND {4} ) SELECT * FROM cte WHERE rn = 1 order by  OMRId desc</value>
  </data>
  <data name="PaidBillsforReport" xml:space="preserve">
    <value> select BQ.TeethNo, MB.serviceName,BQ.Qty,BQ.NetAmount,BD.NetAmount as PaidAmount,B.BillNo,CONVERT(VARCHAR(10), B.BillDateTime, 126) AS BillDateTimeDisplay from BillQueueDetails  BQ
left join billingdetails BD on BQ.BillQueueId=BD.BillQueueId
left join Billing as B on B.BillId=BD.BillId
left join MASBillingServices MB on MB.ServiceId=BD.ServiceId
where B.PatientId={0} and BQ.deptid={1} and BQ.CaserecordId={2} and BQ.ReferredTreatmentId={3} and mb.deptid in ({4},{5})
union
select BQ.TeethNo, MB.serviceName,BQ.Qty,BQ.NetAmount,null as PaidAmount,null as BillNo,null as BillDateTimeDisplay from BillQueueDetails  BQ
left join MASBillingServices MB on MB.ServiceId=BQ.ServiceId
where BQ.IsBillPaid='N' and PatientId={0} and BQ.deptid={1} and BQ.CaserecordId={2} and BQ.ReferredTreatmentId={3} and mb.deptid in ({4},{5})</value>
  </data>
  <data name="Skeletal" xml:space="preserve">
    <value>Select a.*,null as Inference,null as PreRx,null as PostModulation,null as Postrx,null as Retention,null as Change from ORTHOStaticSkeletal   as a 
left join ORTHOSkeletalDetails  as b on a.SkeletalStaticId=b.SkeletalStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="ScheduleApprovedSearch" xml:space="preserve">
    <value>SELECT     RS.ReferredId, RS.PatientId, CONVERT(VARCHAR(10), OM.FromDate, 126) AS FromDate, P.OpNo,P.GenderId,
C.CodeDescription + P.PatientName AS PatientName, P.Age, P.Area, D.DeptCode AS FromDeptName, 
RS.ReferredReason, SA.AllotId,  OM.ScheduleId,OM.statusId,
('#  class="btn btn-primary btn-xs" onclick="showUGModel('+ CAST(RS.PatientId as varchar(20))+',' + CAST( RS.ReferredId as varchar(20))+')"' )as UGStudent,
('#  class="btn btn-primary btn-xs" onclick="showPGModel('+ CAST(RS.PatientId as varchar(20))+',' + CAST( RS.ReferredId as varchar(20))+')"' )as PGStudent
FROM ReferralStatus AS RS 
INNER JOIN OPDPatientRegistration AS P ON RS.PatientId = P.PatientId 
INNER JOIN MASDepartment AS D ON D.DeptId = RS.FromdeptId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
LEFT OUTER JOIN StudentAllotment AS SA ON RS.ReferredId = SA.ReferredId 
inner join OMFSIPSchedule as OM ON RS.PatientId=OM.PatientId
WHERE   (ToDeptId ={0})  and SA.AllotId is null
--and (RS.ReferredId not in (Select ReferredId from OMFSIPSchedule where statusId= {3} and ReferredId is not null)) and (RS.ReferredTreatmentId={4})  
and (CONVERT(VARCHAR(10),  OM.FromDate, 126)  between '{1}' and '{2}') and OM.statusId={3}</value>
  </data>
  <data name="OPDSearch" xml:space="preserve">
    <value>  SELECT  OP.PatientId, CONVERT(VARCHAR(10), OP.RegDate, 126) AS RegDate,  RIGHT(CONVERT(VARCHAR(30), OP.REGDATE, 100), 7)   AS RegTime ,OP.OpNo,  CT.CategoryName as Category,OP.PatientName AS PatientName, OP.Age, OP.Area,
('{2}/Registration/Edit?Id='+ CAST(OP.PatientId as varchar(20)) )as Link,
CASE when CONVERT(VARCHAR(10), OP.RegDate, 126) =  CONVERT(VARCHAR(10), getdate(), 126) then '0'   else 
('{2}/OPDRevisitRegistration/Create?Id='+ CAST(OP.PatientId as varchar(20)))   END AS   Revisit
FROM  OPDPatientRegistration AS OP 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
INNER JOIN MASCategory AS CT ON OP.CategoryId = CT.CategoryId
WHERE ((Convert(varchar(10),  OP.RegDate,126) )between '{0}' and '{1}') AND {3}</value>
  </data>
  <data name="GetConsIncompleteRootFormDetailsById" xml:space="preserve">
    <value>select * from CONSIncompleteRootFormDetails where ConservativeId ={0} and IncompleteRootId NOT IN ({1})</value>
  </data>
  <data name="DeleteUserPermissions" xml:space="preserve">
    <value>Delete from UserDeptPermissions where userdeptid in (select userdeptid from UserDepartments where userid={0})</value>
  </data>
  <data name="RadioIndex" xml:space="preserve">
    <value> select distinct  B.BillId,B.BillNo,CONVERT(VARCHAR(10),  B.BillDateTime, 126)  as BillDateTimeDisplay,B.PatientId,R.OpNo,R.PatientName,R.Age,
BS.DeptId,D.DeptCode,('{3}/Radiology/Create?id='+ CAST(B.BillId as varchar(20))+'&amp;patientid=' + CAST(B.PatientId as varchar(20)) )as Link from Billing as B
inner join BillingDetails as BD on BD.BillId=B.BillId 
inner join MasBillingServices as BS on BS.ServiceId=BD.ServiceId
inner join MasDepartment as D on D.DeptId=B.DeptId
inner join OPDPatientRegistration as R on B.PatientId=R.PatientId where BS.DeptId={0} and (CONVERT(VARCHAR(10), B.BillDateTime, 126)  between '{1}' and '{2}')
and b.billid not in (select billid from radioregistration)</value>
  </data>
  <data name="DisplayConsApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY CONS.ConservativeId ORDER BY SA.AllotId DESC) AS rn, CONS.ConservativeId ,(OP.PatientName) as PatientName, 
 CASE WHEN CONS.SendForApproval1 =1  AND CONS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN CONS.SendForApproval2 =1  AND CONS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN CONS.SendForApproval3 =1  AND CONS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN CONS.Approval3=1 THEN 'Final level'when CONS.Approval2=1 then '2nd level'				
WHEN CONS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM CONSCasesheet AS CONS INNER JOIN OPDPatientRegistration AS OP ON  CONS.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and ConservativeId={1} order by  ConservativeId desc</value>
  </data>
  <data name="DCardPEDOSearch" xml:space="preserve">
    <value> SELECT  TOP ({0}) PE.PEDOId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PEDOCasesheet AS PE INNER JOIN OMRCasesheet AS MR ON MR.PatientId = PE.PatientId INNER JOIN OPDPatientRegistration AS OP ON PE.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="ORTHOApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/ORTHO/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId 
INNER JOIN ORTHOCaseSheet as  ORT on ORT.ORTHOId=A.CaserecordId WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="StudentScheduleSearch" xml:space="preserve">
    <value>  SELECT     SS.StudentSchId, SS.StudentId, SR.StudentName, SR.StudentRegNo, C.CourseName, CY.CourseYearName,CONVERT(varchar(11), SS.SchFromDate, 126) AS SchFromDateDisplay, CONVERT(varchar(11), SS.SchToDate, 126) AS SchToDateDisplay, 
D.DeptCode as DeptName FROM StudentSchedule AS SS INNER JOIN MASStudentRegistration AS SR ON 
SS.StudentId = SR.StudentId INNER JOIN MASDepartment AS D ON SS.DeptId = D.DeptId 
INNER JOIN MASCourse AS C ON SR.StudentCourseId = C.CourseId INNER JOIN
MASCourseYear AS CY ON SR.StudentYearId = CY.CourseYearId
WHERE     (SS.DelInd = 0) and  ('{0}' BETWEEN SS.SchFromDate AND SS.SchToDate) AND 
('{1}'  BETWEEN SS.SchFromDate AND SS.SchToDate) AND (SS.DeptId = {2})</value>
  </data>
  <data name="ReferralListWithLink" xml:space="preserve">
    <value>SELECT     R.ReferredId, R.PatientId, R.FromdeptId, CONVERT(VARCHAR(10), R.FromDate, 103) AS FromDateDisplay, R.ReferredReason, R.ToDeptId, R.Priority, R.RoomNo,CASE WHEN R.TreatmentStatus = 1 THEN 'Visited' ELSE 'Pending' END AS TreatmentStatus, CONVERT(VARCHAR(10), R.TreatmentDate, 126) AS TreatmentDateDisplay, R.ReferredTreatmentId, 
R.VisitType, FD.DeptCode AS FromDeptCode, TD.DeptCode AS ToDeptCode, S.CaserecordId, (RTRIM (TT.TreatmentCode)+'Report' ) as TreatmentCode ,R.IsApproved as Approvalvalue

FROM ReferralStatus AS R INNER JOIN
MASDepartment AS FD ON R.FromdeptId = FD.DeptId INNER JOIN
MASDepartment AS TD ON R.ToDeptId = TD.DeptId LEFT OUTER JOIN
TreatmentTypes AS TT ON R.ReferredTreatmentId = TT.TreatmentId LEFT OUTER JOIN
StudentAllotment AS S ON R.ReferredId = S.ReferredId
WHERE     (R.PatientId = {0})
ORDER BY R.ReferredId DESC</value>
  </data>
  <data name="OrpathSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY ORP.RequisitionId ORDER BY SA.AllotId DESC) AS rn, ORP.RequisitionId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),ORP.LastVisitedDate, 126) as RequisitionDate,OP.OpNo,ORP.RequisitionNo,(C.CodeDescription + OP.PatientName) as PatientName, OP.Age,
  Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
  OP.Area,('{3}/OralPathology/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;RId=' + CAST(ORP.RequisitionId as varchar(20)) )as Link
, CASE WHEN ORP.SendForApproval1 =1  AND ORP.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN ORP.SendForApproval2 =1  AND ORP.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN ORP.SendForApproval3 =1  AND ORP.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN ORP.Approval3=1 THEN 'Final level'when ORP.Approval2=1 then '2nd level'				
WHEN ORP.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM ORPATHCasesheet AS ORP 
INNER JOIN OPDPatientRegistration AS OP ON  ORP.PatientId = OP.PatientId 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId 
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
 WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2} ) SELECT * FROM cte WHERE rn = 1 order by  RequisitionId desc</value>
  </data>
  <data name="JawBases" xml:space="preserve">
    <value>Select a.*,null as Inference,null as PreRx,null as PostModulation,null as Postrx,null as Retention,null as Change from ORTHOStaticJawBases   as a 
left join ORTHOJawBasesDetails  as b on a.JawBasesStaticId=b.JawBasesStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="SoftTissue" xml:space="preserve">
    <value>Select a.*,null as PtValue from ORTHOStaticSoftTissue  as a left join ORTHOSoftTissueDetails as b on 
a.SoftTissueStaticId=b.SoftTissueStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="RadioResultEntryUpdate" xml:space="preserve">
    <value> select * from radioresultentry where ResultId={0}</value>
  </data>
  <data name="PROSRPDApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PROSTHO/RPDApproval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PROSRPDCASESHEET AS PRR ON PRR.ProsthoRPDId=  A.CaserecordId   WHERE  (A.DoctorApproval = 'N' )  
and ReferredTreatmentId ={4}
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=A.PatientId AND CaserecordId=ProsthoRPDId and ReferredTreatmentId ={4}) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2}  and ReferredTreatmentId ={4})
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="PEDOPatientTreatmentList" xml:space="preserve">
    <value>SELECT     PEDOId, PatientId, PEDONo,CONVERT(VARCHAR(10), PEDODate, 126) AS PEDODateDisplay ,ChiefComplaint 
FROM       PEDOCasesheet   where PatientId ={0} order by  PEDOId desc</value>
  </data>
  <data name="ChkforAllotmentbyReferId" xml:space="preserve">
    <value>select * from StudentAllotment where ReferredId={0}</value>
  </data>
  <data name="BjroksforPatient" xml:space="preserve">
    <value>Select * from ORTHOBjroksDetails as a
inner join ORTHOStaticBjroks as b on b.BjroksStaticId=a.BjroksStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="OMFSTreatmentDoneStatus" xml:space="preserve">
    <value>Update OMFSIPSchedule set StatusId={0} where ScheduleId={1}</value>
  </data>
  <data name="ChkforLaboratoryResult" xml:space="preserve">
    <value> select * from   LaboratoryResultentry where  LaboratoryResultId={0}</value>
  </data>
  <data name="DeleteConsumableDetails" xml:space="preserve">
    <value>Delete From OMFSIPOtConsumablesDetails where ConsumableId={0}</value>
  </data>
  <data name="DCardPROSTHOCDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) P.ProsthoCDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSCDCasesheet AS P INNER JOIN OMRCasesheet AS MR ON MR.PatientId = P.PatientId INNER JOIN OPDPatientRegistration AS OP ON P.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="OPCensusReportPatientDetails" xml:space="preserve">
    <value>SELECT  ROW_NUMBER() OVER(ORDER BY R.FromDate ASC) AS RowNum,CONVERT(VARCHAR(10), R.FromDate, 126) as DisplayDate,OP.OpNo, OP.IsCreated, OP.PatientName,OP.CategoryId, OP.Age,R.FromDate,
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,
VisitType FROM   ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId  
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}'){2}</value>
  </data>
  <data name="PERIOApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PERIO/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PERIOCasesheet as PC ON	PC.PerioId=A.CaserecordId
WHERE  (A.DoctorApproval = 'N')  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="GetOMFSDetails" xml:space="preserve">
    <value>select PatientId,OpNo,PatientName,Age,GenderId from OPDPatientRegistration where PatientId={0}</value>
  </data>
  <data name="GetOperationScheduleDetails" xml:space="preserve">
    <value>SELECT ScheduleId,PatientId,CONVERT(NVARCHAR(10),FromDate,126) AS FromDate ,   
CONVERT(VARCHAR(20),  FromTime, 100) as FromTime,Duration,Operation,TypeId
FROM  OMFSIPSchedule WHERE ScheduleId={0}</value>
  </data>
  <data name="DeleteTtToothDetails" xml:space="preserve">
    <value>Delete From CONSTraumatisedToothDetails where TraumatisedToothId={0}</value>
  </data>
  <data name="DisplayPerioApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PERIO.PERIOID ORDER BY SA.AllotId DESC) AS rn, PERIO.PERIOID ,(OP.PatientName) as PatientName, 
 CASE WHEN PERIO.SendForApproval1 =1  AND PERIO.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PERIO.SendForApproval2 =1  AND PERIO.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PERIO.SendForApproval3 =1  AND PERIO.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PERIO.Approval3=1 THEN 'Final level'when PERIO.Approval2=1 then '2nd level'				
WHEN PERIO.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PERIOCasesheet AS PERIO INNER JOIN OPDPatientRegistration AS OP ON  PERIO.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and PERIOID={1} order by  PERIOID desc</value>
  </data>
  <data name="SoftTissueforPatient" xml:space="preserve">
    <value>Select * from ORTHOSoftTissueDetails as a
inner join ORTHOStaticSoftTissue as b on b.SoftTissueStaticId=a.SoftTissueStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="DisplayProsRpdApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY RPD.ProsthoRPDID ORDER BY SA.AllotId DESC) AS rn, RPD.ProsthoRPDID ,(OP.PatientName) as PatientName, 
CASE WHEN RPD.SendForApproval1 =1  AND RPD.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN RPD.SendForApproval2 =1  AND RPD.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN RPD.SendForApproval3 =1  AND RPD.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN RPD.Approval3=1 THEN 'Final level' when RPD.Approval2=1 then '2nd level'				
WHEN RPD.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM PROSRPDCasesheet AS RPD INNER JOIN OPDPatientRegistration AS OP ON  RPD.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0)) SELECT * FROM cte WHERE rn = 1 and ProsthoRPDID={1} order by  ProsthoRPDID desc</value>
  </data>
  <data name="UpdateReferralStatus" xml:space="preserve">
    <value>UPDATE [ReferralStatus] SET TreatmentStatus = '1',TreatmentDate = '{0}',VisitType = {1},ReferredTreatmentId ={2} ,ModifiedDate = '{3}',ModifiedSystem = '{4}'
WHERE ReferredId = {5} and  TreatmentStatus =0</value>
  </data>
  <data name="DCardGetReferralId" xml:space="preserve">
    <value> select TOP 1 ReferredId ,PatientId from dbo.ReferralStatus where Convert(varchar(10), FromDate,126)= '{0}'
AND TreatmentStatus =  0 AND  ToDeptId = {1}    
Order by ReferredId Desc</value>
  </data>
  <data name="BillQueueApprovalUpdate" xml:space="preserve">
    <value>Update  BillQueueDetails set  IsApproved='{0}',ApprovedBy='{1}',ApprovedDate=GETDATE() where BillQueueId={2}</value>
  </data>
  <data name="CompositeforPatient" xml:space="preserve">
    <value>Select * from ORTHOCompositeDetails as a
inner join ORTHOStaticComposite as b on b.CompositeStaticId=a.CompositeStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="PHDApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PHD/Approval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PHDCasesheet as PC ON	PC.PHDId=A.CaserecordId
WHERE  (A.DoctorApproval = 'N' )  AND (SendForApproval1 !=0 OR SendForApproval2!=0 OR SendForApproval3 !=0)
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=P.PatientId) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="ReferralApprovalUpdate" xml:space="preserve">
    <value>Update  ReferralStatus set  IsApproved='{0}',ApprovedBy='{1}',ApprovedDate=GETDATE() where ReferredId={2}</value>
  </data>
  <data name="InferenceforPatient" xml:space="preserve">
    <value>select * from ORTHOInferenceDetails where OrthoId={0} and AnalysisId={1}</value>
  </data>
  <data name="PHDPatientTreatmentList" xml:space="preserve">
    <value>SELECT     PHDId, PatientId, PHDNo,CONVERT(VARCHAR(10), PHDDate, 126) AS PHDDateDisplay ,ChiefComplaint 
FROM       PHDCasesheet   where PatientId ={0} order by  PHDId desc</value>
  </data>
  <data name="SagittalforPatient" xml:space="preserve">
    <value>Select * from ORTHOSagittalDetails as a
inner join ORTHOStaticSagittal as b on b.SagittalStaticId=a.SagittalStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="DCardPROSTHORPDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) P.ProsthoRPDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSRPDCasesheet AS P INNER JOIN OMRCasesheet AS MR ON MR.PatientId = P.PatientId INNER JOIN OPDPatientRegistration AS OP ON P.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="FrontalGrum" xml:space="preserve">
    <value> 
Select * from ORTHOStaticFrontalGrum where DelInd = 0</value>
  </data>
  <data name="GetConsRestorativeProcedureDetailsById" xml:space="preserve">
    <value>select * from CONSRestorativeProcedureDetails where ConservativeId ={0} and RestorativeProId NOT IN ({1})</value>
  </data>
  <data name="GetPatientInfomforRadioReport" xml:space="preserve">
    <value>select distinct RR.LabNo,CONVERT(VARCHAR(10),RR.CreatedDate, 126) as CreatedDateReceiving,RR.PatientId,R.OpNo,R.PatientName,R.Age ,case when GenderId=1 then 'Male' else 'Female' end Gender,
D.DeptCode,CONVERT(VARCHAR(10),RE.CreatedDate, 126) as CreatedDateDispatch from RADIORegistration as RR 
inner join OPDPatientRegistration as R on RR.PatientId=R.PatientId
inner join BILLING as B on B.BillId=RR.BillId
inner join MASDepartment as D on b.DeptId=d.DeptId
inner join RADIORegistrationDetails as RD on RD.LabId=RR.LabId
inner join RADIOResultEntry as RE on RE.LabDetId=RD.LabDetId
where RR.LabId={0}</value>
  </data>
  <data name="DCardRevisitPROSDIMSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.ProsthoDIMId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSDIMCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="DeleteAbutToothDetails" xml:space="preserve">
    <value>Delete From PROSFPDAbutmentTeeth where AbutmentTeethId={0}</value>
  </data>
  <data name="BindRevisitReferralList" xml:space="preserve">
    <value>SELECT DISTINCT 0 as ReferredId ,D.DeptId AS ToDeptId,D.DeptCode AS ToDeptName, NULL AS ReferredReason,NULL AS Priority,NULL AS RoomNo,0 AS TreatmentStatus,'False' AS chkToDeptId, GETDATE () AS RevisitDate  from MASDepartment AS D  WHERE  (D.DelInd = 0) AND (D.IsReferredView = 'Y') AND (D.DeptId NOT IN
(SELECT ToDeptId FROM ReferralStatus WHERE PatientId = {0}))
union
SELECT DISTINCT RS.ReferredId,D.DeptId AS ToDeptId, D.DeptCode AS ToDeptName, RS.ReferredReason, RS.Priority, RS.RoomNo, RS.TreatmentStatus, 'true' AS chkToDeptId, revisit.RevisitDate
FROM  ReferralStatus AS RS RIGHT OUTER JOIN MASDepartment AS D ON RS.ToDeptId = D.DeptId
INNER JOIN OPDRevisitRegistration AS revisit ON revisit.RevisitId = RS.RevisitId
WHERE (revisit.PatientId ={0}) AND (RS.TreatmentStatus = 0) AND (revisit.RevisitId = {1})
ORDER BY ToDeptId</value>
  </data>
  <data name="DeleteBlToothDetails" xml:space="preserve">
    <value>Delete From CONSBleachingDetails where BleachingId={0}</value>
  </data>
  <data name="DCardLoadDept" xml:space="preserve">
    <value>select DeptId,(DeptCode +' - '+  DeptName) as DeptName from MASDepartment where IsDCard ='Y'
AND DelInd=0 Order by DeptId</value>
  </data>
  <data name="UpdateReferredReasonbyId" xml:space="preserve">
    <value> update referralstatus set ReferredReason='{0}', Priority ='{1}' where referredid={2}</value>
  </data>
  <data name="LaboratoryTestItemReport" xml:space="preserve">
    <value> select mb.ServiceName,rt.ServiceItems,result,
MaleNormalRange,FemaleNormalRange,Unit,IsHeader
from  LaboratoryResultEntryDetails as rd 
inner join  LaboratoryResultEntry as re on re. LaboratoryResultId=rd. LaboratoryResultId
inner join RADIOTemplateDetails as rt on rt.RadioTempDetId=rd.RadioTempDetId
inner join MASBillingServices as mb on mb.ServiceId=re.ServiceId 
where re.LaboratoryDetId in(select rr. LaboratoryDetId from LaboratoryRegistrationDetails as r 
inner join  LaboratoryResultEntry as rr on rr. LaboratoryDetId=r.LaboratoryDetId 
where  LaboratoryId={0})</value>
  </data>
  <data name="CONSPatientTreatmentList" xml:space="preserve">
    <value>SELECT     ConservativeId, PatientId, CONSNo,CONVERT(VARCHAR(10), ConservativeDate, 126) AS CONSDateDisplay ,ChiefComplaint 
FROM       CONSCasesheet   where PatientId ={0} order by  ConservativeId desc</value>
  </data>
  <data name="DeleteVitalDetails" xml:space="preserve">
    <value>Delete From OMFSIPOperativeVitalsDetails where VitalId={0}</value>
  </data>
  <data name="BurstoneSoftforPatient" xml:space="preserve">
    <value> Select * from ORTHOBurstoneSoftDetails as a
inner join ORTHOStaticBurstoneSoft as b on b.BurstoneSoftStaticId=a.BurstoneSoftStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as BurstoneSoftId,BurstoneSoftStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,BurstoneSoftStaticId,Measurements,Mean,Indicator, DelInd from ORTHOStaticBurstoneSoft where DelInd = 0 and  BurstoneSoftStaticId not in (
Select b.BurstoneSoftStaticId from ORTHOBurstoneSoftDetails as a
inner join ORTHOStaticBurstoneSoft as b on b.BurstoneSoftStaticId=a.BurstoneSoftStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="ReferralHomeWithDateOMFS" xml:space="preserve">
    <value>     SELECT     RS.ReferredId, RS.PatientId, CONVERT(VARCHAR(10), RS.FromDate, 126) AS FromDate, P.OpNo,C.CodeDescription + P.PatientName AS PatientName,
P.Age, P.Area, D.DeptCode AS FromDeptName,RS.ReferredReason, SA.AllotId,  
('#  class="btn btn-primary btn-xs" onclick="showUGModel('+ CAST(RS.PatientId as varchar(20))+',' + CAST( RS.ReferredId as varchar(20))+')"' )as UGStudent,
('#  class="btn btn-primary btn-xs" onclick="showPGModel('+ CAST(RS.PatientId as varchar(20))+',' + CAST( RS.ReferredId as varchar(20))+')"' )as PGStudent,
('{5}/OMFS/IPCreate?PatientId='+ CAST(RS.PatientId as varchar(20))+'&amp;ReferredId='+ CAST(RS.ReferredId as varchar(20)))as Link FROM ReferralStatus AS RS 
INNER JOIN OPDPatientRegistration AS P ON RS.PatientId = P.PatientId INNER JOIN MASDepartment AS D ON D.DeptId = RS.FromdeptId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId LEFT OUTER JOIN StudentAllotment AS SA ON RS.ReferredId = SA.ReferredId 
WHERE  RS.PatientId not in (select PatientId from OMFSIPSchedule  where ( StatusId ={3} OR StatusId ={4})  )
AND (ToDeptId ={0}) and (SA.AllotId is  null or SA.AllotId=0) and (CONVERT(VARCHAR(10),  RS.FromDate, 126)  between '{1}' and '{2}')</value>
  </data>
  <data name="ReferralHomeWithDate_OLD" xml:space="preserve">
    <value>SELECT     RS.ReferredId, RS.PatientId, CONVERT(VARCHAR(10), RS.FromDate, 126) AS FromDate, RIGHT(CONVERT(VARCHAR(50), RS.FromDate, 100), 7) AS FromTime,P.OpNo,C.CodeDescription + P.PatientName AS PatientName, P.Age, P.Area, D.DeptCode AS FromDeptName, P.Phone,
RS.ReferredReason, SA.AllotId,('class="btn btn-primary btn-xs" onclick="showModel('+ CAST(RS.PatientId as varchar(20))+',' + CAST( RS.ReferredId as varchar(20))+')"' )as ForAllotment FROM ReferralStatus AS RS 
INNER JOIN OPDPatientRegistration AS P ON RS.PatientId = P.PatientId 
INNER JOIN MASDepartment AS D ON D.DeptId = RS.FromdeptId INNER JOIN MASCode AS C ON P.TitleId = C.CodeId LEFT OUTER JOIN StudentAllotment AS SA ON RS.ReferredId = SA.ReferredId WHERE     (ToDeptId ={0}) and (SA.AllotId is  null or SA.AllotId=0)
and (CONVERT(VARCHAR(10),  RS.FromDate, 126)  between '{1}' and '{2}') order by RS.ReferredId desc</value>
  </data>
  <data name="GetLabHeaderforAllDepts" xml:space="preserve">
    <value>select * from Laboratoryregistrationdetails  lr
inner join Laboratoryresultentry lre on lr.LaboratoryDetId=lre.LaboratoryDetId
inner join Laboratoryresultentrydetails led on led.Laboratoryresultid=lre.Laboratoryresultid
inner join RADIOTemplateDetails as rd on rd.radiotempdetid=led.radiotempdetid
where lr.LaboratoryId={0}</value>
  </data>
  <data name="StudentScheduleFromDept" xml:space="preserve">
    <value>SELECT StudentId,(StudentName +'  ('+ StudentRegNo +')' )as StudentName
FROM MASStudentRegistration WHERE StudentCourseId ='{0}' and StudentYearId='{1}'</value>
  </data>
  <data name="GetLaboratoryTemplate" xml:space="preserve">
    <value> select RT.*,MB.ServiceName,mg.GroupName,('{3}/LaboratoryTemplate/Edit?Id='+ CAST(RT.RadioTempId as varchar(20)))as Link from RADIOTemplate as RT 
inner join MASBillingServices as MB on MB.ServiceId=RT.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
 where MB.DeptId={0}and  (CONVERT(VARCHAR(10), RT.CreatedDate, 126)  between '{1}' and '{2}')</value>
  </data>
  <data name="DCardRevisitPROSMFPSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.ProsthoMFPId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSMFPCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="RakosiforPatient" xml:space="preserve">
    <value> Select * from ORTHORakosiDetails as a
inner join ORTHOStaticRakosi as b on b.RakosiStaticId=a.RakosiStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as RakosiId,RakosiStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,RakosiStaticId,Measurements,Mean, DelInd from ORTHOStaticRakosi where DelInd = 0 and  RakosiStaticId not in (
Select b.RakosiStaticId from ORTHORakosiDetails as a
inner join ORTHOStaticRakosi as b on b.RakosiStaticId=a.RakosiStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="ReferralByDefault" xml:space="preserve">
    <value> SELECT Distinct  D.DeptId AS ToDeptId,D.DeptCode as ToDeptName, null as FromDate, null as ReferredReason, 
null as Priority,D.RoomNo, 0 as TreatmentStatus FROM  ReferralStatus AS DR RIGHT OUTER JOIN
MASDepartment AS D ON DR.FromdeptId = D.DeptId
WHERE (D.DelInd = 0) AND (D.IsReferredView='Y') -- AND DeptId NOT IN ({0})</value>
  </data>
  <data name="BurstoneHard" xml:space="preserve">
    <value> Select * from ORTHOStaticBurstoneHard where DelInd = 0</value>
  </data>
  <data name="BurstoneSoft" xml:space="preserve">
    <value> Select * from ORTHOStaticBurstoneSoft where DelInd = 0</value>
  </data>
  <data name="AllotedPatientDetails_OLD" xml:space="preserve">
    <value>SELECT  SA.AllotId, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, SR.StudentName, 
C1.CourseName + '-' + SR.StudentRegNo AS StudentRegNo, SA.PatientId, SA.ReferredId, SA.DeptId, 
SA.StudentId, P.GenderId, P.Phone, P.Address, SA.DoctorId, SA.ProcedureNotes, SA.DoctorApproval, 
D.DoctorName, DT.DeptName FROM  StudentAllotment AS SA INNER JOIN
OPDPatientRegistration AS P ON SA.PatientId = P.PatientId INNER JOIN
MASCode AS C ON C.CodeId = P.TitleId INNER JOIN
MASStudentRegistration AS SR ON SA.StudentId = SR.StudentId INNER JOIN
MASCourse AS C1 ON SR.StudentCourseId = C1.CourseId INNER JOIN
MASDepartment AS DT ON SA.DeptId = DT.DeptId LEFT OUTER JOIN
MASDoctor AS D ON SA.DoctorId = D.DoctorId WHERE (SA.AllotId = {0})</value>
  </data>
  <data name="TestNamesforReport" xml:space="preserve">
    <value>select r.*,mb.ServiceName,rr.* from RADIORegistrationDetails as r 
inner join RADIOResultEntry as rr on rr.LabDetId=r.LabDetId 
inner join MASBillingServices as mb on mb.ServiceId=rr.ServiceId 
where labid={0}</value>
  </data>
  <data name="DentoUpperforPatient" xml:space="preserve">
    <value>Select * from ORTHODentoUpperDetails as a
inner join ORTHOStaticDentoUpper as b on b.DentoUpperStaticId=a.DentoUpperStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="PreviousApproval" xml:space="preserve">
    <value>SELECT  CONVERT(VARCHAR(10), A.ApprovalDate, 126) as DisplayApprovalDate, D.DoctorName as ApprovalDoctorName  , A.CreatedBy
FROM  ApprovalDetails AS A INNER JOIN MASDoctor AS D ON A.DoctorId = D.DoctorId 
where  A.ApprovalTypeId= {0} and  A.CaserecordId = {1} and A.DeptId = {2} and A.PatientId = {3} and A.ReferredTreatmentId= {4}</value>
  </data>
  <data name="ReferralApprovalListWithLink" xml:space="preserve">
    <value>SELECT     R.ReferredId, R.PatientId, R.FromdeptId, CONVERT(VARCHAR(10), R.FromDate, 103) AS FromDateDisplay, R.ReferredReason, R.ToDeptId, R.Priority, R.RoomNo,CASE WHEN R.TreatmentStatus = 1 THEN 'Visited' ELSE 'Pending' END AS TreatmentStatus, CONVERT(VARCHAR(10), R.TreatmentDate, 126) AS TreatmentDateDisplay, R.ReferredTreatmentId, 
R.VisitType, FD.DeptCode AS FromDeptCode, TD.DeptCode AS ToDeptCode, S.CaserecordId, (RTRIM (TT.TreatmentCode)+'Report' ) as TreatmentCode,IsApproved as Approvalvalue,Case when IsApproved='Y' then 'Approved' when IsApproved='N' then IsApproved End as ApprovalStatus
FROM ReferralStatus AS R INNER JOIN
MASDepartment AS FD ON R.FromdeptId = FD.DeptId INNER JOIN
MASDepartment AS TD ON R.ToDeptId = TD.DeptId LEFT OUTER JOIN
TreatmentTypes AS TT ON R.ReferredTreatmentId = TT.TreatmentId LEFT OUTER JOIN
StudentAllotment AS S ON R.ReferredId = S.ReferredId
WHERE     (R.PatientId = {0})   and fromdeptid={1}
ORDER BY R.ReferredId DESC</value>
  </data>
  <data name="DisplayOrpathApprovalStage" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY ORPATH.RequisitionId ORDER BY SA.AllotId DESC) AS rn, ORPATH.RequisitionId ,(OP.PatientName) as PatientName, 
 CASE WHEN ORPATH.SendForApproval1 =1  AND ORPATH.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN ORPATH.SendForApproval2 =1  AND ORPATH.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN ORPATH.SendForApproval3 =1  AND ORPATH.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN ORPATH.Approval3=1 THEN 'Final level'when ORPATH.Approval2=1 then '2nd level'				
WHEN ORPATH.Approval1=1 THEN '1st level' ELSE '' End as ApprovalStage FROM ORPATHCasesheet AS ORPATH INNER JOIN OPDPatientRegistration AS OP ON  ORPATH.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId WHERE   SA.DeptId ={0} AND (0=0) ) SELECT * FROM cte WHERE rn = 1 and RequisitionId={1} order by  RequisitionId desc</value>
  </data>
  <data name="DCardCONSSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) CO.ConservativeId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM CONSCasesheet AS CO INNER JOIN OMRCasesheet AS MR ON MR.PatientId = CO.PatientId INNER JOIN OPDPatientRegistration AS OP ON CO.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="BillQueue" xml:space="preserve">
    <value>select PatientID,DeptId,sum(NetAmount) as NetAmount,PatientName,DeptName,OpNo,('{2}/Billing/Create?id='+ CAST(PatientID as varchar(20))+'&amp;DeptId=' + CAST(DeptId as varchar(20)) )as Link from (
Select Distinct A.PatientID,A.DeptId,(sum(PayableAmount))as NetAmount,OPD.PatientName,OPD.OpNo,MD.DeptName
From BillQueueDetails AS A 
inner join OPDPatientRegistration as OPD on OPD.PatientId=A.PatientId
inner join MASDepartment as MD on MD.DeptId=A.DeptId
Where A.ISBILLPAID='N' and BalanceAmount&gt;0 and(CONVERT(VARCHAR(10), BillQueueDate, 126)  between '{0}' and '{1}')
Group By A.PatientID,A.DeptId,PatientName,OpNo,DeptName
Union
Select Distinct A.PatientID,A.DeptId,(sum(PayableAmount))as NetAmount,OPD.PatientName,OPD.OpNo,MD.DeptName
From BillQueueDetails AS A 
inner join OPDPatientRegistration as OPD on OPD.PatientId=A.PatientId
inner join MASDepartment as MD on MD.DeptId=A.DeptId
Where A.ISBILLPAID='N' and A.IsApproved='Y' and BalanceAmount&lt;=0 and(CONVERT(VARCHAR(10), BillQueueDate, 126)  between '{0}' and '{1}')
Group By A.PatientID,A.DeptId,PatientName,OpNo,DeptName )Table_1
GROUP BY  PatientID, DeptId,PatientName,DeptName,OpNo</value>
  </data>
  <data name="DCardPROSTHODIMSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) P.ProsthoDIMId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSDIMCasesheet AS P INNER JOIN OMRCasesheet AS MR ON MR.PatientId = P.PatientId INNER JOIN OPDPatientRegistration AS OP ON P.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="TestItemsforEntry" xml:space="preserve">
    <value>  select RD.*,RT.ServiceId from RADIOTemplateDetails as RD
inner join Radiotemplate as RT on RD.RadioTempId=RT.RadioTempId
where RT.ServiceId={0}  order by DisplayOrder asc</value>
  </data>
  <data name="DisplayPatientAllotment" xml:space="preserve">
    <value>SELECT OP.PatientId, OP.OpNo, OP.PatientName, OP.Age, OP.GenderId, R.ReferredReason, 
R.ReferredId FROM OPDPatientRegistration AS OP INNER JOIN
ReferralStatus AS R ON OP.PatientId = R.PatientId where  R.ReferredId={0}</value>
  </data>
  <data name="ChkforLaboratoryResultEntry" xml:space="preserve">
    <value>  select LD.*,RTD.ServiceItems,RTD.MaleNormalRange,RTD.FemaleNormalRange,RTD.Unit,RTD.IsHeader  from  LaboratoryResultentryDetails as LD
inner join RADIOTemplateDetails as RTD on LD.RadioTempDetId=RTD.RadioTempDetId
where LD. LaboratoryResultId={0}</value>
  </data>
  <data name="GetStudentDetSearch" xml:space="preserve">
    <value>SELECT S.StudentId, S.StudentName, S.StudentRegNo, C.CourseName as CourseName, Y.CourseYearName as  
StudentYearName, D.DeptCode as DeptName ,
('{0}/StudentRegistration/Edit?id='+ CAST(S.StudentId as varchar(20)))as Link 
FROM MASStudentRegistration AS S INNER JOIN 
MASCourse AS C ON S.StudentCourseId = C.CourseId INNER JOIN  
MASCourseYear AS Y ON S.StudentYearId = Y.CourseYearId LEFT OUTER JOIN 
MASDepartment AS D ON S.DeptId = D.DeptId where S.DelInd=0 and S.StudentCourseId={1}</value>
  </data>
  <data name="OMFSOPSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY OM.OMFSOpId ORDER BY SA.AllotId DESC) AS rn, OM.OMFSOpId as ID, SA.AllotId, SA.AllotDate, 
CONVERT(VARCHAR(10),  OM.LastVisitedDate, 126) as Date,OM.OMFSOpNo as OMFSNo,OP.OpNo,(OP.PatientName) as PatientName, OP.Age, 
OP.GenderId, OP.Area,Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName,OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/OMFS/OPEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;OMFSOpId=' + CAST(OM.OMFSOpId as varchar(20)) )as Link, CASE WHEN OM.SendForApproval1 =1  AND OM.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN OM.SendForApproval2 =1  AND OM.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN OM.SendForApproval3 =1  AND OM.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN OM.Approval3=1 THEN 'Final level'when OM.Approval2=1 then '2nd level'				
WHEN OM.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType  FROM OMFSOPCasesheet AS OM 
INNER JOIN OPDPatientRegistration AS OP ON  OM.PatientId = OP.PatientId INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN  
MASCode AS C ON C.CodeId = OP.TitleId inner join ReferralStatus as R on SA.ReferredId=R.ReferredId  WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}') AND SA.DeptId ={2}  AND {4}) 
SELECT * FROM cte WHERE rn = 1 order by  ID desc</value>
  </data>
  <data name="GetToothNumDetailsById" xml:space="preserve">
    <value>select * from CONSRestorativeProcedureDetails where RestorativeProId={0}  and ConservativeId={1}</value>
  </data>
  <data name="DeleteRcToothDetails" xml:space="preserve">
    <value>Delete From CONSRootCanalDetails where RootCanalId={0}</value>
  </data>
  <data name="PROSDIMApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PROSTHO/DIMApproval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PROSDIMCASESHEET AS PRD ON PRD.ProsthoDIMId= A.CaserecordId  WHERE  (A.DoctorApproval = 'N' )  AND  ReferredTreatmentId ={4}
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2}  AND PATIENTID=A.PatientId  AND CaserecordId=ProsthoDIMId and ReferredTreatmentId ={4}) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2}  and ReferredTreatmentId ={4} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="BillingCancelQueueBalanceUpdate" xml:space="preserve">
    <value> UPDATE BillQueueDetails set BalanceAmount=BalanceAmount + {0}, PayableAmount= PayableAmount + {0},PaidAmount=PaidAmount-{0},IsBillPaid='N' where BillQueueId={1}</value>
  </data>
  <data name="ORTHOPatientTreatmentList" xml:space="preserve">
    <value>SELECT     OrthoId, PatientId,CasesheetType,  case when CasesheetType=2  then 'Long' else 'Short' End as CasesheetName ,OrthoNo,CONVERT(VARCHAR(10), OrthoDate, 126) AS OrthoDateDisplay ,ChiefComplaint 
FROM       ORTHOCasesheet   where PatientId ={0} order by  OrthoId desc</value>
  </data>
  <data name="LoadUserDept" xml:space="preserve">
    <value>select DeptId,(DeptCode +' - '+  DeptName) as DeptName from MASDepartment where IsUserRights ='Y'
AND DelInd=0 Order by DeptId</value>
  </data>
  <data name="GetConsReRctDetailsById" xml:space="preserve">
    <value>select * from CONSReRctDetails where ConservativeId ={0} and ReRootCanalId NOT IN ({1})</value>
  </data>
  <data name="AllotmentStudentUGDropdownlist" xml:space="preserve">
    <value> 
SELECT     STUDENTID,CASE 
WHEN [STUDENTNAME] IS NOT NULL 
THEN ((([STUDENTNAME]+ ' ( ' +
ISNULL([STUDENTREGNO],'')) +
ISNULL(' - '+[COURSENAME],'')) +
ISNULL(' - '+[COURSEYEARNAME],'')) +
ISNULL(' - '+[CODEDESCRIPTION],'')+
ISNULL(' - '+[BATCH],'')  +' ) '  
END AS STUDENTNAME
FROM  MASSTUDENTREGISTRATION AS SR 
INNER JOIN MASCOURSE AS C ON SR.STUDENTCOURSEID = C.COURSEID 
INNER JOIN MASCOURSEYEAR AS C1 ON SR.STUDENTYEARID = C1.COURSEYEARID 
LEFT JOIN  MASCODE AS MC ON MC.CODEID=SR.BATCHTYPEID
WHERE  SR.DELIND=0 AND STUDENTCOURSEID={0}</value>
  </data>
  <data name="Analysis" xml:space="preserve">
    <value>select * from ORTHOAnalysis where Visibility='Y'</value>
  </data>
  <data name="Maxilla" xml:space="preserve">
    <value>Select a.*,null as PtValue from ORTHOStaticMaxillaCranial  as a 
left join ORTHOCranialMaxillaDetails as b on a.CranialMaxStaticId=b.CranialMaxStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="MaxMand" xml:space="preserve">
    <value>Select a.*,null as PtValue from ORTHOStaticMaxMand  as a left join ORTHOMaxMandDetails as b on 
a.MaxManStaticId=b.MaxManStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="GetUserDepartments" xml:space="preserve">
    <value>select u.userdeptid, u.deptid,d.deptname from dbo.UserDepartments u
inner join masdepartment d on u.deptid=d.deptid
where userid={0}</value>
  </data>
  <data name="DCardRevisitORTHOSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.OrthoId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM ORTHOCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="McNamaraforPatient" xml:space="preserve">
    <value>  Select * from ORTHOMcNamaraDetails as a
inner join ORTHOStaticMcNamara as b on b.McNamaraStaticId=a.McNamaraStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as McNamaraId,McNamaraStaticId,0 as OrthoId,null as PreRx,null as PostModulation,null as PostRx,null as Retention,null as Change,null as PreTreatment,null as PreSurgical,null as PostAlignment,null as PostSurgical,null as MidTreatment,null as Posttreatment,McNamaraStaticId,Measurements,Mean,DelInd from ORTHOStaticMcNamara where DelInd = 0 and  McNamaraStaticId not in (
Select b.McNamaraStaticId from ORTHOMcNamaraDetails as a
inner join ORTHOStaticMcNamara as b on b.McNamaraStaticId=a.McNamaraStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="GetUserFromDepartments" xml:space="preserve">
    <value>select * from masdepartment where deptid not in (select deptid from userdepartments 
where userid={0} )and IsReferredView ='Y'</value>
  </data>
  <data name="ServiceDeptSearch" xml:space="preserve">
    <value> SELECT     B.ServiceId, B.ServiceCode, B.ServiceName, B.ServiceAmount, B.HSNSACCode, D.DeptCode, B.GSTPercentage, '{1}/BillingServices/Edit?ServiceId=' + CAST(B.ServiceId AS varchar(20)) AS Link,G.GroupName FROM  MASBillingServices AS B INNER JOIN MASDepartment AS D ON B.DeptId = D.DeptId LEFT JOIN
MASGroup AS G ON B.GroupId = G.GroupId where B.DeptId={0} and B.DelInd = {2}</value>
  </data>
  <data name="PROSMFPRegPatient" xml:space="preserve">
    <value>select ProsthoMFPid,ProsthoMFPNo,CONVERT(varchar(10), prosthoMFPdate,126) as ProsthoMFPdateDisplay ,chiefcomplaint as prosMFPchiefcomplaint 
from PROSMFPCasesheet where patientid={0}</value>
  </data>
  <data name="JawforPatient" xml:space="preserve">
    <value>Select * from ORTHOJawBasesDetails as a
inner join ORTHOStaticJawBases as b on b.JawBasesStaticId=a.JawBasesStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="GetDoctorDetSearch" xml:space="preserve">
    <value>select MD.*,MDN.*,('{0}/Doctor/Edit?id='+ CAST(MD.DoctorId as nvarchar(20)))as Link 
from MasDoctor as  MD 
inner join MASDesignation as MDN on MDN.DesigId=MD.DesigId
where MD.DelInd=0 and MD.DeptId={1}</value>
  </data>
  <data name="AllotmentStudentPGDropdownlist" xml:space="preserve">
    <value>SELECT SR.StudentId, SR.StudentName + ' ( ' + SR.StudentRegNo + ' - ' + C.CourseName + ' - ' + C1.CourseYearName + ' ) ' AS StudentName
FROM   MASStudentRegistration AS SR INNER JOIN
MASCourse AS C ON SR.StudentCourseId = C.CourseId INNER JOIN
MASCourseYear AS C1 ON SR.StudentYearId = C1.CourseYearId
WHERE  (SR.DelInd = 0 and SR.DeptId={0})</value>
  </data>
  <data name="ORALPATHRequisitionIndex" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY O.RequisitionId ORDER BY SA.AllotId DESC) AS rn, SA.AllotId, SA.AllotDate, O.RequisitionId, O.PatientId, CONVERT(VARCHAR(20), O.RequisitionDate, 126) AS RequisitionDateDisplay, D.DeptCode AS DeptName, O.MChiefComplaint, O.BChiefComplaint 
FROM  ORPATHCasesheet AS O INNER JOIN
MASDepartment AS D ON O.DeptId = D.DeptId INNER JOIN
StudentAllotment AS SA ON O.PatientId = SA.PatientId where O.PatientId={0}) SELECT * FROM cte WHERE rn = 1 order by RequisitionId desc</value>
  </data>
  <data name="MaxMandforPatient" xml:space="preserve">
    <value>Select * from ORTHOMaxMandDetails as a
inner join ORTHOStaticMaxMand as b on b.MaxManStaticId=a.MaxManStaticId where (b.DelInd = 0) and OrthoId=({0})</value>
  </data>
  <data name="FrontalEsthetforPatient" xml:space="preserve">
    <value>Select * from ORTHOFronEstheticsDetails as a
inner join ORTHOStaticFrontalEsthetics as b on b.FrontalEstheticsStaticId=a.FrontalEstheticsStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as FrontalEstheticsId,FrontalEstheticsStaticId,0 as OrthoId,null as Value,FrontalEstheticsStaticId,Field,Percentage,DelInd from ORTHOStaticFrontalEsthetics where DelInd = 0 and  FrontalEstheticsStaticId not in (
Select b.FrontalEstheticsStaticId from ORTHOFronEstheticsDetails as a
inner join ORTHOStaticFrontalEsthetics as b on b.FrontalEstheticsStaticId=a.FrontalEstheticsStaticId where (b.DelInd = 0) and OrthoId={0})</value>
  </data>
  <data name="GetUsersWithoutDepartment" xml:space="preserve">
    <value>select u.userid, (firstname+' '+lastname) as Name , username, rolename,('{0}/User/Edit?Id='+CAST(u.userid as varchar(20)))as Link 
 from [user]as u
inner join UserRoles as ur on ur.userid=u.userid  
inner join [role]as r on r.roleid=ur.roleid where u.userid!=1 and u.UserId not in (select UserId from userdepartments)</value>
  </data>
  <data name="TestNamesforCreate" xml:space="preserve">
    <value> select BD.BillId,BD.BillqueueId,BD.ServiceId,BS.ServiceName,MG.GroupName,BQ.TeethNo from BillingDetails as BD
inner join MasBillingServices as BS on BD.ServiceId=BS.ServiceId
inner join RADIOTemplate as RT on RT.ServiceId=BS.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
inner join BillqueueDetails as BQ on BQ.BillQueueId=BD.BillQueueId
where BD.BillId={0} and BS.DeptId={1}</value>
  </data>
  <data name="GetCategorywiseCensusforNV" xml:space="preserve">
    <value>with CTE_P as
(
    SELECT * FROM (SELECT RegDate  = CONVERT(DATE, RegDate),Category = C.CodeDescription  
FROM  OPDPatientRegistration AS P INNER JOIN MASCode AS C ON P.CategoryId = C.CodeId
where  CONVERT(VARCHAR(10),RegDate, 126) between '{0}' and '{1}'
group by RegDate,CodeDescription
) AS SourceTable 
PIVOT (COUNT(Category)FOR Category IN ([Regular],[Camp],[BPL],[Free],[Staff],[Student])) AS PivotTable
)
select CONVERT(NVARCHAR(10),RegDate,126) as Date , SUM(Regular) as Regular, SUM(Camp) as Camp,SUM(BPL) as BPL, SUM(Free) as Free, SUM(Staff) as Staff, SUM(Student) as Student,SUM(Regular+Camp+BPL+Free+Staff+Student) as Total
from CTE_P
group by  RegDate --grouping sets ( (RegDate), () )</value>
  </data>
  <data name="GetCategorywiseCensusforRV" xml:space="preserve">
    <value>with CTE_P as
(
    SELECT * FROM (SELECT RevisitDate  = CONVERT(DATE, RevisitDate),Category = C.CodeDescription  
FROM  OPDRevisitRegistration AS RE 
INNER JOIN OPDPatientRegistration P on P.PatientId = RE.PatientId
INNER JOIN MASCode AS C ON P.CategoryId = C.CodeId

where  CONVERT(VARCHAR(10),RegDate, 126) between '{0}' and '{1}'
group by RevisitDate,CodeDescription
) AS SourceTable 
PIVOT (COUNT(Category)FOR Category IN ([Regular],[Camp],[BPL],[Free],[Staff],[Student])) AS PivotTable
)
select CONVERT(NVARCHAR(10),RevisitDate,126) as Date , SUM(Regular) as Regular, SUM(Camp) as Camp ,SUM(BPL) as BPL, SUM(Free) as Free, SUM(Staff) as Staff, SUM(Student) as Student,SUM(Regular+Camp+BPL+Free+Staff+Student) as Total
from CTE_P
group by  RevisitDate --grouping sets ( (RegDate), () )</value>
  </data>
  <data name="DeleteReToothDetails" xml:space="preserve">
    <value>Delete From CONSReRctDetails where ReRootCanalId={0}</value>
  </data>
  <data name="DeleteUploadedFile" xml:space="preserve">
    <value>Delete From FileUpload where FileId={0}</value>
  </data>
  <data name="GetPostAndCoreDetailsById" xml:space="preserve">
    <value>select * from CONSPostAndCoreDetails where ConservativeId ={0} and PostAndCoreId NOT IN ({1})</value>
  </data>
  <data name="DisplayPatientBalanceDueAmount" xml:space="preserve">
    <value>select SUM(NetAmount-PaidAmount)as DueAmount from BillQueueDetails where PatientId ={0} and DeptId ={1}</value>
  </data>
  <data name="DeleteDrugDetails" xml:space="preserve">
    <value>Delete From OMFSIPDrugDetails where DrugDetailsId={0}</value>
  </data>
  <data name="Sagittal" xml:space="preserve">
    <value>Select a.*,null as PreRxMeasurement,null as PreRxClass,null as SurgeryMeasurement,null as SurgeryClass,null as PostRxMeasurement,null as PostRxClass,
null as RetentionMeasurement,null as RetentionClass,null as ChangeMeasurement,null as ChangeClass from ORTHOStaticSagittal  as a 
left join ORTHOSagittalDetails as b on a.SagittalStaticId=b.SagittalStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="DCardPROSTHOMFDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) P.ProsthoMFDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSMFPCasesheet AS P INNER JOIN OMRCasesheet AS MR ON MR.PatientId = P.PatientId INNER JOIN OPDPatientRegistration AS OP ON P.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="BillPaidTreatmentDetailsForPatients" xml:space="preserve">
    <value>SELECT     B.BillNo, CONVERT(VARCHAR(10), B.BillDateTime, 126) AS BillDateTimeDisplay, S.ServiceName, BD.ServiceQty, Q.Amount,bd.DiscountPer,bd.DiscountAmt,
--ISNULL(ROUND((Q.Amount * Q.DiscountPer)/100,1),0)  as DiscountAmt,Q.NetAmount,  
CASE
WHEN (BD.DISCOUNTAMT&gt;0)THEN (BD.NETAMOUNT+BD.DISCOUNTAMT)
ELSE
BD.NETAMOUNT
END 
 AS PAYABLE, 
BD.NetAmount AS PaidAmount,BD.PayableAmount,
Q.BalanceAmount FROM  Billing AS B INNER JOIN BillingDetails AS BD ON B.BillId = BD.BillId INNER JOIN
MASBillingServices AS S ON BD.ServiceId = S.ServiceId INNER JOIN BillQueueDetails AS Q ON BD.BillQueueId = Q.BillQueueId INNER JOIN
MASBillingServices AS MB ON BD.ServiceId = MB.ServiceId where  Q.DeptId={1} and  B.PatientId={0} {2}</value>
  </data>
  <data name="ScheduledSurgeonList" xml:space="preserve">
    <value>SELECT DoctorName,Surgeon AssistantSurgeon,Anthetist Anesthetist
from OMFSIPScheduleDetails s 
inner join masdoctor d on d.doctorid=s.doctorid
where s.scheduleid={0}</value>
  </data>
  <data name="AllotHomeWithDateOld" xml:space="preserve">
    <value>SELECT  distinct  SA.AllotId, CONVERT(VARCHAR(10), SA.AllotDate, 126) AS AllotDate, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, SR.StudentName, SR.StudentRegNo, SA.PatientId,SA.ReferredId, SA.DeptId, SA.StudentId ,
('{3}/Operations?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;patientId=' + CAST(SA.PatientId as varchar(20)) )as Link ,
('class="btn btn-danger btn-xs" onclick="showCancelAllotment('+ CAST(SA.AllotId as varchar(20))+')"' )as  DeleteLink
FROM StudentAllotment AS SA INNER JOIN OPDPatientRegistration AS P ON SA.PatientId = P.PatientId INNER JOIN
MASCode AS C ON C.CodeId = P.TitleId INNER JOIN MASStudentRegistration AS SR ON SA.StudentId = SR.StudentId 
INNER JOIN ReferralStatus AS R ON SA.ReferredId = R.ReferredId
WHERE (SA.DeptId ={0}) and (R.ToDeptId ={0}) and  SA.ReferredTreatmentId=0 and R.TreatmentStatus=0 and 
(Convert(varchar(10), SA.AllotDate,126)between '{1}' and '{2}')  order by SA.AllotId desc</value>
  </data>
  <data name="GetTemplatebyId" xml:space="preserve">
    <value> select RT.*,MB.ServiceName,mg.GroupName,('{1}/RadiologyTemplate/Edit?Id='+ CAST(RT.RadioTempId as varchar(20)))as Link from RADIOTemplate as RT 
inner join MASBillingServices as MB on MB.ServiceId=RT.ServiceId
inner join MASGroup as MG on MG.GroupId=RT.GroupId
 where MB.DeptId={0}</value>
  </data>
  <data name="GetVitalDetailsList" xml:space="preserve">
    <value> select VitalId,OmFSIpId,CONVERT(NVARCHAR(10),VitalDate,126) AS VitalDateDisplay,
CONVERT(VARCHAR(20),VitalTime, 100) as VitalTimeDisplay,(Bp+'/'+VitalBp) AS Bp,Pulse,RespiratoryRate,Temperature,
Input,Output,Miscellaneous from OMFSIPOperativeVitalsDetails  
where OMFSIpId={0} and FromFlag={1}</value>
  </data>
  <data name="BillQueueUpdate" xml:space="preserve">
    <value>update BillQueueDetails set IsBillPaid='Y' where BillQueueId={0}</value>
  </data>
  <data name="Discrepancy" xml:space="preserve">
    <value>Select a.*,null as Inference,null as PreRx,null as PostModulation,null as Postrx,null as Retention,null as Change from ORTHOStaticDiscrepancy  
as a left join ORTHODiscrepancyDetails as b on a.DiscrepancyStaticId=b.DiscrepancyStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="DeleteEcToothDetails" xml:space="preserve">
    <value>Delete From CONSEstheticCorrectionDetails where EstheticCorrId={0}</value>
  </data>
  <data name="DeleteRadioDetails" xml:space="preserve">
    <value>Delete From RADIOTemplateDetails where RadioTempDetId={0}</value>
  </data>
  <data name="GetRadioHeaderforAllDepts" xml:space="preserve">
    <value>select * from RADIORegistrationDetails  rrd
inner join RADIOResultEntry rre on rrd.labdetid=rre.labdetid
inner join RADIOResultEntrydetails red on red.resultid=rre.resultid
inner join RADIOTemplateDetails as rd on rd.radiotempdetid=red.radiotempdetid
where rrd.LabId={0}</value>
  </data>
  <data name="GetRadioDetforAllDepts" xml:space="preserve">
    <value>select * from RADIORegistrationDetails  rrd
inner join radioresultentry as rre on rre.LabDetId=rrd.LabDetId
inner join MASBillingServices as ms on ms.ServiceId=rrd.ServiceId
where rrd.LabId={0}</value>
  </data>
  <data name="GetVitalDetailsListN" xml:space="preserve">
    <value> select VitalId,OmFSIpId,CONVERT(NVARCHAR(10),VitalDate,126) AS VitalDateDisplay,
CONVERT(VARCHAR(20),VitalTime, 100) as VitalTimeDisplay,(Bp+'/'+VitalBp) as BpN  ,Pulse as PulseN,
RespiratoryRate as RespiratoryRateN,Temperature as TemperatureN,Input,Output,Miscellaneous 
from OMFSIPOperativeVitalsDetails  
where OMFSIpId={0} and FromFlag={1}</value>
  </data>
  <data name="CONSSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY Con.ConservativeId ORDER BY SA.AllotId DESC) AS rn, Con.ConservativeId, SA.AllotId, Con.CONSNo,
SA.AllotDate, CONVERT(VARCHAR(10),Con.LastVisitedDate, 126) as ConservativeDate,OP.OpNo,(OP.PatientName) as PatientName,OP.Phone,
OP.Age, OP.GenderId, OP.Area, Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/CONS/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;CONSId=' + CAST(Con.ConservativeId as varchar(20)) )as Link
, CASE WHEN Con.SendForApproval1 =1  AND Con.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN Con.SendForApproval2 =1  AND Con.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN Con.SendForApproval3 =1  AND Con.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Con.Approval3=1 THEN 'Final level'when Con.Approval2=1 then '2nd level'				
WHEN Con.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType
FROM CONSCasesheet AS Con 
INNER JOIN OPDPatientRegistration AS OP ON Con.PatientId = OP.PatientId 
INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId  
INNER JOIN ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10),  R.TreatmentDate,126) )between '{0}' and '{1}')  AND SA.DeptId ={2}  AND {4})
SELECT * FROM cte WHERE rn = 1 order by  ConservativeId desc</value>
  </data>
  <data name="GetConsumableDetailsList" xml:space="preserve">
    <value>select CD.*,OT.ProductName from OMFSIPOtConsumablesDetails as CD
inner join MasOTProducts as OT on OT.ProductId=CD.ProductId
 where OMFSIpId={0}</value>
  </data>
  <data name="GetDatewiseBillsCollection" xml:space="preserve">
    <value> SELECT DisplayDate,SUM(TotalAmount) AS TotalAmount ,SUM(DiscountAmt) AS DiscountAmt,SUM(CancelledBill) AS CancelledBill,SUM(BalanceAmount) AS BalanceAmount,
SUM(ReceivedAmount) AS ReceivedAmount  from (
SELECT CONVERT(VARCHAR(10), B.BillDateTime, 126) AS DisplayDate, SUM(bd.ServiceAmount) AS TotalAmount, SUM(ISNULL(bd.DiscountAmt, 0)) AS DiscountAmt,0 as CancelledBill,SUM(bqd.BalanceAmount) as BalanceAmount, 0 as ReceivedAmount,COUNT(DISTINCT B.BillId) AS NoofBills
FROM Billing AS B INNER JOIN BillingDetails AS bd ON bd.BillId = B.BillId INNER JOIN
BillQueueDetails AS bqd ON bqd.BillQueueId = bd.BillQueueId WHERE     (CONVERT(varchar(10), B.BillDateTime, 126) BETWEEN '{0}' AND '{1}')  and {2}
GROUP BY CONVERT(varchar(10), B.BillDateTime, 126) 
UNION ALL
SELECT   CONVERT(VARCHAR(10), BillDateTime, 126) AS DisplayDate,  0 AS TotalAmount, 0 AS DiscountAmt ,SUM(BillAmount)  as CancelledBill,0 as BalanceAmount,0 as ReceivedAmount, 0 AS NoofBills FROM  Billing WHERE      BillCancelled = 'Y' and (CONVERT(varchar(10), BillDateTime, 126) BETWEEN '{0}' AND '{1}')  and {3}
GROUP BY CONVERT(varchar(10), BillDateTime, 126)
UNION ALL
SELECT   CONVERT(VARCHAR(10), BillDateTime, 126) AS DisplayDate,0 AS TotalAmount, 0  AS DiscountAmt ,0  as CancelledBill,0 as BalanceAmount,   SUM(BillAmount)  as ReceivedAmount, 0 AS NoofBills
FROM  Billing WHERE      BillCancelled = 'N' and (CONVERT(varchar(10), BillDateTime, 126) BETWEEN '{0}' AND '{1}') and {3}  GROUP BY CONVERT(varchar(10), BillDateTime, 126) ) as SingleTable  GROUP BY DisplayDate</value>
  </data>
  <data name="UpdateGroupInRadioTemplate" xml:space="preserve">
    <value>Update RADIOTemplate Set GroupId={0} where ServiceId={1}</value>
  </data>
  <data name="PROSCDApproval" xml:space="preserve">
    <value>SELECT P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age,
A.ProcedureNotes, A.ProcedureNotesDate, A.DoctorApproval,A.DoctorApprovalDate,
(S.StudentName+'-'+ S.StudentRegNo) as StudentName,(SC.CourseName + '-' + CY.CourseYearName) as CourseName
,('{3}/PROSTHO/CDApproval?allotId='+ CAST(A.AllotId as varchar(20))+'&amp;CaserecordId=' + CAST
( A.CaserecordId as varchar(20)) )as Link,
CASE WHEN SendForApproval1 =1  AND Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN SendForApproval2 =1  AND Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN SendForApproval3 =1  AND Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN Approval3=1 THEN 'Final level'when Approval2=1 then '2nd level'				
WHEN Approval1=1 THEN '1st level' ELSE '' End as ApprovalTypeVal FROM  StudentAllotment AS A 
INNER JOIN OPDPatientRegistration AS P ON A.PatientId = P.PatientId 
INNER JOIN MASCode AS C ON P.TitleId = C.CodeId 
INNER JOIN MASStudentRegistration AS S ON A.StudentId = S.StudentId 
INNER JOIN MASCourse AS SC ON S.StudentCourseId = SC.CourseId 
INNER JOIN MASCourseYear AS CY ON S.StudentYearId = CY.CourseYearId  
INNER JOIN PROSCDCASESHEET AS PCD ON PCD.ProsthoCDId= A.CaserecordId  WHERE  (A.DoctorApproval = 'N' )  

and ReferredTreatmentId ={4}
AND (A.ProcedureNotesDate  between '{0}' and '{1}')  and A.deptid={2}      
OR  exists (select * from BillQueueDetails where CONVERT(NVARCHAR(10),billqueuedate,126) 
between  '{0}' and '{1}' and IsApproved='N' and DeptId={2} AND PatientId=A.PatientId  AND CaserecordId=ProsthoCDId and ReferredTreatmentId ={4}) or exists
(select *  from referralstatus where CONVERT(NVARCHAR(10),FromDate,126)  between '{0}' and '{1}'
and IsApproved='N' and FromdeptId={2}  AND PATIENTID=P.PatientId and A.DeptId={2} and ReferredTreatmentId ={4} )
Order by ProcedureNotesDate desc,P.OpNo asc</value>
  </data>
  <data name="FileUploadList" xml:space="preserve">
    <value> SELECT     F.FileId, F.PatientId, F.DeptId, C.CodeDescription as FileTypeName, F.FileName, F.FilePath, F.[Description],F.TestDetId,F.FileDisplayPath
FROM         FileUpload AS F inner JOIN
MASCode AS C on C.CodeId = F.FileTypeId where F.PatientId= {0} and F.DeptId= {1}</value>
  </data>
  <data name="GetLaboratoryNoforAllDept" xml:space="preserve">
    <value>SELECT LaboratoryId,LaboratoryNo + ' - ( ' + CONVERT(VARCHAR(10), SampleCollectedDate, 126)+ ' )' AS LaboratoryNo FROM  LaboratoryRegistration WHERE PatientId={0}</value>
  </data>
  <data name="CheckforResultEntry" xml:space="preserve">
    <value> select RD.*,RTD.ServiceItems,RTD.IsHeader  from RADIOResultEntryDetails as RD
inner join RADIOTemplateDetails as RTD on RD.RadioTempDetId=RTD.RadioTempDetId
where RD.ResultId={0} order by DisplayOrder asc</value>
  </data>
  <data name="DCardRevisitPERIOSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.PerioId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PERIOCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="DCardRevisitPROSRPDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.ProsthoRPDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PROSRPDCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="PROSFPDSearch" xml:space="preserve">
    <value>WITH cte AS( SELECT ROW_NUMBER() OVER (PARTITION BY PROS.ProsthoFPDId ORDER BY SA.AllotId DESC) AS rn, 
PROS.ProsthoFPDId, SA.AllotId, SA.AllotDate, CONVERT(VARCHAR(10),  PROS.LastVisitedDate, 126) as ProsthoDate, PROS.ProsthoFPDNo as ProsthoNo,
OP.OpNo, OP.PatientName AS PatientName, OP.Age, OP.GenderId, OP.Area,  
Case when OP.GenderId=1 then 'Male' when OP.GenderId=2 then 'Female' when OP.GenderId=3 then 'Mx' End  as GenderName, OP.Phone,Case when R.VisitType='N' then 'New Visit' when R.VisitType='R' then 'ReVisit' when R.VisitType='T' then 'Transfer' End  as VisitType,
('{3}/PROSTHO/FPDEditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;PROSFPDId=' + CAST(PROS.ProsthoFPDId as varchar(20)) )as Link
, CASE WHEN PROS.SendForApproval1 =1  AND PROS.Approval1=0 THEN 'Waiting for 1st Approval' 
WHEN PROS.SendForApproval2 =1  AND PROS.Approval2=0 THEN 'Waiting for 2nd Approval' 
WHEN PROS.SendForApproval3 =1  AND PROS.Approval3=0 THEN 'Waiting for 3rd Approval' 
WHEN PROS.Approval3=1 THEN 'Final level'when PROS.Approval2=1 then '2nd level'				
WHEN PROS.Approval1=1 THEN '1st level' ELSE '' End as ApprovalType FROM OPDPatientRegistration AS OP INNER JOIN StudentAllotment AS SA ON OP.PatientId = SA.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.TitleId INNER JOIN
PROSFPDCasesheet AS PROS ON OP.PatientId = PROS.PatientId
inner join ReferralStatus as R on SA.ReferredId=R.ReferredId
WHERE ((Convert(varchar(10), R.TreatmentDate,126) )between '{0}' and '{1}')AND
 SA.DeptId ={2}  AND {4} ) SELECT * FROM cte WHERE rn = 1 order by  ProsthoFPDId</value>
  </data>
  <data name="Composite" xml:space="preserve">
    <value>Select a.*,null as Actual,null as CompositeInference from ORTHOStaticComposite   as a 
left join ORTHOCompositeDetails  as b on a.CompositeStaticId=b.CompositeStaticId where (a.DelInd = 0)</value>
  </data>
  <data name="GetMLCValueforPatient" xml:space="preserve">
    <value>select PROPERTYNAME, PROPVALUES from OPDPatientRegistrationPropertyValues as op
inner join OPDPatientRegistrationProperties as opr on  propertyid = propid
where PatientId={0} and PropertyId={1}</value>
  </data>
  <data name="DCardPHDSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) P.PHDId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM PHDCasesheet AS P INNER JOIN OMRCasesheet AS MR ON MR.PatientId = P.PatientId INNER JOIN OPDPatientRegistration AS OP ON P.PatientId = OP.PatientId  WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' ORDER BY NEWID()</value>
  </data>
  <data name="GetEcToothNumDetByConsId" xml:space="preserve">
    <value>SELECT *  FROM CONSEstheticCorrectionDetails where ConservativeId={0}</value>
  </data>
  <data name="GetRadioRegDetails" xml:space="preserve">
    <value> select Distinct RR.LabId,RR.LabNo,RR.BillId,CONVERT(VARCHAR(10),RR.CreatedDate, 126) as CreatedDateDisplay,R.PatientId ,R.OpNo,R.PatientName,R.Age,R.GenderId ,
D.DeptCode from RADIORegistration as RR 
inner join OPDPatientRegistration as R on RR.PatientId=R.PatientId
inner join BILLING as B on B.BillId=RR.BillId
inner join MASDepartment as D on b.DeptId=d.DeptId
where RR.LabId={0}</value>
  </data>
  <data name="OMFSIpList" xml:space="preserve">
    <value>select OM.OMFSIpId,OS.Operation,OS.ScheduleId,OM.OMFSIpNo,CONVERT(VARCHAR(10),OS.FromDate, 126) as OMFSIpDateDisplay,OM.ChiefComplaint  as IpChiefComplaint from OMFSIPCasesheet AS OM
Right Outer Join OMFSIPSchedule AS OS on OM.ScheduleId=OS.ScheduleId
where OS.PatientId={0}</value>
  </data>
  <data name="RadioSearch" xml:space="preserve">
    <value> select Distinct RR.LabId,RR.LabNo,RR.BillId,CONVERT(VARCHAR(10),RR.CreatedDate, 126) as CreatedDateDisplay,R.PatientId ,R.OpNo,R.PatientName,R.Age,R.GenderId ,
D.DeptCode,('{2}/Radiology/Edit?Id='+ CAST(RR.LabId as varchar(20)))as Link from RADIORegistration as RR 
inner join OPDPatientRegistration as R on RR.PatientId=R.PatientId
inner join BILLING as B on B.BillId=RR.BillId
inner join MASDepartment as D on b.DeptId=d.DeptId
where   (CONVERT(VARCHAR(10), RR.CreatedDate, 126)  between '{0}' and '{1}')</value>
  </data>
  <data name="DeleteToothDetails" xml:space="preserve">
    <value>Delete From CONSRestorativeProcedureDetails where RestorativeProId={0}</value>
  </data>
  <data name="GetAbutmentToothDetailsById" xml:space="preserve">
    <value>select * from PROSFPDAbutmentTeeth where ProsthoFPDId ={0} and AbutmentTeethId NOT IN ({1})</value>
  </data>
  <data name="FileUploadbyTestdetId" xml:space="preserve">
    <value>SELECT F.FileId, F.PatientId, F.DeptId, C.CodeDescription as FileTypeName, F.FileName, F.FilePath, F.[Description],F.FileDisplayPath
FROM    FileUpload AS F inner JOIN
MASCode AS C on C.CodeId = F.FileTypeId where F.PatientId= {0} and F.DeptId= {1} and F.TestDetId={2}</value>
  </data>
  <data name="DeleteMfpTreatProDetails" xml:space="preserve">
    <value>Delete From PROSMFPTreatmentDescription where ProsMaxilloProId={0}</value>
  </data>
  <data name="GetPatientDetails" xml:space="preserve">
    <value>   SELECT  OP.PatientId, CONVERT(VARCHAR(10), OP.RegDate, 126) AS RegDate,  RIGHT(CONVERT(VARCHAR(30), OP.REGDATE, 100), 7)   AS RegTime ,OP.OpNo,  CT.CategoryName as Category,OP.PatientName AS PatientName, OP.Age, Phone ,OP.Area,
('{1}/Registration/Edit?Id='+ CAST(OP.PatientId as varchar(20)) )as Link,
CASE when CONVERT(VARCHAR(10), OP.RegDate, 126) =  CONVERT(VARCHAR(10), getdate(), 126) then '0'   else 
('{1}/OPDRevisitRegistration/Create?Id='+ CAST(OP.PatientId as varchar(20)))   END AS   Revisit,
('class="btn btn-primary btn-xs" onclick="ViewModel('+ CAST(PatientId as varchar(20))+')"' ) as Refferal
FROM  OPDPatientRegistration AS OP 
INNER JOIN MASCode AS C ON C.CodeId = OP.TitleId 
INNER JOIN MASCategory AS CT ON OP.CategoryId = CT.CategoryId
WHERE {0}</value>
  </data>
  <data name="RickettsforPatient" xml:space="preserve">
    <value>  Select * from ORTHORickettsDetails as a
inner join ORTHOStaticRicketts as b on b.RickettsStaticId=a.RickettsStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as RickettsId,RickettsStaticId,0 as OrthoId,null as PreRx,null as PostRx,null as During,RickettsStaticId,Angles,MeanAt,AgeChange,DelInd from ORTHOStaticRicketts where DelInd = 0 and  RickettsStaticId not in (
Select b.RickettsStaticId from ORTHORickettsDetails as a
inner join ORTHOStaticRicketts as b on b.RickettsStaticId=a.RickettsStaticId where (b.DelInd = 0) and OrthoId={0}  )</value>
  </data>
  <data name="OPDFollowupSearch" xml:space="preserve">
    <value>SELECT     CONVERT(NVARCHAR(10), FW.FollowupDate, 126) AS FollowupDate, CONVERT(VARCHAR(20), FW.FollowupTime, 100) AS FollowupTime, OPD.OpNo, OPD.PatientName, OPD.Age,OPD.Phone, 
CASE WHEN opd.GenderId = 1 THEN 'Male' ELSE 'Female' END AS Gender, OPD.Area, MD.DeptCode, FW.FollowupReason, 
'{2}/OPDRevisitRegistration/Index?Id=' + CAST(FW.FollowupId AS varchar(20)) AS Revisit, OPD.Phone
FROM FollowUp AS FW INNER JOIN
OPDPatientRegistration AS OPD ON FW.PatientId = OPD.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OPD.TitleId INNER JOIN
MASDepartment AS MD ON MD.DeptId = FW.DeptId
WHERE (FW.RevisitId IS NULL) AND (FW.Status IS NULL)
AND ((Convert(varchar(10),  FollowupDate,126) )between '{0}' and '{1}') and  {3}</value>
  </data>
  <data name="DCardRevisitCONSSearch" xml:space="preserve">
    <value>SELECT  TOP ({0}) MF.ConservativeId as CaseSheetId, OP.PatientId,MR.OMRId, OP.TitleId, OP.GenderId
FROM CONSCasesheet AS MF INNER JOIN OMRCasesheet AS MR ON MR.PatientId = MF.PatientId INNER JOIN 
OPDPatientRegistration AS OP ON MF.PatientId = OP.PatientId 
WHERE  Convert(varchar(10), OP.RegDate,126) != '{1}' AND OP.IsDummy='Y' and OP.RegDate &gt;= DATEADD(MONTH, -{2}, GETDATE())
AND MF.PatientId NOT IN(SELECT PatientId FROM OPDRevisitRegistration WHERE Convert(varchar(10),RevisitDate,126)= '{1}')
ORDER BY NEWID()</value>
  </data>
  <data name="HoldawayforPatient" xml:space="preserve">
    <value>  Select * from ORTHOHoldawayDetails as a
inner join ORTHOStaticHoldaway as b on b.HoldawayStaticId=a.HoldawayStaticId where (b.DelInd = 0) and OrthoId={0}
Union
select 0 as HoldawayId,HoldawayStaticId,0 as OrthoId,null as Value,null as HoldInference,null as PreRx,null as PostRx,null as During,HoldawayStaticId,Measurements,Mean,Indicator,DelInd from ORTHOStaticHoldaway where DelInd = 0 and  HoldawayStaticId not in (
Select b.HoldawayStaticId from ORTHOHoldawayDetails as a
inner join ORTHOStaticHoldaway as b on b.HoldawayStaticId=a.HoldawayStaticId where (b.DelInd = 0) and OrthoId={0}  )</value>
  </data>
  <data name="GetItemQuantity" xml:space="preserve">
    <value>SELECT item.*,
ItemStore.[StockCode],
ItemSupplier.Phone,
ItemSupplier.email,
ItemSupplier.address,
CASE WHEN ItemIssue.issued IS NULL THEN 0 ELSE ItemIssue.issued END as 'Issued',
CASE WHEN ItemIssue.returned IS NULL THEN 0 ELSE ItemIssue.returned END as 'Returned',
CASE WHEN ItemStock.ItemStock_quantity IS NULL THEN 0 ELSE ItemStock.ItemStock_quantity END as AddedStock FROM item left JOIN ItemCategory 
on item.ItemCategoryId=ItemCategory.ItemCategoryId 
left JOIN ItemStore on item.ItemStoreid=ItemStore.ItemStoreid 
left JOIN ItemSupplier on item.ItemSupplierid=ItemSupplier.ItemSupplierid 
left JOIN (SELECT ItemStock.ItemId,
sum(quantity) ItemStock_quantity 
FROM ItemStock group by ItemStock.ItemId) as ItemStock 
on ItemStock.ItemId=item.ItemId 
left JOIN (SELECT m.ItemId as [IssueItemId], 
CASE WHEN (SELECT SUM(quantity) FROM ItemIssue 
WHERE ItemIssue.ItemId = m.ItemId 
and ItemIssue.IsReturned = 0) IS NULL THEN 0 ELSE (SELECT SUM(quantity) FROM ItemIssue 
WHERE ItemIssue.ItemId = m.ItemId 
and ItemIssue.IsReturned = 0) END as [issued] ,
CASE WHEN (SELECT SUM(quantity) FROM ItemIssue 
WHERE ItemIssue.ItemId = m.ItemId and ItemIssue.IsReturned = 1) IS NULL THEN 0 ELSE (SELECT SUM(quantity) FROM ItemIssue 
WHERE ItemIssue.ItemId = m.ItemId 
and ItemIssue.IsReturned = 1) END as [returned] 
FROM ItemIssue m GROUP BY ItemId) as ItemIssue on ItemIssue.IssueItemId=item.ItemId
where Item.ItemId = {0}</value>
  </data>
  <data name="CensusCountReportVisitors" xml:space="preserve">
    <value>SELECT 
DATEADD(dd, 0, DATEDIFF(dd, 0, R.FromDate )) as [Date], -- convert datetime to date only
SUM(CASE WHEN age &lt;= 13 THEN 1 ELSE 0 END) as Children,  
SUM(CASE WHEN age &gt; 13 and genderid = 1 THEN 1 ELSE 0 END) as Male,
SUM(CASE WHEN age &gt; 13 and genderid= 2  THEN 1 ELSE 0 END) as Female
FROM         ReferralStatus AS R INNER JOIN
OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId INNER JOIN
MASCode AS C ON C.CodeId = OP.CategoryId
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}')and (VisitType ='{2}') 
 and  OP.CategoryId = '{3}'
GROUP BY
   DATEADD(dd, 0, DATEDIFF(dd, 0, R.FromDate ))
ORDER BY
   DATEADD(dd, 0, DATEDIFF(dd, 0, R.FromDate )) ASC</value>
  </data>
  <data name="ChildServiceDeptSearch" xml:space="preserve">
    <value>SELECT     B.ServiceId, B.ServiceCode, B.ServiceName, B.ServiceAmount, B.HSNSACCode, D.DeptCode, B.GSTPercentage, 
'{1}/BillingServices/EditChildService?ServiceId=' + CAST(B.ServiceId AS varchar(20))+'&amp;DepartmentId=' + CAST(B.DeptId AS varchar(20))+'&amp;ParentId=' + CAST(B.ParentId AS varchar(20)) AS Link
FROM  MASBillingSubServices AS B INNER JOIN MASDepartment AS D ON B.DeptId = D.DeptId LEFT JOIN
MASGroup AS G ON B.GroupId = G.GroupId
where B.DeptId={0} and B.DelInd = {2}
and ParentId={3}</value>
  </data>
  <data name="AllotHomeWithDatePerioDiagnosis" xml:space="preserve">
    <value>SELECT  distinct  SA.AllotId, CONVERT(VARCHAR(10), SA.AllotDate, 126) AS AllotDate, RIGHT(CONVERT(VARCHAR(50),SA.CreatedDate, 100), 7) AS AllotTime, P.OpNo, C.CodeDescription + P.PatientName AS PatientName, P.Age, P.Phone,
 CASE WHEN SA.AllotTypeId =4 THEN  C1.CourseName + '-' + D1.DoctorName   ELSE
(C1.CourseName + '-' + SR.StudentName + '-' +  SR.StudentRegNo) END  AS  StudentName, SA.PatientId,SA.ReferredId, SA.DeptId, SA.StudentId ,
('PERIODiagnosis/EditOnly?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;perioid=' + CAST(PD.PerioId as varchar(20)) )as DiagnosisLink,
('{3}/Operations?allotId='+ CAST(SA.AllotId as varchar(20))+'&amp;patientId=' + CAST(SA.PatientId as varchar(20)) )as Link ,
('class="btn btn-danger btn-xs" onclick="showCancelAllotment('+ CAST(SA.AllotId as varchar(20))+')"' )as  DeleteLink
FROM StudentAllotment AS SA INNER JOIN OPDPatientRegistration AS P ON SA.PatientId = P.PatientId INNER JOIN
MASCode AS C ON C.CodeId = P.TitleId INNER JOIN MASStudentRegistration AS SR ON SA.StudentId = SR.StudentId 
INNER JOIN PERIODiagnosisCasesheet AS PD ON PD.PatientId = SA.PatientId
INNER JOIN ReferralStatus AS R ON SA.ReferredId = R.ReferredId
LEFT OUTER JOIN
MASDoctor AS D1 ON SA.StudentId = D1.DoctorId
INNER JOIN
MASCourse AS C1 ON SA.AllotTypeId = C1.CourseId
WHERE (SA.DeptId ={0}) and (R.ToDeptId ={0}) and
(Convert(varchar(10), SA.AllotDate,126)between '{1}' and '{2}')  order by SA.AllotId desc</value>
  </data>
  <data name="RefferalReportByDepartment" xml:space="preserve">
    <value>SELECT COUNT(M.DeptCode) as [Total],(M.DeptCode + ' - '+ M.DeptName) as DeptCode FROM  ReferralStatus AS R INNER JOIN  MASDepartment AS M
ON R.ToDeptId = m.DeptId  
inner join OPDPatientRegistration AS OP ON R.PatientId = OP.PatientId  
WHERE ((Convert(varchar(10), R.FromDate,126) )between '{0}' and '{1}') AND R.FromdeptId ={2}
GROUP BY M.DeptCode, M.DeptName</value>
  </data>
</root>