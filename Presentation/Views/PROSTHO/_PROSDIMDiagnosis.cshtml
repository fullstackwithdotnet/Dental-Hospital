@using Metron.Entities
@model DIMS.ViewModels.PROSDIMViewModel
@functions{
    public string GetClassFromProperties(string propertyName)
    {
        var props = Model.Proplist.FirstOrDefault<PROSDIMCasesheetProperties>(x => x.PropertyName == propertyName);

        if (props != null && props.PropertyVisibility == "N")
        {
            return "display:none";
        }

        return "";
    }
}

    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        
            <div class="row">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.DifferentialDiagnosis, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(x => x.DifferentialDiagnosis, new { @class = "form-control" })
                    </div>
                </div>
            </div>
     
            <div class="row">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.Prognosis, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(x => x.Prognosis, new { @class = "form-control" })
                    </div>
                </div>
            </div>
       
            <div class="row">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(model => model.FinalDiagnosis, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(x => x.FinalDiagnosis, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
 

