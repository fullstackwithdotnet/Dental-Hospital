@model IEnumerable<DIMS.ViewModels.BillingQueueServiceViewModel>
@{
    string modelName = ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix;
    int index = 0;
}
@functions{
    string GetId(string fieldName, int index)
    {
        return string.Format("{0}[{2}]_{1}", ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix, fieldName, index);
    }
    string GetName(string fieldName, int index)
    {
        return string.Format("{0}[{2}].{1}", ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix, fieldName, index);
    }
}
<div class="table-responsive">
    <table id="tbLabRadApproval" class="table table-bordered">
        <tr>

            <th class="col-md-3">
                @Html.DisplayNameFor(model => model.ServiceName)
            </th>
            <th class="col-md-2">
                @Html.DisplayNameFor(model => model.TeethNo)
            </th>
            <th class="col-md-1">
                @Html.DisplayNameFor(model => model.Rate)
            </th>
            <th class="col-md-1">
                @Html.DisplayNameFor(model => model.Qty)
            </th>
            <th class="col-md-2">
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th class="col-md-1 hidden">
                @Html.DisplayNameFor(model => model.DiscountPer)
            </th>
            <th class="col-md-2">
                @Html.DisplayNameFor(model => model.NetAmount)
            </th>
            <th></th>

        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td>

                    @Html.HiddenFor(modelItem => item.ServiceId, new { @class = "form-control iHidden", @id = GetId("ServiceId", index), @Name = GetName("ServiceId", index) })
                    @Html.DisplayFor(modelItem => item.ServiceName)
                    @Html.HiddenFor(modelItem => item.ServiceName, new { @class = "form-control", @id = GetId("ServiceName", index), @Name = GetName("ServiceName", index) })
                    @Html.HiddenFor(modelItem => item.PatientId, new { @class = "form-control", @id = GetId("PatientId", index), @Name = GetName("PatientId", index) })
                    @Html.HiddenFor(modelItem => item.BillQueueId, new { @class = "form-control", @id = GetId("BillQueueId", index), @Name = GetName("BillQueueId", index) })

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TeethNo)
                    @Html.HiddenFor(modelItem => item.TeethNo, new { @class = "form-control", @id = GetId("LabRadTeethNo", index), @Name = GetName("TeethNo", index) })

                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rate)
                    @Html.HiddenFor(modelItem => item.Rate, new { @class = "form-control", @id = GetId("LabRadRate", index), @Name = GetName("Rate", index) })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Qty)
                    @Html.HiddenFor(modelItem => item.Qty, new { @class = "form-control js_LRsumQty", @id = GetId("LabRadQty", index), @Name = GetName("Qty", index) })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Amount)
                    @Html.HiddenFor(modelItem => item.Amount, new { @class = "form-control js_LRsumAmount", @id = GetId("LabRadAmount", index), @Name = GetName("Amount", index) })

                    @*@Html.HiddenFor(modelItem => item.DiscountPer, new { @class = "form-control", @id = GetId("LabRadDiscountPer", index), @Name = GetName("DiscountPer", index) })*@
                </td>
                <td hidden>
                    @Html.DisplayFor(modelItem => item.DiscountPer)
                    @Html.HiddenFor(modelItem => item.DiscountPer, new { @class = "form-control js_LRsumDiscountPer", @id = GetId("LabRadDiscountPer", index), @Name = GetName("DiscountPer", index) })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NetAmount)
                    @Html.HiddenFor(modelItem => item.NetAmount, new { @class = "form-control js_LRsumNetAmount", @id = GetId("LabRadNetAmount", index), @Name = GetName("NetAmount", index) })
                    @Html.HiddenFor(modelItem => item.PayableAmount, new { @class = "form-control", @id = GetId("PayableAmount", index), @Name = GetName("PayableAmount", index) })
                </td>


                @if (item.Approvalvalue.Trim() == "Y")
                {
                    <td class="text-green">
                        @Html.DisplayFor(modelItem => item.ApprovalStatus)
                    </td>
                }
                else if (item.Approvalvalue.Trim() == "N")
                {
                <td>
				<label class="container-checkbox">
                    @Html.CheckBoxFor(modelItem => item.IsApproved, new { @class = "", @id = GetId("IsApproved", index), @Name = GetName("IsApproved", index) })
  <span class="checkmark"></span>
</label>
                </td>
                }

            </tr>
            index++;

        }

    </table>
</div>


 



