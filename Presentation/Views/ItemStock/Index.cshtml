@using DIMS.Helpers
@model IEnumerable<DIMS.ViewModels.ItemStockViewModel>

@{
    ViewBag.Title = "Item Stock List";
    var result = ViewBag.Result;
}



<p>
    @Html.ActionLink("Create New", "Create")
</p>


<div class="box box-default box-solid">
    <div class="box-header with-border">
        <h4 class="box-title">@ViewBag.Title</h4>
    </div>
    <div class="box-body">
        @if (result != null && result.Success && !ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            @BootstrapAlert.BootstrapCustomAlertHtmlString(result.Message, BootstrapAlertType.Success)
        }
        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
            {
                @BootstrapAlert.BootstrapCustomAlertHtmlString(@modelError.ErrorMessage, BootstrapAlertType.Danger)
            }
        }
        <table class="table table-bordered">
            <tr>
                <th>
                    S.No
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ItemCategory.CategoryName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SupplierId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StoreId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CreatedDate)
                </th>
                <th>Actions</th>
            </tr>
            @{int i = 0;}
            @if (Model.Any())
            {
                foreach (var item in Model)
                {
                    i++;
                    <tr>
                        <td><span>@i</span></td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemCategory.CategoryName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemSupplier.ItemSupplierName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ItemStore.StoreName)
                        </td>
                        <td>
                            
                            @(item.Symbol == "-" ? item.Symbol + " " + item.Quantity : item.Quantity.ToString())
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedDate)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.ItemStockId })
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <th colspan="5">
                        No Items are availeble..
                    </th>

                </tr>
            }

        </table>
    </div>
</div>



