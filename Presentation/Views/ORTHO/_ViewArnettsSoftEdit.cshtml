@model IEnumerable<DIMS.ViewModels.OrthoAnalysisViewModal>

@{
    string modelName = ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix;
    int index = 0;
}
@functions{
    string GetId(string fieldName, int index)
    {
        return string.Format("{0}[{2}]_{1}", ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix, fieldName, index);
    }
    string GetName(string fieldName, int index)
    {
        return string.Format("{0}[{2}].{1}", ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix, fieldName, index);
    }
}

<div class="row">
    <div class="col-md-12">
        <table class="table">
            <tr>
                <th class="hidden">
                    @Html.DisplayNameFor(model => model.ArnettStaticId)
                </th>
                <th class="hidden">
                    @Html.DisplayNameFor(model => model.ArnettId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Measurements)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Female)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.Male)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PreRx)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.PostModulation)
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td class="hidden">
                        @Html.TextBoxFor(modelItem => item.ArnettStaticId, new { @class = "col-sm-10 form-control", @id = GetId("ArnettStaticId", index), @Name = GetName("ArnettStaticId", index) })
                    </td>
                    <td class="hidden">
                        @Html.TextBoxFor(modelItem => item.ArnettId, new { @class = "col-sm-10 form-control", @id = GetId("ArnettId", index), @Name = GetName("ArnettId", index) })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Measurements)
                    </td>
                    @if (item.Indicator != "HEADER")
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.Female)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Male)
                        </td>
                        <td>
                            @Html.TextBoxFor(modelItem => item.PreRx, new { @class = "col-sm-10 form-control", @id = GetId("PreRx", index), @Name = GetName("PreRx", index) })
                            @Html.HiddenFor(modelItem => item.PreRx)
                        </td>
                        <td>
                            @Html.TextBoxFor(modelItem => item.PostModulation, new { @class = "col-sm-10 form-control", @id = GetId("PostModulation", index), @Name = GetName("PostModulation", index) })
                        </td>
                    }
                 </tr>
                index++;
            }
        </table>

    </div>
</div>