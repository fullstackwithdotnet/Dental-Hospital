 @model DIMS.ViewModels.UserViewModel

@using (Html.BeginForm("Create", "User", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true)

        <div class="box box-info">
            <div class="box-header with-border" style="background-color:aliceblue;">
                <h3 class="box-title"> New User</h3>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.FirstName)
                            </div>
                        </div>

                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.LastName, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.LastName)
                            </div>
                        </div>

                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.RoleName, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.RoleId, new SelectList(Model.Roles, "RoleId", "RoleName"), htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.RoleId)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @id = "CheckUsername" })
                                @Html.ValidationMessageFor(model => model.UserName)
                            </div>
                        </div>

                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Password)
                            </div>
                        </div>

                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ConfirmPassword)
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group form-group-sm">
                        <div class="col-md-12 align RightCenter">
                            <input type="submit" value="Save" class="btn btn-success btn-sm" id="btnSaveUserDepartment" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts {
    <script type="text/javascript">

       
        function UserNameAvailability($Username) {
            $.ajax({
                type: "POST",
                url: '@Url.Action("IsUserNameExists", "User")',
                data: '{username: "' + $Username + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data == true) {
                        alert("Username already exists!");
                        window.location.reload(false);
                        return false;
                    }
                    else if (data == false) {
                       // alert("Username available!");

                    }
                },
                failure: function (response) {
                    alert(response);
                }
            });
        }

        $('#CheckUsername').change(function (e) {
            
            var $Username = $("#CheckUsername").val();
            if ($Username != "") {
                UserNameAvailability($Username);
            }
        });


    </script>
}



