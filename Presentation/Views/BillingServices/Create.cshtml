@model DIMS.ViewModels.BillingServicesViewModal

@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)

        <div class="box box-default box-solid">
            <div class="box-header with-border">
                <h3 class="box-title"> Billing Services</h3>
            </div>
            <div class="box-body">
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(x => x.DeptId, new { @class = " control-label col-md-4" })
                            <div class="col-md-8 dropdown">
                                @Html.DropDownListFor(model => model.DeptId, new SelectList(Model.DepartmentList, "DeptId", "DeptName"), "Select", htmlAttributes: new { @class = "form-control col-md-2" })
                            </div>

                        </div>
                    </div>
                    <div id="GroupView" class="row">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(x => x.GroupId, new { @class = " control-label col-md-4" })
                            <div class="col-md-8 dropdown">
                                @Html.DropDownListFor(model => model.GroupId, Model.GroupList, htmlAttributes: new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group form-group-sm required">
                            @Html.LabelFor(model => model.Service, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.Service, new { @class = "form-control ", @maxLength = "100", @required = "required" })
                                @Html.ValidationMessageFor(model => model.Service)
                            </div>
                        </div>
                    </div>


                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group form-group-sm required">
                            @Html.LabelFor(model => model.ServiceAmount, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ServiceAmount, new { @class = "form-control OnlyNumber", @maxLength = "5", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ServiceAmount)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.HSNSACCode, new { @class = "control-label col-md-4" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.HSNSACCode, new { @class = "form-control ", @maxLength = "10" })
                                @Html.ValidationMessageFor(model => model.HSNSACCode)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group form-group-sm hidden">
                            @Html.LabelFor(model => model.GSTPercentage, new { @class = "control-label col-md-4" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.GSTPercentage, new { @class = "form-control OnlyNumber", @maxLength = "2" })
                                @Html.ValidationMessageFor(model => model.GSTPercentage)

                            </div>
                            <div class="col-md-1">
                                <div><span style="color:red">(%)</span></div>
                            </div>
                        </div>
                    </div>
                    @Html.HiddenFor(model => model.Radio)
                    @Html.HiddenFor(model => model.Lab)
                </div>

                <div class="col-md-12">
                    <div class="form-group form-group-sm">
                        <div class="form-group form-group-sm">
                            @{
                                if (TempData["message"] != null)
                                {
                                    <script type="text/javascript">
                                        alert(@Html.Raw(Json.Encode(TempData["message"])));
                                    </script>
                                }
                            }
                        </div>
                        <center>
                            <input type="submit" value="Save" class="fa fa-save btn btn-success" />
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>
                                }

<div class="table-responsive">
    <table id="tbServiceSearch" class="table table-bordered table-hover" style="width:100%">
        <thead>
            <tr>
                <th class="col-md-1">SERVICE CODE </th>
                <th class="col-md-3">SERVICE NAME</th>
                <th class="col-md-2">GROUP</th>
                <th class="col-md-2">AMOUNT</th>
                <th class="col-md-1">GST %</th>
                <th class="col-md-1">DEPARTMENT</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    </div>
    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
    @section scripts {
        <script type="text/jscript">

            $(document).ready(function () {
                $('#GroupView').hide();

                $("#DeptId").change(function () {
                    Searchvalue();
                    showGroup();
                });
                var showGroup = function () {
                    
                    var $DeptId = $('#DeptId').val();
                    var $Radio = $('#Radio').val();
                    var $Lab = $('#Lab').val();
                    $('#GroupView').show();
                    //if (($Radio == $DeptId) || ($Lab == $DeptId)) {
                    //    $('#GroupView').show();
                    //}
                    //else {
                    //    $('#GroupView').hide();
                    //}
                }
                var Searchvalue = function () {
                    var $DeptId = $('#DeptId').val();
                    $('#tbServiceSearch tbody').empty();
                    $('#GroupId').empty();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetServiceDetailsById", "BillingServices")',
                        data: '{DeptId: "' + $DeptId + ' "}',
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            table = $('#tbServiceSearch').DataTable();
                            table.destroy();
                            $('#tbServiceSearch').dataTable({
                                data: data.ServicesList,
                                columns: [
                                    { 'data': 'ServiceCode' },
                                    { 'data': 'ServiceName' },
                                    { 'data': 'GroupName' },
                                    { 'data': 'ServiceAmount' },
                                    { 'data': 'GSTPercentage' },
                                    { 'data': 'DeptCode' },
                                ],
                                "dom": "Bfrtip",
                                "buttons": ['Copy', 'excel', 'pdf', 'csv', 'print']

                            })

                            $.each(data.GroupList, function (i, Group) {
                                $('#GroupId').append('<option value="'
                                + Group.Value + '">'
                                + Group.Text + '</option>');
                            });
                        },
                    })
                }
                Searchvalue();

                @*$("#Service").change(function () {
                var $Service = $('#Service').val();
                var $DeptId = $('#DeptId').val();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("CheckServiceName", "BillingServices")',
                    data: '{Service: "' + $Service + ' ",DeptId: "' + $DeptId + ' "}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        

                        if (data.value == 0) {
                            alert("Already Exist");
                            $('#Service').val('');
                            $('#Service').focus();
                        }

                    },
                })
            });*@

            });
        </script>
    }










