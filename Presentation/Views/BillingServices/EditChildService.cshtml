
@using Metron.Entities
@model DIMS.ViewModels.BillingSubServicesViewModal

@{
    /**/

    ViewBag.Title = "Create";
    Model.ServicesList = new List<MASBillingServices>();
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)

        <div class="box box-default box-solid">
            <div class="box-header with-border">
                <h3 class="box-title"> Billing Services</h3>
            </div>
            <div class="box-body">
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(x => x.DeptId, new { @class = " control-label col-md-4" })
                            <div class="col-md-8 dropdown">
                                @Html.DropDownListFor(model => model.DeptId, new SelectList(Model.DepartmentList, "DeptId", "DeptName"), "Select", htmlAttributes: new { @class = "form-control col-md-2", @readonly = "readonly" })
                            </div>

                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group form-group-sm required">
                            @Html.LabelFor(model => model.ParentId, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.ParentId, new SelectList(Model.ServicesList, "ServiceId", "ServiceName"), "Select", htmlAttributes: new { @class = "form-control col-md-2", @disabled = "disabled" })
                                @Html.ValidationMessageFor(model => model.ParentId)
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group form-group-sm required">
                            @Html.LabelFor(model => model.ServiceName, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ServiceName, new { @class = "form-control " })
                                @Html.ValidationMessageFor(model => model.ServiceName)
                            </div>
                        </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="form-group form-group-sm required">
                            @Html.LabelFor(model => model.ServiceAmount, new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextBoxFor(model => model.ServiceAmount, new { @class = "form-control OnlyNumber", @maxLength = "5", @required = "required" })
                                @Html.ValidationMessageFor(model => model.ServiceAmount)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.HSNSACCode, new { @class = "control-label col-md-4" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.HSNSACCode, new { @class = "form-control ", @maxLength = "10" })
                                @Html.ValidationMessageFor(model => model.HSNSACCode)
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group form-group-sm hidden">
                            @Html.LabelFor(model => model.GSTPercentage, new { @class = "control-label col-md-4" })
                            <div class="col-md-7">
                                @Html.TextBoxFor(model => model.GSTPercentage, new { @class = "form-control OnlyNumber", @maxLength = "2" })
                                @Html.ValidationMessageFor(model => model.GSTPercentage)

                            </div>
                            <div class="col-md-1">
                                <div><span style="color:red">(%)</span></div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="col-md-12">
                    <div class="form-group form-group-sm">
                        <div class="form-group form-group-sm">
                            @{
                                if (TempData["message"] != null)
                                {
                                    <script type="text/javascript">
                                        alert(@Html.Raw(Json.Encode(TempData["message"])));
                                    </script>
                                }
                            }
                        </div>
                        <center>
                            <input type="submit" value="Save" class="fa fa-save btn btn-success" />
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div class="table-responsive">
    <table id="tbServiceSearch" class="table table-bordered table-hover" style="width:100%">
        <thead>
            <tr>
                <th class="col-md-1">SERVICE CODE </th>
                <th class="col-md-3">SERVICE NAME</th>
                <th class="col-md-2">AMOUNT</th>
                <th class="col-md-1">GST %</th>
                <th class="col-md-1">DEPARTMENT</th>
                <th class="col-md-1">#</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section scripts {
    <script type="text/javascript">

        $(document).ready(function() {


            function searchValue() {
                var departmentId = $('#DeptId').val();
                var serviceId = $('#ParentId').val();
                $('#tbServiceSearch tbody').empty();
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSubServiceDetailByParent", "BillingServices")',
                    data: '{departmentId: "' + @Model.DeptId + '", parentId: "' + @Model.ParentId + '"}',

                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(data) {
                        table = $('#tbServiceSearch').DataTable();
                        table.destroy();
                        $('#tbServiceSearch').dataTable({
                            data: data,
                            "deferRender": false,
                            columns: [
                                { 'data': 'ServiceCode' },
                                { 'data': 'ServiceName' },
                                { 'data': 'ServiceAmount' },
                                { 'data': 'GSTPercentage' },
                                { 'data': 'DeptCode' },
                                {
                                    "title": "#",
                                    "className": '',
                                    'autoWidth ': false,
                                    "render": function (param1, param2, param3, meta) {
                                        var str = "";
                                       
                                        if (param2 === 'display') {
                                           
                                            //str = str+ '<a class="btn-xs btn-info glyphicon glyphicon-edit" href=""/BillingServices/EditChildService?ServiceId=' +
                                            //        param3.ServiceId +
                                            //        '&DepartmentId=' +
                                            //        param3.DeptId +
                                            //        '&ParentId=' +
                                            //        param3.ParentId +
                                            //        '""></a>';
                                            str = str +
                                                '<a class="btn-xs btn-danger glyphicon glyphicon-trash deleteService" href="/BillingServices/DeleteSubService/" data-attr-id="' +
                                                param3.ServiceId +
                                                '"></a>';
                                        }
                                        return str;
                                    }
                                },
                            ],
                            "dom": "Bfrtip",
                            "buttons": ['Copy', 'excel', 'pdf', 'csv', 'print']

                        });
                    },
                });

                $(document).on('click',
                    'a.deleteService',
                    function(e) {
                        deleteService($(this).attr('href'), $(this).attr('data-attr-id'));
                        return false;
                    });
            }

            getServicesByDepartment(@Model.DeptId);


            function deleteService(url, id) {
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",

                    url: url,
                    data: JSON.stringify({ ServiceId: id }),
                    success: function(data) {
                        if (data.Success) {
                            location.reload();
                        }
                    },
                    error: function(xhr, err) {
                        //alert("readyState: " + xhr.readyState + "\nstatus: " + xhr.status);
                        //alert("responseText: " + xhr.responseText);
                    }
                });
            }

            function getServicesByDepartment(param) {
                $('#ParentId').empty();
                $('#ParentId').append('<option value="0">Select</option>');
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetServiceDetailsById", "BillingServices")',
                    data: '{DeptId: "' + param + ' "}',
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function(data) {

                        $.each(data.ServicesList,
                            function(i, detail) {
                                var str = "";
                                if (detail.ServiceId == @Model.ParentId) {
                                    str = "selected";
                                }
                                $('#ParentId').append('<option ' +
                                    str +
                                    ' value="' +
                                    detail.ServiceId +
                                    '">' +
                                    detail.ServiceName +
                                    '</option>');
                            });
                        searchValue();
                    }
                });
            }

        });
    </script>
}










