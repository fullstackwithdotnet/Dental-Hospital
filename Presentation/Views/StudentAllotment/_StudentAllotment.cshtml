@model DIMS.ViewModels.StudentAllotmentViewModel
@{
    ViewBag.Title = "_StudentAllotment";
}

@*<link href="~/Content/select2.min.css" rel="stylesheet" />*@

@functions
{
    public string GetUrl()
    {
        var user = User as DIMS.Infrastructure.CustomPrincipal;
        return user.GetRootUrl();
    }
}

<div>
    <form id="Allotform">
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.Partial("../PatientInformation/_PatientAllotmentDetails", Model.patientInformationViewModel)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group form-group-sm">
                                @Html.LabelFor(x => x.ReferredReason, new { @class = "control-label col-md-1" })
                                <div class="col-md-11">
                                    @Html.DisplayFor(x => x.ReferredReason)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group form-group-sm">
                                @Html.LabelFor(x => x.AllotTypeId, new { @class = "control-label col-md-1" })
                                <div class="col-md-3">
                                    @Html.DropDownListFor(model => model.AllotTypeId, new SelectList(Model.AllotTypelist, "CourseId", "CourseName"), htmlAttributes: new { @class = "form-control" })
                                </div>
                                <div class="col-md-6">
                                    @Html.DropDownListFor(model => model.StudentId, new SelectList(Model.StudentAllotmentlist, "StudentId", "StudentName"), new { @class = "form-control select2" })
                                    @Html.HiddenFor(model => model.ReferredId)
                                    @Html.HiddenFor(model => model.AllotDate)
                                    @Html.HiddenFor(model => model.DeptId)
                                    @Html.HiddenFor(model => model.PatientId)
                                    @Html.HiddenFor(model => model.DeptCode)
                                    @Html.ValidationMessageFor(x => x.StudentId)
                                </div>
                                <div class="col-md-2">
                                    <a id="btnAllot" class="fa fa-save btn btn-success"> Submit</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if (Model.PreviousAllotmentlist.Count() > 0)
        {
            <h5>Previous Allotment</h5>
            <div class="box box-info ">
                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Partial("../StudentAllotment/_PreviousAllotment", Model.PreviousAllotmentlist)
                        </div>
                    </div>
                </div>
            </div>

        }
    </form>
</div>


@section scripts{

}

@*<script src="~/Scripts/select2.full.min.js"></script>*@

<script type="text/javascript">

    //$(function () {
    //    //Initialize Select2 Elements
    //    $('#StudentId').select2()
    //});


    $('#AllotTypeId').on('change', function () {
        $('#StudentId').empty();
        //$('#StudentId').append('<option value="0">Select</option>');
        $.ajax({
            type: 'POST',
            url: '@Url.Action("GetAllotDoctorOrStudentlist", "StudentAllotment")',
            dataType: 'json',
            data: { AllotTypeId: $("#AllotTypeId").val(), DeptId: $("#DeptId").val() },
            success: function (Details) {
                $.each(Details, function (i, detail) {
                    $('#StudentId').append('<option value="' + detail.Value + '">' +
                     detail.Text + '</option>');
                });
            }
        });
    });



    $('#btnAllot').on('click', function () {
        
        var allotform = $("#Allotform").serialize();
        $.ajax({
            type: "POST",
            //url: "@GetUrl()/StudentAllotment/Create",
            url: '@Url.Action("Create", "StudentAllotment")',
            data: allotform,
            success: function (data) {
                var $DeptCode = $("#DeptCode").val();
                $("#myModel").modal("hide");
                if ($DeptCode == 'OMR') {
                    window.location.href = "@GetUrl()/OMR/Index";
                }
                else if ($DeptCode == 'PERIO') {
                    window.location.href = "@GetUrl()/PERIO/Index";
                }
                else if ($DeptCode == 'ORTHO') {
                    window.location.href = "@GetUrl()/ORTHO/Index";
                }
                else if ($DeptCode == 'CONS') {
                    window.location.href = "@GetUrl()/CONS/Index";
                }
                else if ($DeptCode == 'PROSTHO') {
                    window.location.href = "@GetUrl()/PROSTHO/Index";
                }
                else if ($DeptCode == 'PHD') {
                    window.location.href = "@GetUrl()/PHD/Index";
                }
                else if ($DeptCode == 'OMFS') {
                    window.location.href = "@GetUrl()/OMFS/Index";
                }
                else if ($DeptCode == 'PEDO') {
                    window.location.href = "@GetUrl()/PEDO/Index";
                }
                else if ($DeptCode == 'ORPATH') {
                    window.location.href = "@GetUrl()/OralPathology/Index";
                }
            },
            failure: function (response) {
                alert(response.responseText);
            },
        })
    });
</script>


