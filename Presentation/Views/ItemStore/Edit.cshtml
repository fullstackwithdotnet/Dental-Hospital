@using DIMS.Helpers
@model DIMS.ViewModels.ItemStoreViewModel

@{
    ViewBag.Title = "Edit Store";
    var result = ViewBag.Result;
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <div class="box box-default box-solid">
            <div class="box-header with-border">
                <h4 class="box-title">Edit Store For Inventory</h4>
            </div>
            <div class="box-body">
                @if (result != null && result.Success && !ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                {
                    @BootstrapAlert.BootstrapCustomAlertHtmlString(result.Message, BootstrapAlertType.Success)
                }
                @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
                {
                    foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
                    {
                        @BootstrapAlert.BootstrapCustomAlertHtmlString(@modelError.ErrorMessage, BootstrapAlertType.Danger)
                    }
                }
                @Html.ValidationSummary(true)

                <div class="row">
                    <div class="col-md-8">
                        <div class="form-group hidden">
                            @Html.LabelFor(model => model.ItemStoreId, new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.TextBoxFor(model => model.ItemStoreId, new { @class = "form-control  " })
                                @Html.ValidationMessageFor(model => model.ItemStoreId)
                            </div>
                        </div>
                        <div class="form-group form-group-sm required">
                            @Html.LabelFor(model => model.StoreName, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(x => x.StoreName, new { @class = "form-control", @maxLength = "30", @required = "required" })
                                @Html.ValidationMessageFor(model => model.StoreName)
                            </div>
                        </div>

                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.StockCode, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextBoxFor(x => x.StockCode, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StockCode)
                            </div>
                        </div>

                        <div class="form-group form-group-sm">
                            @Html.LabelFor(model => model.StoreDescription, new { @class = "control-label col-md-3" })
                            <div class="col-md-6">
                                @Html.TextAreaFor(x => x.StoreDescription, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StoreDescription)
                            </div>
                        </div>


                        <div class="form-group form-group-sm">
                            <div class="col-md-offset-5 col-md-10">
                                <input type="submit" value="Save" class="fa fa-save btn btn-success" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts {

}
