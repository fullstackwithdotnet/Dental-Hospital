 @model DIMS.ViewModels.CONSViewModel

@{
    ViewBag.Title = "Edit";
}
@functions
{
    public List<string> UserRights()
    {
        var user = User as DIMS.Infrastructure.CustomPrincipal;
        return user.UserRights(DIMS.Enums.Department.CONS);
    }

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)

        @Html.Partial("../Prescriptions/_CreateMedicalAlert", Model.medicalalertviewmodel)

        <div class="box box-info ">
            <div class="box-header with-border" style="background-color:aliceblue;">
                <h3 class="box-title"> Conservative Casesheet Update</h3>
                <div class="box-tools pull-right text-black ">
                    Case Record #
                    <strong>@Html.DisplayFor(model => model.CONSNo)</strong>
                </div>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-12">
                        @Html.Partial("../PatientInformation/_PatientInformationDetails", Model.patientInformationViewModel,
                            new ViewDataDictionary()
                            {
                                TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "studentAllotmentViewModel" }
                            })
                        @Html.HiddenFor(x => x.ConservativeId)
                        @Html.HiddenFor(x => x.ConservativeDate)
                        @Html.HiddenFor(x => x.PatientId)
                        @Html.HiddenFor(model => model.approvalViewModal.ApprovalTypeId)
                        @Html.HiddenFor(model => model.approvalViewModal.CaserecordId)
                        @Html.HiddenFor(model => model.approvalViewModal.DeptId)
                        @Html.HiddenFor(model => model.approvalViewModal.DoctorId)
                        @Html.HiddenFor(model => model.approvalViewModal.PatientId)
                        @Html.HiddenFor(model => model.approvalViewModal.ReferredTreatmentId)

                        @Html.HiddenFor(x => x.Approval1)
                        @Html.HiddenFor(x => x.Approval2)
                        @Html.HiddenFor(x => x.Approval3)

                        @Html.HiddenFor(x => x.SendForApproval1)
                        @Html.HiddenFor(x => x.SendForApproval2)
                        @Html.HiddenFor(x => x.SendForApproval3)

                        @Html.HiddenFor(x => x.ReadOnlyApproval1)
                        @Html.HiddenFor(x => x.ReadOnlyApproval2)
                        @Html.HiddenFor(x => x.ReadOnlyApproval3)
                        @Html.HiddenFor(x => x.EditCaseSheetAccess)                      
                        
                    </div>
                </div>
            </div>
        </div>
        @{List<string> edit = UserRights();}
        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Edit.ToString()))
        {

            <div class="row">
                <div class="form-group">
                    <center>
                        @*<button type="submit" class="btn btn-success btn-sm" id="UpdateButton">
                            Update
                            <i class="fa fa-check"></i>
                        </button>
                        <a class="btn btn-info btn-sm" target="_blank" href="@Url.Action("Create", "FileUpload", new { id = Model.studentAllotmentViewModel.AllotId })">File Uploads <i class="fa fa-upload"></i> </a>*@
                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                        {
                            <button type="submit" class="btn btn-success btn-sm" id="UpdateButton">
                                Update
                                <i class="fa fa-check"></i>
                            </button>
                                <a class="btn btn-info btn-sm" target="_blank" href="@Url.Action("Create", "FileUpload", new { id = Model.studentAllotmentViewModel.AllotId })">File Uploads <i class="fa fa-upload"></i> </a>

                        }
                        else
                        {
                            if ((Model.Approval1 == false) || (Model.Approval2 == false) || (Model.Approval3 == false))
                            {
                                <button type="submit" class="btn btn-success btn-sm" id="UpdateButton">
                                    Update
                                    <i class="fa fa-check"></i>
                                </button>
                            }

                            if ((Model.Approval1 == false) || (Model.Approval2 == false) || (Model.Approval3 == false))
                            {
                                <a class="btn btn-info btn-sm" target="_blank" href="@Url.Action("Create", "FileUpload", new { id = Model.studentAllotmentViewModel.AllotId })">File Uploads <i class="fa fa-upload"></i> </a>
                            }
                        }

                        <a class="btn btn-warning btn-sm" target="_blank" href="@Url.Action("Report", "CONS", new { Id = Model.ConservativeId })">Print <i class="fa fa-print"></i> </a>
                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.CaserecordApproval.ToString()))
                        {
                                                <a id="btnApproval" class="btn btn-primary btn-sm hidden"> Approval <i class="fa fa-check-circle"></i></a>
                        }
                        @if ((Model.Approval1 == true) && (Model.Approval2 == true) && (Model.Approval3 == false))
                        {
                            if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Edit.ToString()))
                            {
                                <button type="submit" formaction="UpdateSendForApproval" class="btn bg-red-gradient btn-sm" id="UpdateButtonApproval3">
                                    Update & Send for final Approval
                                    <i class="fa fa-check"></i>
                                </button>

                            }
                        }
                    </center>
                    @if (TempData["Message"] != null)
                    {
                        <center>
                            <span class="messagebox">
                                @TempData["Message"].ToString()
                            </span>
                        </center>
                    }
                </div>
            </div>
        }

            <div class="box box-default box-solid">  
                <div class="box-header with-border" style="background-color:aliceblue;">
                    @*<h5 class="box-title sm"></h5>*@
                    @if (Model.ApprovalStage != null)
                    {
                        if (Model.ApprovalStage == "Waiting for 1st Approval" || Model.ApprovalStage == "Waiting for 2nd Approval" || Model.ApprovalStage == "Waiting for 3rd Approval" || Model.ApprovalStage == "Not Initiated")
                        {
                            <div class="box-tools pull-right">
                                Approval Stage :
                                <strong style="color:darkorange">@Html.DisplayFor(model => model.ApprovalStage)</strong>
                            </div>
                        }
                        else
                        {
                            <div class="box-tools pull-right">
                                Approval Stage :
                                <strong style="color:green">@Html.DisplayFor(model => model.ApprovalStage)</strong>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="box-tools pull-right text-yellow ">
                            Approval Stage :
                            <strong>Not Initiated</strong>
                        </div>
                    }


                </div>                  
                <div class="box-body">                        
                        <div class="col-md-12">                             
                                <div id="tabContainer">
                                    <ul class="pagination pagination-lg" role="tablist" style="margin:0px">
                                        <li class="active">
                                            <a href="#History" role="tab" class="paginationtab no-border" aria-controls="History" data-toggle="tab">History</a>
                                        </li>
                                        <li class="">
                                            <a href="#Clinicalfinding" role="tab" class="paginationtab no-border" aria-controls="Clinicalfinding" data-toggle="tab">Clinical Finding</a>
                                        </li>
                                        <li class="">
                                            <a href="#Examination" role="tab" class="paginationtab no-border" aria-controls="Examination" data-toggle="tab">Examination</a>
                                        </li>
                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Investigation.ToString()))
                                        {
                                        <li class="">
                                            <a href="#Investigation" role="tab" class="paginationtab no-border" aria-controls="Investigation" data-toggle="tab">Investigation</a>
                                        </li>
                                        }
                                        @if (Model.Approval1 == true)
                                        {
                                        <li class="">
                                            <a href="#InvestigationReport" role="tab" class="paginationtab no-border" aria-controls="InvestigationReport" data-toggle="tab">Investigation Report</a>
                                        </li>
                                        }
                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.TreatmentServices.ToString()) && Model.Approval1 == true)
                                        {
                                        <li class="">
                                            <a href="#Treatment" role="tab" class="paginationtab no-border" aria-controls="Treatment" data-toggle="tab">Treatment</a>
                                        </li>
                                        }
                                        <li class="">
                                            <a href="#ProcedureNote" role="tab" class="paginationtab no-border" aria-controls="ProcedureNote" data-toggle="tab">Procedure Notes</a>
                                        </li>
                                        <li class="">
                                            <a href="#Appointment" role="tab" class="paginationtab no-border" aria-controls="ProcedureNote" data-toggle="tab">Appointments</a>
                                        </li>
                                        <li class="">
                                            <a href="#Referral" role="tab" class="paginationtab no-border" aria-controls="Referral" data-toggle="tab">Referral</a>
                                        </li>

                                    </ul>
                                    <div class="tab-content">
                                        <div class="tab-pane fade active in" id="History">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                                                        {
                                                            <div class="box-header with-border">
                                                                <div class="form-group">
                                                                @Html.Partial("../CONS/_CONSHistory", Model)
                                                                @Html.HiddenFor(model => model.PatientId)
                                                                @Html.HiddenFor(model => model.TreatmentReferredId)
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="box-header with-border js_ReadOnlyApproval1">
                                                                <div class="form-group">
                                                                @Html.Partial("../CONS/_CONSHistory", Model)
                                                                @Html.HiddenFor(model => model.PatientId)
                                                                @Html.HiddenFor(model => model.TreatmentReferredId)
                                                                </div>
                                                            </div>
                                                        }                                                         
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="Clinicalfinding">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                                                        {
                                                            <div class="box-header with-border jsEditFreezed">
                                                                <div class="form-group">
                                                                    @Html.Partial("../CONS/_CONSClinicalFinding", Model)
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="box-header with-border js_ReadOnlyApproval1">
                                                                <div class="form-group">
                                                                    @Html.Partial("../CONS/_CONSClinicalFinding", Model)
                                                                </div>
                                                            </div>
                                                        }                                                         
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        @*<div class="tab-pane fade" id="Examination">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                         

                                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                                                        {
                                                            <div class="box-header with-border">
                                                                <div class="form-group">
                                                                    @Html.Partial("../CONS/_CONSExamination", Model)
                                                                </div>
                                                            </div>
                                                        }
                                                        else
                                                        {
                                                            <div class="box-header with-border js_ReadOnlyApproval1">
                                                                <div class="form-group">
                                                                    @Html.Partial("../CONS/_CONSExamination", Model)
                                                                </div>
                                                            </div>
                                                        }                                    
                                                    </div>
                                                </div>
                                            </div>
                                        </div>*@


                                        <div class="tab-pane fade" id="Examination">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                                                        {
                                                            <div class="box-header with-border">

                                                                <div class="form-group">
                                                                    @*@{Html.RenderPartial("../OMR/_OMRLocalExamination", Model);}*@
                                                                    @Html.Partial("../CONS/_CONSExamination", Model)
                                                                    @if ((Model.Approval1 == false) && (Model.Approval2 == false) && (Model.Approval3 == false))
                                                                    {

                                                                        if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Edit.ToString()) && Model.SendForApproval1 == false)
                                                                        {
                                                                            <div class="row">
                                                                                <div class="form-group">
                                                                                    <div class="col-xs-4">
                                                                                    </div>
                                                                                    <div class="col-xs-4">
                                                                                        <center>
                                                                                            <button type="submit" formaction="UpdateSendForApproval" class="btn btn-success btn-sm" id="UpdateButtonApproval1">
                                                                                                Update & Send for Approval
                                                                                                <i class="fa fa-check"></i>
                                                                                            </button>
                                                                                        </center>
                                                                                    </div>
                                                                                    <div class="col-xs-4">
                                                                                    </div>
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="row">
                                                                            <div class="form-group">
                                                                                <div class="col-xs-4">
                                                                                </div>
                                                                                <div class="col-xs-4">
                                                                                    <center>
                                                                                        <center>
                                                                                            @if (Model.Approval1 == true)
                                                                                            {
                                                                                                <span class="text-green">
                                                                                                    <strong>
                                                                                                        @Html.DisplayFor(x => x.DisplayApproval1)
                                                                                                    </strong>
                                                                                                </span>
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                <span class="text-red">
                                                                                                    <strong>
                                                                                                        @Html.DisplayFor(x => x.DisplayApproval1)
                                                                                                    </strong>
                                                                                                </span>
                                                                                            }
                                                                                        </center>
                                                                                    </center>
                                                                                </div>
                                                                                <div class="col-xs-4">
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    }
                                                                </div>
                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="box-header with-border js_ReadOnlyApproval1">

                                                                                <div class="form-group">
                                                                                    @Html.Partial("../CONS/_CONSExamination", Model)
                                                                                    @if ((Model.Approval1 == false) && (Model.Approval2 == false) && (Model.Approval3 == false))
                                                                                    {

                                                                                        if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Edit.ToString()) && Model.SendForApproval1 == false)
                                                                                        {
                                                                                            <div class="row">
                                                                                                <div class="form-group">
                                                                                                    <div class="col-xs-4">
                                                                                                    </div>
                                                                                                    <div class="col-xs-4">
                                                                                                        <center>
                                                                                                            <button type="submit" formaction="UpdateSendForApproval" class="btn btn-success btn-sm" id="UpdateButtonApproval1">
                                                                                                                Update & Send for Approval
                                                                                                                <i class="fa fa-check"></i>
                                                                                                            </button>
                                                                                                        </center>
                                                                                                    </div>
                                                                                                    <div class="col-xs-4">
                                                                                                    </div>
                                                                                                </div>
                                                                                            </div>
                                                                                        }
                                                                                    }
                                                                                    else
                                                                                    {
                                                                                        <div class="row">
                                                                                            <div class="form-group">
                                                                                                <div class="col-xs-4">
                                                                                                </div>
                                                                                                <div class="col-xs-4">
                                                                                                    <center>
                                                                                                        <center>
                                                                                                            @if (Model.Approval1 == true)
                                                                                                            {
                                                                                                                <span class="text-green">
                                                                                                                    <strong>
                                                                                                                        @Html.DisplayFor(x => x.DisplayApproval1)
                                                                                                                    </strong>
                                                                                                                </span>
                                                                                                            }
                                                                                                            else
                                                                                                            {
                                                                                                                <span class="text-red">
                                                                                                                    <strong>
                                                                                                                        @Html.DisplayFor(x => x.DisplayApproval1)
                                                                                                                    </strong>
                                                                                                                </span>
                                                                                                            }
                                                                                                        </center>
                                                                                                    </center>
                                                                                                </div>
                                                                                                <div class="col-xs-4">
                                                                                                </div>
                                                                                            </div>
                                                                                        </div>
                                                                                    }
                                                                                </div>
                                                                            </div>
                                                                                        }



                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="tab-pane fade" id="InvestigationReport">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        <div class="box-header with-border">
                                                            <div class="form-group">
                                                                @Html.Partial("../Radiography/_RadiographicDetails", Model.radioRegistrationviewmodel)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        <div class="box-header with-border">
                                                            <div class="form-group">
                                                                @Html.Partial("../Radiography/_LaboratoryDetails", Model.laboratoryRegistrationviewmodel)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="Investigation">
                                            <div class="row">
                                                <div class="box box-primary">
                                                    <div class="box-header with-border js_ReadOnlyApproval2">
                                                        <div class="col-md-12">
                                                            <div class="form-group">
                                                                @Html.Partial("../Investigation/_LabRadCreate", Model.billingLabRadQueueViewModal)
                                                            </div>

                                                            <div class="form-group">
                                                                @Html.Partial("../Investigation/_LabRadInvestigationList", Model.BillingLabRadQueueDetails,
                                                            new ViewDataDictionary()
                                                            {
                                                                TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "BillingLabRadQueueDetails" }
                                                            })
                                                            </div>
                                                        </div>

                                                        <div class="col-md-12 hidden">
                                                            @Html.ActionLink("Request for OralPathology", "Index", "ORPATHRequisition", new { id = Model.studentAllotmentViewModel.AllotId }, new { target = "_blank" })
                                                        </div>
                                                        @if (Model.paidLabRadInvestigationList.Count() > 0)
                                                        {
                                                            <br />
                                                            <div class="col-md-12">
                                                                <div class="form-group">
                                                                    @Html.Partial("../Investigation/_PaidInvestigationList", Model.paidLabRadInvestigationList)
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="Treatment">
                                            <div class="row">
                                                <div class="box box-primary">
                                                    <div class="box-header with-border">
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="box box-default collapsed-box">
                                                                    <div class="box-header with-border">
                                                                        <h3 class="box-title">TREATMENT DETAILS</h3>
                                                                        <div class="box-tools pull-right">
                                                                            <button type="button" class="btn btn-primary btn-xs" data-widget="collapse">
                                                                                <i class="fa fa-plus"></i>
                                                                            </button>
                                                                        </div>
                                                                    </div>
                                                                    <div class="box-body">
                                                                        <div class="form-group">
                                                                            @Html.Partial("../Investigation/_Create", Model.billingQueueViewModal)
                                                                        </div>
                                                                        <div class="form-group">
                                                                            @Html.Partial("../Investigation/_InvestigationList", Model.BillingQueueDetails,
                                                            new ViewDataDictionary()
                                                            {
                                                                TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "BillingQueueDetails" }
                                                            })
                                                                        </div>
                                                                        @if (Model.paidInvestigationList.Count() > 0)
                                                                        {
                                                                            <br />
                                                                            <div class="col-md-12">
                                                                                <div class="form-group">
                                                                                    @Html.Partial("../Investigation/_PaidInvestigationList", Model.paidInvestigationList)
                                                                                </div>
                                                                            </div>
                                                                        }
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="box box-default collapsed-box">
                                                                    <div class="box-header with-border">
                                                                        <h3 class="box-title">TREATMENT PLAN</h3>
                                                                        <div class="box-tools pull-right">
                                                                            <button type="button" class="btn btn-primary btn-xs" data-widget="collapse">
                                                                                <i class="fa fa-plus"></i>
                                                                            </button>
                                                                        </div>
                                                                    </div>
                                                                    <div class="box-body">
                                                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                                                                        {
                                                                            <div class="form-group">
                                                                                @Html.Partial("../CONS/_CONSTreatmentPlan", Model)
                                                                            </div>
                                                                        }
                                                                        else
                                                                        {
                                                                            <div class="form-group js_ReadOnlyApproval2">
                                                                                @Html.Partial("../CONS/_CONSTreatmentPlan", Model)
                                                                            </div>
                                                                        }                                                                         
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="box box-default collapsed-box">
                                                                    <div class="box-header with-border">
                                                                        <h3 class="box-title">PRESCRIPTIONS</h3>
                                                                        <div class="box-tools pull-right">
                                                                            <button type="button" class="btn btn-primary btn-xs" data-widget="collapse">
                                                                                <i class="fa fa-plus"></i>
                                                                            </button>
                                                                        </div>
                                                                    </div>
                                                                    <div class="box-body">
                                                                        <div class="form-group">
                                                                            @Html.Partial("../Prescriptions/_Create", Model.PrescriptionsList)
                                                                        </div>
                                                                        <div class="form-group">
                                                                            @Html.Partial("../Prescriptions/_PrescriptionList", Model.PrescriptionsDetails,
                                                                            new ViewDataDictionary()
                                                                            {
                                                                                TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "PrescriptionsDetails" }
                                                                            })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="col-md-12">
                                                                <div class="box box-default collapsed-box">
                                                                    <div class="box-header with-border">
                                                                        <h3 class="box-title">PREVIOUS PRESCRIPTIONS</h3>
                                                                        <div class="box-tools pull-right">
                                                                            <button type="button" class="btn btn-primary btn-xs" data-widget="collapse">
                                                                                <i class="fa fa-plus"></i>
                                                                            </button>
                                                                        </div>
                                                                    </div>
                                                                    <div class="box-body">
                                                                        <div class="form-group">
                                                                            @Html.Partial("../Prescriptions/_PreviousPrescriptions", Model.PreviousPrescriptionList)
                                                                        </div>


                                                                    </div>


                                                                </div>
                                                            </div>
                                                        </div>

                                                        @if ((Model.Approval1 == true) && (Model.Approval2 == false))
                                                        {
                                                            if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Edit.ToString()) && Model.SendForApproval2 == false)
                                                            {
                                                                <div class="row">
                                                                    <div class="form-group">
                                                                        <div class="col-xs-4">
                                                                        </div>
                                                                        <div class="col-xs-4">
                                                                            <center>
                                                                                <button type="submit" formaction="UpdateSendForApproval" class="btn btn-success btn-sm" id="UpdateButtonApproval2">
                                                                                    Update & Send for Approval
                                                                                    <i class="fa fa-check"></i>
                                                                                </button>
                                                                            </center>
                                                                        </div>
                                                                        <div class="col-xs-4">
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <div class="row">
                                                                <div class="form-group">
                                                                    <div class="col-xs-4">
                                                                    </div>
                                                                    <div class="col-xs-4">
                                                                        <center>
                                                                            @if (Model.Approval2 == true)
                                                                            {
                                                                                <span class="text-green">
                                                                                    <strong>
                                                                                        @Html.DisplayFor(x => x.DisplayApproval2)
                                                                                    </strong>
                                                                                </span>
                                                                            }
                                                                            else
                                                                            {
                                                                                <span class="text-red">
                                                                                    <strong>
                                                                                        @Html.DisplayFor(x => x.DisplayApproval2)
                                                                                    </strong>
                                                                                </span>
                                                                            }
                                                                        </center>
                                                                    </div>
                                                                    <div class="col-xs-4">
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        }
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                        <div class="tab-pane fade" id="ProcedureNote">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        <div class="box-header with-border">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="box box-default collapsed-box">
                                                                        <div class="box-header with-border">
                                                                            <h3 class="box-title">PROCEDURE NOTE</h3>
                                                                            <div class="box-tools pull-right">
                                                                                <button type="button" class="btn btn-primary btn-xs" data-widget="collapse">
                                                                                    <i class="fa fa-plus"></i>
                                                                                </button>
                                                                            </div>
                                                                        </div>
                                                                        <div class="box-body">
                                                                            <div class="form-group js_ReadOnlyApproval3">
                                                                                @Html.Partial("../StudentAllotment/_ProcedureNote", Model.studentAllotmentViewModel,
                                                        new ViewDataDictionary()
                                                        {
                                                            TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "studentAllotmentViewModel" }
                                                        })

                                                                                @if (Model.studentProcedureNotesViewModel.Count() > 0)
                                                                                {
                                                                                    <div class="box-body">
                                                                                        @Html.Partial("../StudentAllotment/_ProdedureNoteDetails", Model.studentProcedureNotesViewModel)
                                                                                    </div>
                                                                                }

                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                        </div>


                                        <div class="tab-pane fade" id="Appointment">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        <div class="box-header with-border">
                                                            <div class="row">
                                                                <div class="col-md-12">
                                                                    <div class="box box-default collapsed-box">
                                                                        <div class="box-header with-border">
                                                                            <h3 class="box-title">APPOINTMENT</h3>
                                                                            <div class="box-tools pull-right">
                                                                                <button type="button" class="btn btn-primary btn-xs" data-widget="collapse">
                                                                                    <i class="fa fa-plus"></i>
                                                                                </button>
                                                                            </div>
                                                                        </div>


                                                                        <div class="box-body">

                                                                            @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.EditFreezeCase.ToString()))
                                                                            {
                                                                                <div class="form-group">
                                                                            @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Appointment.ToString()))
                                                                            {
                                                                                @Html.Partial("../Followup/_PatientFollowUp", Model.followupViewModal,
                                                                            new ViewDataDictionary()
                                                                            {
                                                                                TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "followupViewModal" }
                                                                            })
                                                                                    }
                                                                                    @if (Model.followupList.Count() > 0)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @Html.Partial("../Followup/_PatientFollowUpList", Model.followupList)
                                                                                        </div>
                                                                                    }
                                                                                </div>
                                                                            }
                                                                            else
                                                                            {
                                                                                <div class="form-group js_ReadOnlyApproval3">
                                                                                    @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Appointment.ToString()))
                                                                                    {
                                                                                        @Html.Partial("../Followup/_PatientFollowUp", Model.followupViewModal,
                                                                            new ViewDataDictionary()
                                                                            {
                                                                                TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "followupViewModal" }
                                                                            })
                                                                                    }
                                                                                    @if (Model.followupList.Count() > 0)
                                                                                    {
                                                                                        <div class="form-group">
                                                                                            @Html.Partial("../Followup/_PatientFollowUpList", Model.followupList)
                                                                                        </div>
                                                                                    }
                                                                                </div>
                                                                            }


                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>


                                        <div class="tab-pane fade" id="Referral">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="box box-primary">
                                                        <div class="box-header with-border">
                                                            <h3 class="box-title">PREVIOUS DEPARTMENT REFERRAL</h3>
                                                        </div>

                                                        <div class="box-body">
                                                            <div class="form-group">
                                                                @Html.Partial("../ReferralStatus/ViewReferral", Model.ViewdepartmentReferredStatus)
                                                            </div>
                                                        </div>

                                                        @if (edit.Contains(DIMS.Infrastructure.PermissionsEnum.Referral.ToString()))
                                                        {
                                                            <div class="box-header with-border">
                                                                <h3 class="box-title">REFERRAL TO OTHER DEPARTMENTS</h3>
                                                            </div>
                                                            <div class="box-body">
                                                                <div class="form-group js_ReadOnlyApproval3">
                                                                    @Html.Partial("../ReferralStatus/Create", Model.CreatedepartmentReferredStatus,
                                                                new ViewDataDictionary()
                                                                {
                                                                    TemplateInfo = new TemplateInfo() { HtmlFieldPrefix = "CreatedepartmentReferredStatus" }
                                                                })
                                                                </div>
                                                            </div>
                                                        }

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>                                
                        </div>
                        
                </div>
            </div>
          
    </div>
  }

@Html.Partial("../Approval/_CreateApproval")
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

<div>
    @Html.ActionLink("<< Back to previous page", "Search", null, new { @class = "btn btn-primary btn-xs" })
</div>

 @section scripts
{
     <script>
       

    $("#btnRestorativeProAdd").click(function (e) {
        
        var itemIndex = $("#tbRestorativeProDetails input.iHidden").length;
        e.preventDefault();
        if ($("#RestorativeProId").val() != 0) {
            var RestorativeProId = $("#RestorativeProId").val();
        }
        else {
            var RestorativeProId = 0;
        }
        var ToothNumbers = $("#ToothNumbers option:selected").text();
        if (ToothNumbers != '') {
            var CavityType = $("#CavityType").val();
            var PhotographsCastsXray = $("#PhotographsCastsXray").val();
            var RestorativeMaterial = $("#RestorativeMaterial").val();
            var CavityPreparation = $("#CavityPreparation").val();
            var ImpressionPattern = $("#ImpressionPattern").val();
            var LinearBasesVarnish = $("#LinearBasesVarnish").val();
            var MatrixBandWedges = $("#MatrixBandWedges").val();
            var Restoration = $("#Restoration").val();
            var FinishingAndRestoration = $("#FinishingAndRestoration").val();
            var DirectIndirectReview1 = $("#DirectIndirectReview1").val();
            var DirectIndirectReview2 = $("#DirectIndirectReview2").val();
            var DirectIndirectReview3 = $("#DirectIndirectReview3").val();
            var DeepCariesReview1 = $("#DeepCariesReview1").val();
            var DeepCariesReview2 = $("#DeepCariesReview2").val();
            var DeepCariesReview3 = $("#DeepCariesReview3").val();

            var idArrayQ = [];
            $('.iHidden').each(function () {
                idArrayQ.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbers, idArrayQ) != '-1') {
                alert("Already Added");
            }
            else {

                var markupRestorativeProId = " <td><input name='RpList[" + itemIndex + "].RestorativeProId' id='RpList[" + itemIndex + "]_RestorativeProId' type='hidden' value=" + RestorativeProId + ">"
                var markupToothNumber = "<input type='hidden' id='RpList[" + itemIndex + "]_ToothNumbers' class='form-control iHidden'  name='RpList[" + itemIndex + "].ToothNumbers' value='" + ToothNumbers + "'>";
                var markupCavityType = "<td>" + CavityType + "<input type='hidden' id='RpList[" + itemIndex + "]_CavityType' class='form-control js_CavityType'  name='RpList[" + itemIndex + "].CavityType' value='" + CavityType + "'></td>";
                var markupPhotographsCastsXray = "<td>" + PhotographsCastsXray + "<input type='hidden' id='RpList[" + itemIndex + "]_PhotographsCastsXray' class='form-control js_PhotographsCastsXray'  name='RpList[" + itemIndex + "].PhotographsCastsXray' value='" + PhotographsCastsXray + "'></td>";
                var markupRestorativeMaterial = "<td>" + RestorativeMaterial + "<input type='hidden' id='RpList[" + itemIndex + "]_RestorativeMaterial' class='form-control js_RestorativeMaterial'  name='RpList[" + itemIndex + "].RestorativeMaterial' value='" + RestorativeMaterial + "'></td>";
                var markupCavityPreparation = "<td>" + CavityPreparation + "<input type='hidden' id='RpList[" + itemIndex + "]_CavityPreparation' class='form-control js_CavityPreparation'  name='RpList[" + itemIndex + "].CavityPreparation' value='" + CavityPreparation + "'></td>";
                var markupImpressionPattern = "<td>" + ImpressionPattern + "<input type='hidden' id='RpList[" + itemIndex + "]_ImpressionPattern' class='form-control js_ImpressionPattern'  name='RpList[" + itemIndex + "].ImpressionPattern' value='" + ImpressionPattern + "'></td>";
                var markupLinearBasesVarnish = "<td>" + LinearBasesVarnish + "<input type='hidden' id='RpList[" + itemIndex + "]_LinearBasesVarnish' class='form-control js_LinearBasesVarnish'  name='RpList[" + itemIndex + "].LinearBasesVarnish' value='" + LinearBasesVarnish + "'></td>";

                var markupMatrixBandWedges = "<td>" + MatrixBandWedges + "<input type='hidden' id='RpList[" + itemIndex + "]_MatrixBandWedges' class='form-control js_MatrixBandWedges'  name='RpList[" + itemIndex + "].MatrixBandWedges' value='" + MatrixBandWedges + "'></td>";
                var markupRestoration = "<td>" + Restoration + "<input type='hidden' id='RpList[" + itemIndex + "]_Restoration' class='form-control js_Restoration'  name='RpList[" + itemIndex + "].Restoration' value='" + Restoration + "'></td>";
                var markupFinishingAndRestoration = "<td>" + FinishingAndRestoration + "<input type='hidden' id='RpList[" + itemIndex + "]_FinishingAndRestoration' class='form-control js_FinishingAndRestoration'  name='RpList[" + itemIndex + "].FinishingAndRestoration' value='" + FinishingAndRestoration + "'></td>";
                var markupDirectIndirectReview1 = "<td>" + DirectIndirectReview1 + "<input type='hidden' id='RpList[" + itemIndex + "]_DirectIndirectReview1' class='form-control js_DirectIndirectReview1'  name='RpList[" + itemIndex + "].DirectIndirectReview1' value='" + DirectIndirectReview1 + "'></td>";
                var markupDirectIndirectReview2 = "<td>" + DirectIndirectReview2 + "<input type='hidden' id='RpList[" + itemIndex + "]_DirectIndirectReview2' class='form-control js_DirectIndirectReview2'  name='RpList[" + itemIndex + "].DirectIndirectReview2' value='" + DirectIndirectReview2 + "'></td>";
                var markupDirectIndirectReview3 = "<td>" + DirectIndirectReview3 + "<input type='hidden' id='RpList[" + itemIndex + "]_DirectIndirectReview3' class='form-control js_DirectIndirectReview3'  name='RpList[" + itemIndex + "].DirectIndirectReview3' value='" + DirectIndirectReview3 + "'></td>";
                var markupDeepCariesReview1 = "<td>" + DeepCariesReview1 + "<input type='hidden' id='RpList[" + itemIndex + "]_DeepCariesReview1' class='form-control js_DeepCariesReview1'  name='RpList[" + itemIndex + "].DeepCariesReview1' value='" + DeepCariesReview1 + "'></td>";
                var markupDeepCariesReview2 = "<td>" + DeepCariesReview2 + "<input type='hidden' id='RpList[" + itemIndex + "]_DeepCariesReview2' class='form-control js_DeepCariesReview2'  name='RpList[" + itemIndex + "].DeepCariesReview2' value='" + DeepCariesReview2 + "'></td>";
                var markupDeepCariesReview3 = "<td>" + DeepCariesReview3 + "<input type='hidden' id='RpList[" + itemIndex + "]_DeepCariesReview3' class='form-control js_DeepCariesReview3'  name='RpList[" + itemIndex + "].DeepCariesReview3' value='" + DeepCariesReview3 + "'></td>";
                var deleteButton = "<td> <button type='button' class='RestorativeProToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='RestorativeProToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                var markupFinal = "<tr>" + Edit + deleteButton + markupRestorativeProId + ToothNumbers + markupToothNumber + markupCavityType + markupPhotographsCastsXray + markupRestorativeMaterial + markupCavityPreparation + markupImpressionPattern + markupLinearBasesVarnish + markupMatrixBandWedges + markupRestoration + markupFinishingAndRestoration + markupDirectIndirectReview1 + markupDirectIndirectReview2 + markupDirectIndirectReview3 + markupDeepCariesReview1 + markupDeepCariesReview2 + markupDeepCariesReview3 + "</tr>";

                $("#tbRestorativeProDetails tbody").append(markupFinal);
                $("#ToothNumbers").val("");
                $("#CavityType").val("");
                $("#PhotographsCastsXray").val("");
                $("#RestorativeMaterial").val("");
                $("#CavityPreparation").val("");
                $("#ImpressionPattern").val("");
                $("#LinearBasesVarnish").val("");
                $("#MatrixBandWedges").val("");
                $("#Restoration").val("");
                $("#FinishingAndRestoration").val("");
                $("#DirectIndirectReview1").val("");
                $("#DirectIndirectReview2").val("");
                $("#DirectIndirectReview3").val("");
                $("#DeepCariesReview1").val("");
                $("#DeepCariesReview2").val("");
                $("#DeepCariesReview3").val("");
            }
        }
        else {
            alert("Please select a tooth!");
        }
    }

   );


    $('#tbRestorativeProDetails').on('click', ".RestorativeProToothEdit", function () {
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            
            var Id = $(this).data('id');
            var row = $(this).closest('tr');
            var $tds = row.find("td");
            var varRestorativeProId = Id;
            var varToothNumber = $tds.closest('tr').find('.iHidden').val();
            var varCavityType = $tds.closest('tr').find('.js_CavityType').val();
            var varPhotographsCastsXray = $tds.closest('tr').find('.js_PhotographsCastsXray').val();
            var varRestorativeMaterial = $tds.closest('tr').find('.js_RestorativeMaterial').val();
            var varCavityPreparation = $tds.closest('tr').find('.js_CavityPreparation').val();
            var varImpressionPattern = $tds.closest('tr').find('.js_ImpressionPattern').val();
            var varLinearBasesVarnish = $tds.closest('tr').find('.js_LinearBasesVarnish').val();
            var varMatrixBandWedges = $tds.closest('tr').find('.js_MatrixBandWedges').val();
            var varRestoration = $tds.closest('tr').find('.js_Restoration').val();
            var varFinishingAndRestoration = $tds.closest('tr').find('.js_FinishingAndRestoration').val();
            var varDirectIndirectReview1 = $tds.closest('tr').find('.js_DirectIndirectReview1').val();
            var varDirectIndirectReview2 = $tds.closest('tr').find('.js_DirectIndirectReview2').val();
            var varDirectIndirectReview3 = $tds.closest('tr').find('.js_DirectIndirectReview3').val();
            var varDeepCariesReview1 = $tds.closest('tr').find('.js_DeepCariesReview1').val();
            var varDeepCariesReview2 = $tds.closest('tr').find('.js_DeepCariesReview2').val();
            var varDeepCariesReview3 = $tds.closest('tr').find('.js_DeepCariesReview3').val();

            $("#RestorativeProId").val(varRestorativeProId);
            $("#ToothNumbers").val(varToothNumber);
            $("#CavityType").val(varCavityType);
            $("#PhotographsCastsXray").val(varPhotographsCastsXray);
            $("#RestorativeMaterial").val(varRestorativeMaterial);
            $("#CavityPreparation").val(varCavityPreparation);
            $("#ImpressionPattern").val(varImpressionPattern);
            $("#LinearBasesVarnish").val(varLinearBasesVarnish);
            $("#MatrixBandWedges").val(varMatrixBandWedges);
            $("#Restoration").val(varRestoration);
            $("#FinishingAndRestoration").val(varFinishingAndRestoration);
            $("#DirectIndirectReview1").val(varDirectIndirectReview1);
            $("#DirectIndirectReview2").val(varDirectIndirectReview2);
            $("#DirectIndirectReview3").val(varDirectIndirectReview3);
            $("#DeepCariesReview1").val(varDeepCariesReview1);
            $("#DeepCariesReview2").val(varDeepCariesReview2);
            $("#DeepCariesReview3").val(varDeepCariesReview3);
            row.remove();

            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("RestorativeProDetailsById","CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbRestorativeProDetails tbody").empty();
                    $('#tbRestorativeProDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbRestorativeProDetails input.iHidden").length;
                        var RestorativeProId = item.RestorativeProId;
                        var ToothNumbers = item.ToothNumber;
                        var CavityType = item.CavityType;
                        var PhotographsCastsXray = item.PhotographsCastsXray;
                        var RestorativeMaterial = item.RestorativeMaterial;
                        var CavityPreparation = item.CavityPreparation;
                        var ImpressionPattern = item.ImpressionPattern;
                        var LinearBasesVarnish = item.LinearBasesVarnish;
                        var MatrixBandWedges = item.MatrixBandWedges;
                        var Restoration = item.Restoration;
                        var FinishingAndRestoration = item.FinishingAndRestoration;
                        var DirectIndirectReview1 = item.DirectIndirectReview1;
                        var DirectIndirectReview2 = item.DirectIndirectReview2;
                        var DirectIndirectReview3 = item.DirectIndirectReview3;
                        var DeepCariesReview1 = item.DeepCariesReview1;
                        var DeepCariesReview2 = item.DeepCariesReview2;
                        var DeepCariesReview3 = item.DeepCariesReview3;

                        var markupRestorativeProId = " <td><input name='RpList[" + itemIndex + "].RestorativeProId' id='RpList[" + itemIndex + "]_RestorativeProId' type='hidden' value=" + RestorativeProId + ">"
                        var markupToothNumber = "<input type='hidden' id='RpList[" + itemIndex + "]_ToothNumbers' class='form-control iHidden'  name='RpList[" + itemIndex + "].ToothNumbers' value='" + ToothNumbers + "'>";
                        var markupCavityType = "<td>" + CavityType + "<input type='hidden' id='RpList[" + itemIndex + "]_CavityType' class='form-control js_CavityType'  name='RpList[" + itemIndex + "].CavityType' value='" + CavityType + "'></td>";
                        var markupPhotographsCastsXray = "<td>" + PhotographsCastsXray + "<input type='hidden' id='RpList[" + itemIndex + "]_PhotographsCastsXray' class='form-control js_PhotographsCastsXray'  name='RpList[" + itemIndex + "].PhotographsCastsXray' value='" + PhotographsCastsXray + "'></td>";
                        var markupRestorativeMaterial = "<td>" + RestorativeMaterial + "<input type='hidden' id='RpList[" + itemIndex + "]_RestorativeMaterial' class='form-control js_RestorativeMaterial'  name='RpList[" + itemIndex + "].RestorativeMaterial' value='" + RestorativeMaterial + "'></td>";
                        var markupCavityPreparation = "<td>" + CavityPreparation + "<input type='hidden' id='RpList[" + itemIndex + "]_CavityPreparation' class='form-control js_CavityPreparation'  name='RpList[" + itemIndex + "].CavityPreparation' value='" + CavityPreparation + "'></td>";
                        var markupImpressionPattern = "<td>" + ImpressionPattern + "<input type='hidden' id='RpList[" + itemIndex + "]_ImpressionPattern' class='form-control js_ImpressionPattern'  name='RpList[" + itemIndex + "].ImpressionPattern' value='" + ImpressionPattern + "'></td>";
                        var markupLinearBasesVarnish = "<td>" + LinearBasesVarnish + "<input type='hidden' id='RpList[" + itemIndex + "]_LinearBasesVarnish' class='form-control js_LinearBasesVarnish'  name='RpList[" + itemIndex + "].LinearBasesVarnish' value='" + LinearBasesVarnish + "'></td>";

                        var markupMatrixBandWedges = "<td>" + MatrixBandWedges + "<input type='hidden' id='RpList[" + itemIndex + "]_MatrixBandWedges' class='form-control js_MatrixBandWedges'  name='RpList[" + itemIndex + "].MatrixBandWedges' value='" + MatrixBandWedges + "'></td>";
                        var markupRestoration = "<td>" + Restoration + "<input type='hidden' id='RpList[" + itemIndex + "]_Restoration' class='form-control js_Restoration'  name='RpList[" + itemIndex + "].Restoration' value='" + Restoration + "'></td>";
                        var markupFinishingAndRestoration = "<td>" + FinishingAndRestoration + "<input type='hidden' id='RpList[" + itemIndex + "]_FinishingAndRestoration' class='form-control js_FinishingAndRestoration'  name='RpList[" + itemIndex + "].FinishingAndRestoration' value='" + FinishingAndRestoration + "'></td>";
                        var markupDirectIndirectReview1 = "<td>" + DirectIndirectReview1 + "<input type='hidden' id='RpList[" + itemIndex + "]_DirectIndirectReview1' class='form-control js_DirectIndirectReview1'  name='RpList[" + itemIndex + "].DirectIndirectReview1' value='" + DirectIndirectReview1 + "'></td>";
                        var markupDirectIndirectReview2 = "<td>" + DirectIndirectReview2 + "<input type='hidden' id='RpList[" + itemIndex + "]_DirectIndirectReview2' class='form-control js_DirectIndirectReview2'  name='RpList[" + itemIndex + "].DirectIndirectReview2' value='" + DirectIndirectReview2 + "'></td>";
                        var markupDirectIndirectReview3 = "<td>" + DirectIndirectReview3 + "<input type='hidden' id='RpList[" + itemIndex + "]_DirectIndirectReview3' class='form-control js_DirectIndirectReview3'  name='RpList[" + itemIndex + "].DirectIndirectReview3' value='" + DirectIndirectReview3 + "'></td>";
                        var markupDeepCariesReview1 = "<td>" + DeepCariesReview1 + "<input type='hidden' id='RpList[" + itemIndex + "]_DeepCariesReview1' class='form-control js_DeepCariesReview1'  name='RpList[" + itemIndex + "].DeepCariesReview1' value='" + DeepCariesReview1 + "'></td>";
                        var markupDeepCariesReview2 = "<td>" + DeepCariesReview2 + "<input type='hidden' id='RpList[" + itemIndex + "]_DeepCariesReview2' class='form-control js_DeepCariesReview2'  name='RpList[" + itemIndex + "].DeepCariesReview2' value='" + DeepCariesReview2 + "'></td>";
                        var markupDeepCariesReview3 = "<td>" + DeepCariesReview3 + "<input type='hidden' id='RpList[" + itemIndex + "]_DeepCariesReview3' class='form-control js_DeepCariesReview3'  name='RpList[" + itemIndex + "].DeepCariesReview3' value='" + DeepCariesReview3 + "'></td>";
                        var deleteButton = "<td> <button type='button' class='RestorativeProToothdelete btn btn-danger btn-xs' data-id='" + RestorativeProId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='RestorativeProToothEdit btn btn-primary btn-xs' data-id='" + RestorativeProId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                        var markupFinal = "<tr>" + Edit + deleteButton + markupRestorativeProId + ToothNumbers + markupToothNumber + markupCavityType + markupPhotographsCastsXray + markupRestorativeMaterial + markupCavityPreparation + markupImpressionPattern + markupLinearBasesVarnish + markupMatrixBandWedges + markupRestoration + markupFinishingAndRestoration + markupDirectIndirectReview1 + markupDirectIndirectReview2 + markupDirectIndirectReview3 + markupDeepCariesReview1 + markupDeepCariesReview2 + markupDeepCariesReview3 + "</tr>";
                        $("#tbRestorativeProDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });



        }
    });

    $('#tbRestorativeProDetails').on('click', ".RestorativeProToothdelete", function () {
        var url = '@Url.Action("DeleteRestorativeProToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { RestorativeProId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });



    $("#btnPostAndCoreAdd").click(function (e) {
        
        var itemIndex = $("#tbPostAndCoreDetails input.jHidden").length;
        e.preventDefault();
        if ($("#PostAndCoreId").val() != 0) {
            var PostAndCoreId = $("#PostAndCoreId").val();
        }
        else {
            var PostAndCoreId = 0;
        }
        var ToothNumbersA = $("#ToothNumbersA option:selected").text();
        if (ToothNumbersA != '') {
            var PhotographsImpression = $("#PhotographsImpression").val();
            var TypeOfPost = $("#TypeOfPost").val();
            var PostSpacePreparation = $("#PostSpacePreparation").val();
            var PatternImpression = $("#PatternImpression").val();
            var Temporization = $("#Temporization").val();
            var InsertionCementation = $("#InsertionCementation").val();
            var InsertionTemporization = $("#InsertionTemporization").val();
            var PcReview1 = $("#PcReview1").val();
            var PcReview2 = $("#PcReview2").val();
            var PcReview3 = $("#PcReview3").val();

            var idArrayX = [];
            $('.jHidden').each(function () {
                idArrayX.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbersA, idArrayX) != '-1') {
                alert("Already Added");
            }
            else {

                var markupPostAndCoreId = " <td><input name='PcList[" + itemIndex + "].PostAndCoreId' id='PcList[" + itemIndex + "]_PostAndCoreId' type='hidden' value=" + PostAndCoreId + ">"
                var markupToothNumbersA = "<input type='hidden' id='PcList[" + itemIndex + "]_ToothNumbersA' class='form-control jHidden'  name='PcList[" + itemIndex + "].ToothNumbersA' value='" + ToothNumbersA + "'>";
                var markupPhotographsImpression = "<td>" + PhotographsImpression + "<input type='hidden' id='PcList[" + itemIndex + "]_PhotographsImpression' class='form-control js_PhotographsImpression'  name='PcList[" + itemIndex + "].PhotographsImpression' value='" + PhotographsImpression + "'></td>";
                var markupTypeOfPost = "<td>" + TypeOfPost + "<input type='hidden' id='PcList[" + itemIndex + "]_TypeOfPost' class='form-control js_TypeOfPost'  name='PcList[" + itemIndex + "].TypeOfPost' value='" + TypeOfPost + "'></td>";
                var markupPostSpacePreparation = "<td>" + PostSpacePreparation + "<input type='hidden' id='PcList[" + itemIndex + "]_PostSpacePreparation' class='form-control js_PostSpacePreparation'  name='PcList[" + itemIndex + "].PostSpacePreparation' value='" + PostSpacePreparation + "'></td>";
                var markupPatternImpression = "<td>" + PatternImpression + "<input type='hidden' id='PcList[" + itemIndex + "]_PatternImpression' class='form-control js_PatternImpression'  name='PcList[" + itemIndex + "].PatternImpression' value='" + PatternImpression + "'></td>";
                var markupTemporization = "<td>" + Temporization + "<input type='hidden' id='PcList[" + itemIndex + "]_Temporization' class='form-control js_Temporization'  name='PcList[" + itemIndex + "].Temporization' value='" + Temporization + "'></td>";
                var markupInsertionCementation = "<td>" + InsertionCementation + "<input type='hidden' id='PcList[" + itemIndex + "]_InsertionCementation' class='form-control js_InsertionCementation'  name='PcList[" + itemIndex + "].InsertionCementation' value='" + InsertionCementation + "'></td>";
                var markupInsertionTemporization = "<td>" + InsertionTemporization + "<input type='hidden' id='PcList[" + itemIndex + "]_InsertionTemporization' class='form-control js_InsertionTemporization'  name='PcList[" + itemIndex + "].InsertionTemporization' value='" + InsertionTemporization + "'></td>";
                var markupPcReview1 = "<td>" + PcReview1 + "<input type='hidden' id='PcList[" + itemIndex + "]_PcReview1' class='form-control js_PcReview1'  name='PcList[" + itemIndex + "].PcReview1' value='" + PcReview1 + "'></td>";
                var markupPcReview2 = "<td>" + PcReview2 + "<input type='hidden' id='PcList[" + itemIndex + "]_PcReview2' class='form-control js_PcReview2'  name='PcList[" + itemIndex + "].PcReview2' value='" + PcReview2 + "'></td>";
                var markupPcReview3 = "<td>" + PcReview3 + "<input type='hidden' id='PcList[" + itemIndex + "]_PcReview3' class='form-control js_PcReview3'  name='PcList[" + itemIndex + "].PcReview3' value='" + PcReview3 + "'></td>";
                var deleteButton = "<td> <button type='button' class='PostAndCoreToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='PostAndCoreToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";

                var markupFinal = "<tr>" + Edit + deleteButton + markupPostAndCoreId + ToothNumbersA + markupToothNumbersA + markupPhotographsImpression + markupTypeOfPost + markupPostSpacePreparation + markupPatternImpression + markupTemporization + markupInsertionCementation + markupInsertionTemporization + markupPcReview1 + markupPcReview2 + markupPcReview3 + "</tr>";
                $("#tbPostAndCoreDetails tbody").append(markupFinal);
                $("#ToothNumbersA").val("");
                $("#PhotographsImpression").val("");
                $("#TypeOfPost").val("");
                $("#PostSpacePreparation").val("");
                $("#PatternImpression").val("");
                $("#Temporization").val("");
                $("#InsertionCementation").val("");
                $("#InsertionTemporization").val("");
                $("#PcReview1").val("");
                $("#PcReview2").val("");
                $("#PcReview3").val("");

            }
        }
        else {
            alert("Please select a tooth!");
        }
    }
 );

    $('#tbPostAndCoreDetails').on('click', ".PostAndCoreToothEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');   // Find the row
            var $tds = row.find("td");
            var varPostAndCoreId = Id;

            var varToothNumber = $tds.closest('tr').find('.jHidden').val();
            var varPhotographsImpression = $tds.closest('tr').find('.js_PhotographsImpression').val();
            var varTypeOfPost = $tds.closest('tr').find('.js_TypeOfPost').val();
            var varPostSpacePreparation = $tds.closest('tr').find('.js_PostSpacePreparation').val();
            var varPatternImpression = $tds.closest('tr').find('.js_PatternImpression').val();
            var varTemporization = $tds.closest('tr').find('.js_Temporization').val();
            var varInsertionCementation = $tds.closest('tr').find('.js_InsertionCementation').val();
            var varInsertionTemporization = $tds.closest('tr').find('.js_InsertionTemporization').val();
            var varPcReview1 = $tds.closest('tr').find('.js_PcReview1').val();
            var varPcReview2 = $tds.closest('tr').find('.js_PcReview2').val();
            var varPcReview3 = $tds.closest('tr').find('.js_PcReview3').val();


            $("#PostAndCoreId").val(varPostAndCoreId);
            $("#ToothNumbersA").val(varToothNumber);
            $("#PhotographsImpression").val(varPhotographsImpression);
            $("#TypeOfPost").val(varTypeOfPost);
            $("#PostSpacePreparation").val(varPostSpacePreparation);
            $("#PatternImpression").val(varPatternImpression);
            $("#Temporization").val(varTemporization);
            $("#InsertionCementation").val(varInsertionCementation);
            $("#InsertionTemporization").val(varInsertionTemporization);
            $("#PcReview1").val(varPcReview1);
            $("#PcReview2").val(varPcReview2);
            $("#PcReview3").val(varPcReview3);
            row.remove();

            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("PostAndCoreDetailsById", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbRestorativeProDetails tbody").empty();
                    $('#tbPostAndCoreDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbPostAndCoreDetails input.iHidden").length;
                        var PostAndCoreId = item.PostAndCoreId;
                        var ToothNumbersA = item.ToothNumber;
                        var PhotographsImpression = item.PhotographsImpression;
                        var TypeOfPost = item.TypeOfPost;
                        var PostSpacePreparation = item.PostSpacePreparation;
                        var PatternImpression = item.PatternImpression;
                        var Temporization = item.Temporization;
                        var InsertionCementation = item.InsertionCementation;
                        var InsertionTemporization = item.InsertionTemporization;
                        var PcReview1 = item.PcReview1;
                        var PcReview2 = item.PcReview2;
                        var PcReview3 = item.PcReview3;


                        var markupPostAndCoreId = " <td><input name='PcList[" + itemIndex + "].PostAndCoreId' id='PcList[" + itemIndex + "]_PostAndCoreId' type='hidden' value=" + PostAndCoreId + ">"
                        var markupToothNumbersA = "<input type='hidden' id='PcList[" + itemIndex + "]_ToothNumbersA' class='form-control jHidden'  name='PcList[" + itemIndex + "].ToothNumbersA' value='" + ToothNumbersA + "'>";
                        var markupPhotographsImpression = "<td>" + PhotographsImpression + "<input type='hidden' id='PcList[" + itemIndex + "]_PhotographsImpression' class='form-control js_PhotographsImpression'  name='PcList[" + itemIndex + "].PhotographsImpression' value='" + PhotographsImpression + "'></td>";
                        var markupTypeOfPost = "<td>" + TypeOfPost + "<input type='hidden' id='PcList[" + itemIndex + "]_TypeOfPost' class='form-control js_TypeOfPost'  name='PcList[" + itemIndex + "].TypeOfPost' value='" + TypeOfPost + "'></td>";
                        var markupPostSpacePreparation = "<td>" + PostSpacePreparation + "<input type='hidden' id='PcList[" + itemIndex + "]_PostSpacePreparation' class='form-control js_PostSpacePreparation'  name='PcList[" + itemIndex + "].PostSpacePreparation' value='" + PostSpacePreparation + "'></td>";
                        var markupPatternImpression = "<td>" + PatternImpression + "<input type='hidden' id='PcList[" + itemIndex + "]_PatternImpression' class='form-control js_PatternImpression'  name='PcList[" + itemIndex + "].PatternImpression' value='" + PatternImpression + "'></td>";
                        var markupTemporization = "<td>" + Temporization + "<input type='hidden' id='PcList[" + itemIndex + "]_Temporization' class='form-control js_Temporization'  name='PcList[" + itemIndex + "].Temporization' value='" + Temporization + "'></td>";
                        var markupInsertionCementation = "<td>" + InsertionCementation + "<input type='hidden' id='PcList[" + itemIndex + "]_InsertionCementation' class='form-control js_InsertionCementation'  name='PcList[" + itemIndex + "].InsertionCementation' value='" + InsertionCementation + "'></td>";
                        var markupInsertionTemporization = "<td>" + InsertionTemporization + "<input type='hidden' id='PcList[" + itemIndex + "]_InsertionTemporization' class='form-control js_InsertionTemporization'  name='PcList[" + itemIndex + "].InsertionTemporization' value='" + InsertionTemporization + "'></td>";
                        var markupPcReview1 = "<td>" + PcReview1 + "<input type='hidden' id='PcList[" + itemIndex + "]_PcReview1' class='form-control js_PcReview1'  name='PcList[" + itemIndex + "].PcReview1' value='" + PcReview1 + "'></td>";
                        var markupPcReview2 = "<td>" + PcReview2 + "<input type='hidden' id='PcList[" + itemIndex + "]_PcReview2' class='form-control js_PcReview2'  name='PcList[" + itemIndex + "].PcReview2' value='" + PcReview2 + "'></td>";
                        var markupPcReview3 = "<td>" + PcReview3 + "<input type='hidden' id='PcList[" + itemIndex + "]_PcReview3' class='form-control js_PcReview3'  name='PcList[" + itemIndex + "].PcReview3' value='" + PcReview3 + "'></td>";
                        var deleteButton = "<td> <button type='button' class='PostAndCoreToothdelete btn btn-danger btn-xs' data-id='" + PostAndCoreId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='PostAndCoreToothEdit btn btn-primary btn-xs' data-id='" + PostAndCoreId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";

                        var markupFinal = "<tr>" + Edit + deleteButton + markupPostAndCoreId + ToothNumbersA + markupToothNumbersA + markupPhotographsImpression + markupTypeOfPost + markupPostSpacePreparation + markupPatternImpression + markupTemporization + markupInsertionCementation + markupInsertionTemporization + markupPcReview1 + markupPcReview2 + markupPcReview3 + "</tr>";
                        $("#tbPostAndCoreDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });


    $('#tbPostAndCoreDetails').on('click', ".PostAndCoreToothdelete", function () {
        var url = '@Url.Action("DeletePostAndCoreToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { PostAndCoreId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });


    $("#btnSurgicalProAdd").click(function (e) {
        
        var itemIndex = $("#tbSurgicalProDetails input.kHidden").length;
        e.preventDefault();
        if ($("#SurgicalProId").val() != 0) {
            var SurgicalProId = $("#SurgicalProId").val();
        }
        else {
            var SurgicalProId = 0;
        }
        var ToothNumbersB = $("#ToothNumbersB option:selected").text();
        if (ToothNumbersB != '') {
            var Premedication = $("#Premedication").val();
            var AnesthesiaUsed = $("#AnesthesiaUsed").val();
            var FlapDesign = $("#FlapDesign").val();
            var Graft = $("#Graft").val();
            var Suturing = $("#Suturing").val();
            var SpReview1 = $("#SpReview1").val();
            var SpReview2 = $("#SpReview2").val();
            var SpReview3 = $("#SpReview3").val();

            var idArrayY = [];
            $('.kHidden').each(function () {
                idArrayY.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbersB, idArrayY) != '-1') {
                alert("Already Added");
            }
            else {

                var markupSurgicalProId = " <td><input name='SpList[" + itemIndex + "].SurgicalProId' id='SpList[" + itemIndex + "]_SurgicalProId' type='hidden' value=" + SurgicalProId + ">"
                var markupToothNumbersB = "<input type='hidden' id='SpList[" + itemIndex + "]_ToothNumbersB' class='form-control kHidden'  name='SpList[" + itemIndex + "].ToothNumbersB' value='" + ToothNumbersB + "'>";
                var markupPremedication = "<td>" + Premedication + "<input type='hidden' id='SpList[" + itemIndex + "]_Premedication' class='form-control js_Premedication'  name='SpList[" + itemIndex + "].Premedication' value='" + Premedication + "'></td>";
                var markupAnesthesiaUsed = "<td>" + AnesthesiaUsed + "<input type='hidden' id='SpList[" + itemIndex + "]_AnesthesiaUsed' class='form-control js_AnesthesiaUsed'  name='SpList[" + itemIndex + "].AnesthesiaUsed' value='" + AnesthesiaUsed + "'></td>";
                var markupFlapDesign = "<td>" + FlapDesign + "<input type='hidden' id='SpList[" + itemIndex + "]_FlapDesign' class='form-control js_AnesthesiaUsed'  name='SpList[" + itemIndex + "].FlapDesign' value='" + FlapDesign + "'></td>";
                var markupGraft = "<td>" + Graft + "<input type='hidden' id='SpList[" + itemIndex + "]_Graft' class='form-control js_Graft'  name='SpList[" + itemIndex + "].Graft' value='" + Graft + "'></td>";
                var markupSuturing = "<td>" + Suturing + "<input type='hidden' id='SpList[" + itemIndex + "]_Suturing' class='form-control js_Suturing'  name='SpList[" + itemIndex + "].Suturing' value='" + Suturing + "'></td>";
                var markupSpReview1 = "<td>" + SpReview1 + "<input type='hidden' id='SpList[" + itemIndex + "]_SpReview1' class='form-control js_SpReview1'  name='SpList[" + itemIndex + "].SpReview1' value='" + SpReview1 + "'></td>";
                var markupSpReview2 = "<td>" + SpReview2 + "<input type='hidden' id='SpList[" + itemIndex + "]_SpReview2' class='form-control js_SpReview2'  name='SpList[" + itemIndex + "].SpReview2' value='" + SpReview2 + "'></td>";
                var markupSpReview3 = "<td>" + SpReview3 + "<input type='hidden' id='SpList[" + itemIndex + "]_SpReview3' class='form-control js_SpReview3'  name='SpList[" + itemIndex + "].SpReview3' value='" + SpReview3 + "'></td>";
                var deleteButton = "<td> <button type='button' class='SurgicalProToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='SurgicalProToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";

                var markupFinal = "<tr>" + Edit + deleteButton + markupSurgicalProId + ToothNumbersB + markupToothNumbersB + markupPremedication + markupAnesthesiaUsed + markupFlapDesign + markupGraft + markupSuturing + markupSpReview1 + markupSpReview2 + markupSpReview3 + "</tr>";

                $("#tbSurgicalProDetails tbody").append(markupFinal);
                $("#ToothNumbersB").val("");

                $("#Premedication").val("");
                $("#AnesthesiaUsed").val("");
                $("#FlapDesign").val("");
                $("#Graft").val("");
                $("#Suturing").val("");
                $("#SpReview1").val("");
                $("#SpReview2").val("");
                $("#SpReview3").val("");


            }
        }
        else {
            alert("Please select a tooth!");
        }
    }
);

    $('#tbSurgicalProDetails').on('click', ".SurgicalProToothEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');   // Find the row
            var $tds = row.find("td");
            var varSurgicalProId = Id;

            var varToothNumber = $tds.closest('tr').find('.kHidden').val();
            var varPremedication = $tds.closest('tr').find('.js_Premedication').val();
            var varAnesthesiaUsed = $tds.closest('tr').find('.js_AnesthesiaUsed').val();
            var varFlapDesign = $tds.closest('tr').find('.js_FlapDesign').val();
            var varGraft = $tds.closest('tr').find('.js_Graft').val();
            var varSuturing = $tds.closest('tr').find('.js_Suturing').val();
            var varSpReview1 = $tds.closest('tr').find('.js_SpReview1').val();
            var varSpReview2 = $tds.closest('tr').find('.js_SpReview2').val();
            var varSpReview3 = $tds.closest('tr').find('.js_SpReview3').val();

            $("#SurgicalProId").val(varSurgicalProId);
            $("#ToothNumbersB").val(varToothNumber);
            $("#Premedication").val(varPremedication);
            $("#AnesthesiaUsed").val(varAnesthesiaUsed);
            $("#FlapDesign").val(varFlapDesign);
            $("#Graft").val(varGraft);
            $("#Suturing").val(varSuturing);
            $("#SpReview1").val(varSpReview1);
            $("#SpReview2").val(varSpReview2);
            $("#SpReview3").val(varSpReview3);
            row.remove();


            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("SurgicalProDetailsById", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbRestorativeProDetails tbody").empty();
                    $('#tbSurgicalProDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbSurgicalProDetails input.kHidden").length;
                        var SurgicalProId = item.SurgicalProId;
                        var ToothNumbersB = item.ToothNumber;
                        var Premedication = item.Premedication;
                        var AnesthesiaUsed = item.AnesthesiaUsed;
                        var FlapDesign = item.FlapDesign;
                        var Graft = item.Graft;
                        var Suturing = item.Suturing;
                        var SpReview1 = item.SpReview1;
                        var SpReview2 = item.SpReview2;
                        var SpReview3 = item.SpReview3;



                        var markupSurgicalProId = " <td><input name='SpList[" + itemIndex + "].SurgicalProId' id='SpList[" + itemIndex + "]_SurgicalProId' type='hidden' value=" + SurgicalProId + ">"
                        var markupToothNumbersB = "<input type='hidden' id='SpList[" + itemIndex + "]_ToothNumbersB' class='form-control kHidden'  name='SpList[" + itemIndex + "].ToothNumbersB' value='" + ToothNumbersB + "'>";
                        var markupPremedication = "<td>" + Premedication + "<input type='hidden' id='SpList[" + itemIndex + "]_Premedication' class='form-control js_Premedication'  name='SpList[" + itemIndex + "].Premedication' value='" + Premedication + "'></td>";
                        var markupAnesthesiaUsed = "<td>" + AnesthesiaUsed + "<input type='hidden' id='SpList[" + itemIndex + "]_AnesthesiaUsed' class='form-control js_AnesthesiaUsed'  name='SpList[" + itemIndex + "].AnesthesiaUsed' value='" + AnesthesiaUsed + "'></td>";
                        var markupFlapDesign = "<td>" + FlapDesign + "<input type='hidden' id='SpList[" + itemIndex + "]_FlapDesign' class='form-control js_AnesthesiaUsed'  name='SpList[" + itemIndex + "].FlapDesign' value='" + FlapDesign + "'></td>";
                        var markupGraft = "<td>" + Graft + "<input type='hidden' id='SpList[" + itemIndex + "]_Graft' class='form-control js_Graft'  name='SpList[" + itemIndex + "].Graft' value='" + Graft + "'></td>";
                        var markupSuturing = "<td>" + Suturing + "<input type='hidden' id='SpList[" + itemIndex + "]_Suturing' class='form-control js_Suturing'  name='SpList[" + itemIndex + "].Suturing' value='" + Suturing + "'></td>";
                        var markupSpReview1 = "<td>" + SpReview1 + "<input type='hidden' id='SpList[" + itemIndex + "]_SpReview1' class='form-control js_SpReview1'  name='SpList[" + itemIndex + "].SpReview1' value='" + SpReview1 + "'></td>";
                        var markupSpReview2 = "<td>" + SpReview2 + "<input type='hidden' id='SpList[" + itemIndex + "]_SpReview2' class='form-control js_SpReview2'  name='SpList[" + itemIndex + "].SpReview2' value='" + SpReview2 + "'></td>";
                        var markupSpReview3 = "<td>" + SpReview3 + "<input type='hidden' id='SpList[" + itemIndex + "]_SpReview3' class='form-control js_SpReview3'  name='SpList[" + itemIndex + "].SpReview3' value='" + SpReview3 + "'></td>";
                        var deleteButton = "<td> <button type='button' class='SurgicalProToothdelete btn btn-danger btn-xs' data-id='" + SurgicalProId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='SurgicalProToothEdit btn btn-primary btn-xs' data-id='" + SurgicalProId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";

                        var markupFinal = "<tr>" + Edit + deleteButton + markupSurgicalProId + ToothNumbersB + markupToothNumbersB + markupPremedication + markupAnesthesiaUsed + markupFlapDesign + markupGraft + markupSuturing + markupSpReview1 + markupSpReview2 + markupSpReview3 + "</tr>";
                        $("#tbSurgicalProDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });

    $('#tbSurgicalProDetails').on('click', ".SurgicalProToothdelete", function () {
        var url = '@Url.Action("DeleteSurgicalProToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { SurgicalProId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });



    $("#btnEstheticCorrAdd").click(function (e) {
        
        var itemIndex = $("#tbEstheticCorrDetails input.lHidden").length;
        e.preventDefault();
        if ($("#EstheticCorrId").val() != 0) {
            var EstheticCorrId = $("#EstheticCorrId").val();
        }
        else {
            var EstheticCorrId = 0;
        }
        var ToothNumbersC = $("#ToothNumbersC option:selected").text();

        if (ToothNumbersC != '') {
            var ImpressionPhotograph = $("#ImpressionPhotograph").val();
            var VitalityTesting = $("#VitalityTesting").val();
            var RadiographicInterpretation = $("#RadiographicInterpretation").val();
            var TreatmentProcedure = $("#TreatmentProcedure").val();
            var ToothPreparation = $("#ToothPreparation").val();
            var ShadeSelection = $("#ShadeSelection").val();
            var EcInsertionCementation = $("#EcInsertionCementation").val();
            var FinishingPolishing = $("#FinishingPolishing").val();
            var EcReview1 = $("#EcReview1").val();
            var EcReview2 = $("#EcReview2").val();

            var idArrayZ = [];
            $('.lHidden').each(function () {
                idArrayZ.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbersC, idArrayZ) != '-1') {
                alert("Already Added");
            }
            else {

                var markupEstheticCorrId = " <td><input name='EcList[" + itemIndex + "].EstheticCorrId' id='EcList[" + itemIndex + "]_EstheticCorrId' type='hidden' value=" + EstheticCorrId + ">"
                var markupToothNumbersC = "<input type='hidden' id='EcList[" + itemIndex + "]_ToothNumbersC' class='form-control lHidden'  name='EcList[" + itemIndex + "].ToothNumbersC' value='" + ToothNumbersC + "'>";
                var markupImpressionPhotograph = "<td>" + ImpressionPhotograph + "<input type='hidden' id='EcList[" + itemIndex + "]_ImpressionPhotograph' class='form-control js_ImpressionPhotograph'  name='EcList[" + itemIndex + "].ImpressionPhotograph' value='" + ImpressionPhotograph + "'></td>";
                var markupVitalityTesting = "<td>" + VitalityTesting + "<input type='hidden' id='EcList[" + itemIndex + "]_VitalityTesting' class='form-control js_VitalityTesting'  name='EcList[" + itemIndex + "].VitalityTesting' value='" + VitalityTesting + "'></td>";
                var markupRadiographicInterpretation = "<td>" + RadiographicInterpretation + "<input type='hidden' id='EcList[" + itemIndex + "]_RadiographicInterpretation' class='form-control js_RadiographicInterpretation'  name='EcList[" + itemIndex + "].RadiographicInterpretation' value='" + RadiographicInterpretation + "'></td>";
                var markupTreatmentProcedure = "<td>" + TreatmentProcedure + "<input type='hidden' id='EcList[" + itemIndex + "]_TreatmentProcedure' class='form-control js_TreatmentProcedure'  name='EcList[" + itemIndex + "].TreatmentProcedure' value='" + TreatmentProcedure + "'></td>";
                var markupToothPreparation = "<td>" + ToothPreparation + "<input type='hidden' id='EcList[" + itemIndex + "]_ToothPreparation' class='form-control js_ToothPreparation'  name='EcList[" + itemIndex + "].ToothPreparation' value='" + ToothPreparation + "'></td>";
                var markupShadeSelection = "<td>" + ShadeSelection + "<input type='hidden' id='EcList[" + itemIndex + "]_ShadeSelection' class='form-control js_ShadeSelection'  name='EcList[" + itemIndex + "].ShadeSelection' value='" + ShadeSelection + "'></td>";
                var markupEcInsertionCementation = "<td>" + EcInsertionCementation + "<input type='hidden' id='EcList[" + itemIndex + "]_EcInsertionCementation' class='form-control js_EcInsertionCementation'  name='EcList[" + itemIndex + "].EcInsertionCementation' value='" + EcInsertionCementation + "'></td>";
                var markupFinishingPolishing = "<td>" + FinishingPolishing + "<input type='hidden' id='EcList[" + itemIndex + "]_FinishingPolishing' class='form-control js_FinishingPolishing'  name='EcList[" + itemIndex + "].FinishingPolishing' value='" + FinishingPolishing + "'></td>";
                var markupEcReview1 = "<td>" + EcReview1 + "<input type='hidden' id='EcList[" + itemIndex + "]_EcReview1' class='form-control js_EcReview1'  name='EcList[" + itemIndex + "].EcReview1' value='" + EcReview1 + "'></td>";
                var markupEcReview2 = "<td>" + EcReview2 + "<input type='hidden' id='EcList[" + itemIndex + "]_EcReview2' class='form-control js_EcReview2'  name='EcList[" + itemIndex + "].EcReview2' value='" + EcReview2 + "'></td>";
                var deleteButton = "<td> <button type='button' class='EstheticCorrToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='EstheticCorrToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";

                var markupFinal = "<tr>" + Edit + deleteButton + markupEstheticCorrId + ToothNumbersC + markupToothNumbersC + markupImpressionPhotograph + markupVitalityTesting + markupRadiographicInterpretation + markupTreatmentProcedure + markupToothPreparation + markupShadeSelection + markupEcInsertionCementation + markupFinishingPolishing + markupEcReview1 + markupEcReview2 + "</tr>";

                $("#tbEstheticCorrDetails tbody").append(markupFinal);
                $("#ToothNumbersC").val("");
                $("#ImpressionPhotograph").val("");
                $("#VitalityTesting").val("");
                $("#RadiographicInterpretation").val("");
                $("#TreatmentProcedure").val("");
                $("#ToothPreparation").val("");
                $("#ShadeSelection").val("");

            }
        }
        else {
            alert("Please select a tooth!");
        }
    }
     );

    $('#tbEstheticCorrDetails').on('click', ".EstheticCorrToothEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');   // Find the row
            var $tds = row.find("td");
            var varEstheticCorrId = Id;
            var varToothNumber = $tds.closest('tr').find('.lHidden').val();
            var varImpressionPhotograph = $tds.closest('tr').find('.js_ImpressionPhotograph').val();
            var varVitalityTesting = $tds.closest('tr').find('.js_VitalityTesting').val();
            var varRadiographicInterpretation = $tds.closest('tr').find('.js_RadiographicInterpretation').val();
            var varTreatmentProcedure = $tds.closest('tr').find('.js_TreatmentProcedure').val();
            var varToothPreparation = $tds.closest('tr').find('.js_ToothPreparation').val();
            var varShadeSelection = $tds.closest('tr').find('.js_ShadeSelection').val();
            var varEcInsertionCementation = $tds.closest('tr').find('.js_EcInsertionCementation').val();
            var varFinishingPolishing = $tds.closest('tr').find('.js_FinishingPolishing').val();
            var varEcReview1 = $tds.closest('tr').find('.js_EcReview1').val();
            var varEcReview2 = $tds.closest('tr').find('.js_EcReview2').val();

            $("#EstheticCorrId").val(varEstheticCorrId);
            $("#ToothNumbersC").val(varToothNumber);
            $("#ImpressionPhotograph").val(varImpressionPhotograph);
            $("#VitalityTesting").val(varVitalityTesting);
            $("#RadiographicInterpretation").val(varRadiographicInterpretation);
            $("#TreatmentProcedure").val(varTreatmentProcedure);
            $("#ToothPreparation").val(varToothPreparation);
            $("#ShadeSelection").val(varShadeSelection);//
            $("#EcInsertionCementation").val(varEcInsertionCementation);
            $("#FinishingPolishing").val(varFinishingPolishing);
            $("#EcReview1").val(varEcReview1);
            $("#EcReview2").val(varEcReview2);
            row.remove();
            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("EstheticCorrDetailsById", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbRestorativeProDetails tbody").empty();
                    $('#tbEstheticCorrDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbEstheticCorrDetails input.lHidden").length;
                        var EstheticCorrId = item.EstheticCorrId;
                        var ToothNumbersC = item.ToothNumber;
                        var ImpressionPhotograph = item.ImpressionPhotograph;
                        var VitalityTesting = item.VitalityTesting;
                        var RadiographicInterpretation = item.RadiographicInterpretation;
                        var TreatmentProcedure = item.TreatmentProcedure;
                        var ToothPreparation = item.ToothPreparation;
                        var ShadeSelection = item.ShadeSelection;
                        var EcInsertionCementation = item.EcInsertionCementation;
                        var FinishingPolishing = item.FinishingPolishing;
                        var EcReview1 = item.EcReview1;
                        var EcReview2 = item.EcReview2;

                        var markupEstheticCorrId = " <td><input name='EcList[" + itemIndex + "].EstheticCorrId' id='EcList[" + itemIndex + "]_EstheticCorrId' type='hidden' value=" + EstheticCorrId + ">"
                        var markupToothNumbersC = "<input type='hidden' id='EcList[" + itemIndex + "]_ToothNumbersC' class='form-control lHidden'  name='EcList[" + itemIndex + "].ToothNumbersC' value='" + ToothNumbersC + "'>";
                        var markupImpressionPhotograph = "<td>" + ImpressionPhotograph + "<input type='hidden' id='EcList[" + itemIndex + "]_ImpressionPhotograph' class='form-control js_ImpressionPhotograph'  name='EcList[" + itemIndex + "].ImpressionPhotograph' value='" + ImpressionPhotograph + "'></td>";
                        var markupVitalityTesting = "<td>" + VitalityTesting + "<input type='hidden' id='EcList[" + itemIndex + "]_VitalityTesting' class='form-control js_VitalityTesting'  name='EcList[" + itemIndex + "].VitalityTesting' value='" + VitalityTesting + "'></td>";
                        var markupRadiographicInterpretation = "<td>" + RadiographicInterpretation + "<input type='hidden' id='EcList[" + itemIndex + "]_RadiographicInterpretation' class='form-control js_RadiographicInterpretation'  name='EcList[" + itemIndex + "].RadiographicInterpretation' value='" + RadiographicInterpretation + "'></td>";
                        var markupTreatmentProcedure = "<td>" + TreatmentProcedure + "<input type='hidden' id='EcList[" + itemIndex + "]_TreatmentProcedure' class='form-control js_TreatmentProcedure'  name='EcList[" + itemIndex + "].TreatmentProcedure' value='" + TreatmentProcedure + "'></td>";
                        var markupToothPreparation = "<td>" + ToothPreparation + "<input type='hidden' id='EcList[" + itemIndex + "]_ToothPreparation' class='form-control js_ToothPreparation'  name='EcList[" + itemIndex + "].ToothPreparation' value='" + ToothPreparation + "'></td>";
                        var markupShadeSelection = "<td>" + ShadeSelection + "<input type='hidden' id='EcList[" + itemIndex + "]_ShadeSelection' class='form-control js_ShadeSelection'  name='EcList[" + itemIndex + "].ShadeSelection' value='" + ShadeSelection + "'></td>";
                        var markupEcInsertionCementation = "<td>" + EcInsertionCementation + "<input type='hidden' id='EcList[" + itemIndex + "]_EcInsertionCementation' class='form-control js_EcInsertionCementation'  name='EcList[" + itemIndex + "].EcInsertionCementation' value='" + EcInsertionCementation + "'></td>";
                        var markupFinishingPolishing = "<td>" + FinishingPolishing + "<input type='hidden' id='EcList[" + itemIndex + "]_FinishingPolishing' class='form-control js_FinishingPolishing'  name='EcList[" + itemIndex + "].FinishingPolishing' value='" + FinishingPolishing + "'></td>";
                        var markupEcReview1 = "<td>" + EcReview1 + "<input type='hidden' id='EcList[" + itemIndex + "]_EcReview1' class='form-control js_EcReview1'  name='EcList[" + itemIndex + "].EcReview1' value='" + EcReview1 + "'></td>";
                        var markupEcReview2 = "<td>" + EcReview2 + "<input type='hidden' id='EcList[" + itemIndex + "]_EcReview2' class='form-control js_EcReview2'  name='EcList[" + itemIndex + "].EcReview2' value='" + EcReview2 + "'></td>";
                        var deleteButton = "<td> <button type='button' class='EstheticCorrToothdelete btn btn-danger btn-xs' data-id='" + EstheticCorrId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='EstheticCorrToothEdit btn btn-primary btn-xs' data-id='" + EstheticCorrId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";

                        var markupFinal = "<tr>" + Edit + deleteButton + markupEstheticCorrId + ToothNumbersC + markupToothNumbersC + markupImpressionPhotograph + markupVitalityTesting + markupRadiographicInterpretation + markupTreatmentProcedure + markupToothPreparation + markupShadeSelection + markupEcInsertionCementation + markupFinishingPolishing + markupEcReview1 + markupEcReview2 + "</tr>";
                        $("#tbEstheticCorrDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });

    $('#tbEstheticCorrDetails').on('click', ".EstheticCorrToothdelete", function () {
        var url = '@Url.Action("DeleteEstheticCorrToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { EstheticCorrId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });


    $("#btnBleachingAdd").click(function (e) {
        
        var itemIndex = $("#tbBleachingDetails input.mHidden").length;
        e.preventDefault();
        if ($("#BleachingId").val() != 0) {
            var BleachingId = $("#BleachingId").val();
        }
        else {
            var BleachingId = 0;
        }
        var ToothNumbersD = $("#ToothNumbersD option:selected").text();
        if (ToothNumbersD != '') {
            var BlVitalityTesting = $("#BlVitalityTesting").val();
            var PhotographsCasts = $("#PhotographsCasts").val();
            var BlRadiographicInterpretation = $("#BlRadiographicInterpretation").val();
            var DiscolouredToothShade = $("#DiscolouredToothShade").val();
            var AdjacentToothShade = $("#AdjacentToothShade").val();
            var BleachingProcedure = $("#BleachingProcedure").val();
            var BReview1 = $("#BReview1").val();
            var BReview2 = $("#BReview2").val();
            var BReview3 = $("#BReview3").val();
            var ProsthesisType = $("#ProsthesisType").val();

            var idArrayM = [];
            $('.mHidden').each(function () {
                idArrayM.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbersD, idArrayM) != '-1') {
                alert("Already Added");
            }
            else {
                var markupBleachingId = " <td><input name='BlList[" + itemIndex + "].BleachingId' id='BlList[" + itemIndex + "]_BleachingId' type='hidden' value=" + BleachingId + ">"
                var markupToothNumbersD = "<input type='hidden' id='BlList[" + itemIndex + "]_ToothNumbersD' class='form-control mHidden'  name='BlList[" + itemIndex + "].ToothNumbersD' value='" + ToothNumbersD + "'>";
                var markupBlVitalityTesting = "<td>" + BlVitalityTesting + "<input type='hidden' id='BlList[" + itemIndex + "]_BlVitalityTesting' class='form-control js_BlVitalityTesting'  name='BlList[" + itemIndex + "].BlVitalityTesting' value='" + BlVitalityTesting + "'></td>";
                var markupPhotographsCasts = "<td>" + PhotographsCasts + "<input type='hidden' id='BlList[" + itemIndex + "]_PhotographsCasts' class='form-control js_PhotographsCasts'  name='BlList[" + itemIndex + "].PhotographsCasts' value='" + PhotographsCasts + "'></td>";
                var markupBlRadiographicInterpretation = "<td>" + BlRadiographicInterpretation + "<input type='hidden' id='BlList[" + itemIndex + "]_BlRadiographicInterpretation' class='form-control js_BlRadiographicInterpretation'  name='BlList[" + itemIndex + "].BlRadiographicInterpretation' value='" + BlRadiographicInterpretation + "'></td>";
                var markupDiscolouredToothShade = "<td>" + DiscolouredToothShade + "<input type='hidden' id='BlList[" + itemIndex + "]_DiscolouredToothShade' class='form-control js_DiscolouredToothShade'  name='BlList[" + itemIndex + "].DiscolouredToothShade' value='" + DiscolouredToothShade + "'></td>";
                var markupAdjacentToothShade = "<td>" + AdjacentToothShade + "<input type='hidden' id='BlList[" + itemIndex + "]_AdjacentToothShade' class='form-control js_AdjacentToothShade'  name='BlList[" + itemIndex + "].AdjacentToothShade' value='" + AdjacentToothShade + "'></td>";
                var markupBleachingProcedure = "<td>" + BleachingProcedure + "<input type='hidden' id='BlList[" + itemIndex + "]_BleachingProcedure' class='form-control js_BleachingProcedure'  name='BlList[" + itemIndex + "].BleachingProcedure' value='" + BleachingProcedure + "'></td>";
                var markupBReview1 = "<td>" + BReview1 + "<input type='hidden' id='BlList[" + itemIndex + "]_BReview1' class='form-control js_BReview1'  name='BlList[" + itemIndex + "].BReview1' value='" + BReview1 + "'></td>";
                var markupBReview2 = "<td>" + BReview2 + "<input type='hidden' id='BlList[" + itemIndex + "]_BReview2' class='form-control js_BReview2'  name='BlList[" + itemIndex + "].BReview2' value='" + BReview2 + "'></td>";
                var markupBReview3 = "<td>" + BReview3 + "<input type='hidden' id='BlList[" + itemIndex + "]_BReview3' class='form-control js_BReview3'  name='BlList[" + itemIndex + "].BReview3' value='" + BReview3 + "'></td>";
                var markupProsthesisType = "<td>" + ProsthesisType + "<input type='hidden' id='BlList[" + itemIndex + "]_ProsthesisType' class='form-control js_ProsthesisType'  name='BlList[" + itemIndex + "].ProsthesisType' value='" + ProsthesisType + "'></td>";
                var deleteButton = "<td> <button type='button' class='BleachingToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='BleachingToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                var markupFinal = "<tr>" + Edit + deleteButton + markupBleachingId + ToothNumbersD + markupToothNumbersD + markupBlVitalityTesting + markupPhotographsCasts + markupBlRadiographicInterpretation + markupDiscolouredToothShade + markupAdjacentToothShade + markupBleachingProcedure + markupBReview1 + markupBReview2 + markupBReview3 + markupProsthesisType + "</tr>";
                $("#tbBleachingDetails tbody").append(markupFinal);
                $("#ToothNumbersD").val("");
                $("#BlVitalityTesting").val("");
                $("#PhotographsCasts").val("");
                $("#BlRadiographicInterpretation").val("");
                $("#DiscolouredToothShade").val("");
                $("#AdjacentToothShade").val("");
                $("#BleachingProcedure").val("");
                $("#BReview1").val("");
                $("#BReview2").val("");
                $("#BReview3").val("");
                $("#ProsthesisType").val("");

            }
        }
        else {
            alert("Please select a tooth!");
        }
    }
         );

    $('#tbBleachingDetails').on('click', ".BleachingToothEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');   // Find the row
            var $tds = row.find("td");
            var varBleachingId = Id;

            var varToothNumber = $tds.closest('tr').find('.mHidden').val();
            var varBlVitalityTesting = $tds.closest('tr').find('.js_BlVitalityTesting').val();
            var varPhotographsCasts = $tds.closest('tr').find('.js_PhotographsCasts').val();
            var varBlRadiographicInterpretation = $tds.closest('tr').find('.js_BlRadiographicInterpretation').val();
            var varDiscolouredToothShade = $tds.closest('tr').find('.js_DiscolouredToothShade').val();
            var varAdjacentToothShade = $tds.closest('tr').find('.js_AdjacentToothShade').val();
            var varBleachingProcedure = $tds.closest('tr').find('.js_BleachingProcedure').val();
            var varBReview1 = $tds.closest('tr').find('.js_BReview1').val();
            var varBReview2 = $tds.closest('tr').find('.js_BReview2').val();
            var varBReview3 = $tds.closest('tr').find('.js_BReview3').val();
            var varProsthesisType = $tds.closest('tr').find('.js_ProsthesisType').val();

            $("#BleachingId").val(varBleachingId);
            $("#ToothNumbersD").val(varToothNumber);
            $("#BlVitalityTesting").val(varBlVitalityTesting);
            $("#PhotographsCasts").val(varPhotographsCasts);
            $("#BlRadiographicInterpretation").val(varBlRadiographicInterpretation);
            $("#DiscolouredToothShade").val(varDiscolouredToothShade);
            $("#AdjacentToothShade").val(varAdjacentToothShade);
            $("#BleachingProcedure").val(varBleachingProcedure);
            $("#BReview1").val(varBReview1);
            $("#BReview2").val(varBReview2);
            $("#BReview3").val(varBReview3);
            $("#ProsthesisType").val(varProsthesisType);
            row.remove();
            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("BleachingDetailsById", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbBleachingDetails tbody").empty();
                    $('#tbBleachingDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbBleachingDetails input.mHidden").length;
                        var BleachingId = item.BleachingId;
                        var ToothNumbersD = item.ToothNumber;

                        var BlVitalityTesting = item.BlVitalityTesting;
                        var PhotographsCasts = item.PhotographsCasts;
                        var BlRadiographicInterpretation = item.BlRadiographicInterpretation;
                        var DiscolouredToothShade = item.DiscolouredToothShade;
                        var AdjacentToothShade = item.AdjacentToothShade;
                        var BleachingProcedure = item.BleachingProcedure;
                        var BReview1 = item.BReview1;
                        var BReview2 = item.BReview2;
                        var BReview3 = item.BReview3;
                        var ProsthesisType = item.ProsthesisType;



                        var markupBleachingId = " <td><input name='BlList[" + itemIndex + "].BleachingId' id='BlList[" + itemIndex + "]_BleachingId' type='hidden' value=" + BleachingId + ">"
                        var markupToothNumbersD = "<input type='hidden' id='BlList[" + itemIndex + "]_ToothNumbersD' class='form-control mHidden'  name='BlList[" + itemIndex + "].ToothNumbersD' value='" + ToothNumbersD + "'>";
                        var markupBlVitalityTesting = "<td>" + BlVitalityTesting + "<input type='hidden' id='BlList[" + itemIndex + "]_BlVitalityTesting' class='form-control js_BlVitalityTesting'  name='BlList[" + itemIndex + "].BlVitalityTesting' value='" + BlVitalityTesting + "'></td>";
                        var markupPhotographsCasts = "<td>" + PhotographsCasts + "<input type='hidden' id='BlList[" + itemIndex + "]_PhotographsCasts' class='form-control js_PhotographsCasts'  name='BlList[" + itemIndex + "].PhotographsCasts' value='" + PhotographsCasts + "'></td>";
                        var markupBlRadiographicInterpretation = "<td>" + BlRadiographicInterpretation + "<input type='hidden' id='BlList[" + itemIndex + "]_BlRadiographicInterpretation' class='form-control js_BlRadiographicInterpretation'  name='BlList[" + itemIndex + "].BlRadiographicInterpretation' value='" + BlRadiographicInterpretation + "'></td>";
                        var markupDiscolouredToothShade = "<td>" + DiscolouredToothShade + "<input type='hidden' id='BlList[" + itemIndex + "]_DiscolouredToothShade' class='form-control js_DiscolouredToothShade'  name='BlList[" + itemIndex + "].DiscolouredToothShade' value='" + DiscolouredToothShade + "'></td>";
                        var markupAdjacentToothShade = "<td>" + AdjacentToothShade + "<input type='hidden' id='BlList[" + itemIndex + "]_AdjacentToothShade' class='form-control js_AdjacentToothShade'  name='BlList[" + itemIndex + "].AdjacentToothShade' value='" + AdjacentToothShade + "'></td>";
                        var markupBleachingProcedure = "<td>" + BleachingProcedure + "<input type='hidden' id='BlList[" + itemIndex + "]_BleachingProcedure' class='form-control js_BleachingProcedure'  name='BlList[" + itemIndex + "].BleachingProcedure' value='" + BleachingProcedure + "'></td>";
                        var markupBReview1 = "<td>" + BReview1 + "<input type='hidden' id='BlList[" + itemIndex + "]_BReview1' class='form-control js_BReview1'  name='BlList[" + itemIndex + "].BReview1' value='" + BReview1 + "'></td>";
                        var markupBReview2 = "<td>" + BReview2 + "<input type='hidden' id='BlList[" + itemIndex + "]_BReview2' class='form-control js_BReview2'  name='BlList[" + itemIndex + "].BReview2' value='" + BReview2 + "'></td>";
                        var markupBReview3 = "<td>" + BReview3 + "<input type='hidden' id='BlList[" + itemIndex + "]_BReview3' class='form-control js_BReview3'  name='BlList[" + itemIndex + "].BReview3' value='" + BReview3 + "'></td>";
                        var markupProsthesisType = "<td>" + ProsthesisType + "<input type='hidden' id='BlList[" + itemIndex + "]_ProsthesisType' class='form-control js_ProsthesisType'  name='BlList[" + itemIndex + "].ProsthesisType' value='" + ProsthesisType + "'></td>";
                        var deleteButton = "<td> <button type='button' class='BleachingToothdelete btn btn-danger btn-xs' data-id='" + BleachingId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='BleachingToothEdit btn btn-primary btn-xs' data-id='" + BleachingId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                        var markupFinal = "<tr>" + Edit + deleteButton + markupBleachingId + ToothNumbersD + markupToothNumbersD + markupBlVitalityTesting + markupPhotographsCasts + markupBlRadiographicInterpretation + markupDiscolouredToothShade + markupAdjacentToothShade + markupBleachingProcedure + markupBReview1 + markupBReview2 + markupBReview3 + markupProsthesisType + "</tr>";
                        $("#tbBleachingDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });


    $('#tbBleachingDetails').on('click', ".BleachingToothdelete", function () {
        var url = '@Url.Action("DeleteBleachingToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { BleachingId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });


    $("#btnTraumatisedAdd").click(function (e) {
        
        var itemIndex = $("#tbTraumatisedDetails input.nHidden").length;
        e.preventDefault();
        if ($("#TraumatisedToothId").val() != 0) {
            var TraumatisedToothId = $("#TraumatisedToothId").val();
        }
        else {
            var TraumatisedToothId = 0;
        }
        var ToothNumbersE = $("#ToothNumbersE option:selected").text();
        if (ToothNumbersE != '') {
            var EllisType = $("#EllisType").val();
            var SoftTissueInjuries = $("#SoftTissueInjuries").val();
            var FacialSkeletalInjuries = $("#FacialSkeletalInjuries").val();
            var LuxationInjuries = $("#LuxationInjuries").val();
            var TtVitalityTesting = $("#TtVitalityTesting").val();
            var TtRadiographicInterpretation = $("#TtRadiographicInterpretation").val();
            var TtImpressionPhotographsCast = $("#TtImpressionPhotographsCast").val();
            var TtRestoration = $("#TtRestoration").val();
            var Splinting = $("#Splinting").val();
            var CrownLengthening = $("#CrownLengthening").val();
            var SurgicalManagement = $("#SurgicalManagement").val();
            var OrthodonticIntrusion = $("#OrthodonticIntrusion").val();
            var TtReview1 = $("#TtReview1").val();
            var TtReview2 = $("#TtReview2").val();
            var TtReview3 = $("#TtReview3").val();

            var idArrayN = [];
            $('.nHidden').each(function () {
                idArrayN.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbersE, idArrayN) != '-1') {
                alert("Already Added");
            }
            else {
                var markupTraumatisedToothId = " <td><input name='TtList[" + itemIndex + "].TraumatisedToothId' id='TtList[" + itemIndex + "]_TraumatisedToothId' type='hidden' value=" + TraumatisedToothId + ">"
                var markupToothNumbersE = "<input type='hidden' id='TtList[" + itemIndex + "]_ToothNumbersE' class='form-control nHidden'  name='TtList[" + itemIndex + "].ToothNumbersE' value='" + ToothNumbersE + "'>";
                var markupEllisType = "<td>" + EllisType + "<input type='hidden' id='TtList[" + itemIndex + "]_EllisType' class='form-control js_EllisType'  name='TtList[" + itemIndex + "].EllisType' value='" + EllisType + "'></td>";
                var markupSoftTissueInjuries = "<td>" + SoftTissueInjuries + "<input type='hidden' id='TtList[" + itemIndex + "]_SoftTissueInjuries' class='form-control js_SoftTissueInjuries'  name='TtList[" + itemIndex + "].SoftTissueInjuries' value='" + SoftTissueInjuries + "'></td>";
                var markupFacialSkeletalInjuries = "<td>" + FacialSkeletalInjuries + "<input type='hidden' id='TtList[" + itemIndex + "]_FacialSkeletalInjuries' class='form-control js_FacialSkeletalInjuries'  name='TtList[" + itemIndex + "].FacialSkeletalInjuries' value='" + FacialSkeletalInjuries + "'></td>";
                var markupLuxationInjuries = "<td>" + LuxationInjuries + "<input type='hidden' id='TtList[" + itemIndex + "]_LuxationInjuries' class='form-control js_LuxationInjuries'  name='TtList[" + itemIndex + "].LuxationInjuries' value='" + LuxationInjuries + "'></td>";
                var markupTtVitalityTesting = "<td>" + TtVitalityTesting + "<input type='hidden' id='TtList[" + itemIndex + "]_TtVitalityTesting' class='form-control js_TtVitalityTesting'  name='TtList[" + itemIndex + "].TtVitalityTesting' value='" + TtVitalityTesting + "'></td>";
                var markupTtRadiographicInterpretation = "<td>" + TtRadiographicInterpretation + "<input type='hidden' id='TtList[" + itemIndex + "]_TtRadiographicInterpretation' class='form-control js_TtRadiographicInterpretation'  name='TtList[" + itemIndex + "].TtRadiographicInterpretation' value='" + TtRadiographicInterpretation + "'></td>";
                var markupTtImpressionPhotographsCast = "<td>" + TtImpressionPhotographsCast + "<input type='hidden' id='TtList[" + itemIndex + "]_TtImpressionPhotographsCast' class='form-control js_TtImpressionPhotographsCast'  name='TtList[" + itemIndex + "].TtImpressionPhotographsCast' value='" + TtImpressionPhotographsCast + "'></td>";
                var markupTtRestoration = "<td>" + TtRestoration + "<input type='hidden' id='TtList[" + itemIndex + "]_TtRestoration' class='form-control js_TtRestoration'  name='TtList[" + itemIndex + "].TtRestoration' value='" + TtRestoration + "'></td>";
                var markupSplinting = "<td>" + Splinting + "<input type='hidden' id='TtList[" + itemIndex + "]_Splinting' class='form-control js_Splinting'  name='TtList[" + itemIndex + "].Splinting' value='" + Splinting + "'></td>";
                var markupCrownLengthening = "<td>" + CrownLengthening + "<input type='hidden' id='TtList[" + itemIndex + "]_CrownLengthening' class='form-control js_CrownLengthening'  name='TtList[" + itemIndex + "].CrownLengthening' value='" + CrownLengthening + "'></td>";
                var markupSurgicalManagement = "<td>" + SurgicalManagement + "<input type='hidden' id='TtList[" + itemIndex + "]_SurgicalManagement' class='form-control js_SurgicalManagement'  name='TtList[" + itemIndex + "].SurgicalManagement' value='" + SurgicalManagement + "'></td>";
                var markupOrthodonticIntrusion = "<td>" + OrthodonticIntrusion + "<input type='hidden' id='TtList[" + itemIndex + "]_OrthodonticIntrusion' class='form-control js_OrthodonticIntrusion'  name='TtList[" + itemIndex + "].OrthodonticIntrusion' value='" + OrthodonticIntrusion + "'></td>";
                var markupTtReview1 = "<td>" + TtReview1 + "<input type='hidden' id='TtList[" + itemIndex + "]_TtReview1' class='form-control js_TtReview1'  name='TtList[" + itemIndex + "].TtReview1' value='" + TtReview1 + "'></td>";
                var markupTtReview2 = "<td>" + TtReview2 + "<input type='hidden' id='TtList[" + itemIndex + "]_TtReview2' class='form-control js_TtReview2'  name='TtList[" + itemIndex + "].TtReview2' value='" + TtReview2 + "'></td>";
                var markupTtReview3 = "<td>" + TtReview3 + "<input type='hidden' id='TtList[" + itemIndex + "]_TtReview3' class='form-control js_TtReview3'  name='TtList[" + itemIndex + "].TtReview3' value='" + TtReview3 + "'></td>";

                var deleteButton = "<td> <button type='button' class='TraumatisedToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='TraumatisedToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                var markupFinal = "<tr>" + Edit + deleteButton + markupTraumatisedToothId + ToothNumbersE + markupToothNumbersE + markupEllisType + markupSoftTissueInjuries + markupFacialSkeletalInjuries + markupLuxationInjuries + markupTtVitalityTesting + markupTtRadiographicInterpretation + markupTtImpressionPhotographsCast + markupTtRestoration + markupSplinting + markupCrownLengthening + markupSurgicalManagement + markupOrthodonticIntrusion + markupTtReview1 + markupTtReview2 + markupTtReview3 + "</tr>";
                $("#tbTraumatisedDetails tbody").append(markupFinal);
                $("#ToothNumbersE").val("");
                $("#EllisType").val("");
                $("#SoftTissueInjuries").val("");
                $("#FacialSkeletalInjuries").val("");
                $("#LuxationInjuries").val("");
                $("#TtVitalityTesting").val("");
                $("#TtRadiographicInterpretation").val("");
                $("#TtImpressionPhotographsCast").val("");
                $("#TtRestoration").val("");
                $("#Splinting").val("");
                $("#CrownLengthening").val("");
                $("#SurgicalManagement").val("");
                $("#OrthodonticIntrusion").val("");
                $("#TtReview1").val("");
                $("#TtReview2").val("");
                $("#TtReview3").val("");

            }
        }
        else {
            alert("Please select a tooth!");
        }
    }
              );


    $('#tbTraumatisedDetails').on('click', ".TraumatisedToothEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');   // Find the row
            var $tds = row.find("td");
            var varTraumatisedToothId = Id;

            var varToothNumber = $tds.closest('tr').find('.nHidden').val();
            var varEllisType = $tds.closest('tr').find('.js_EllisType').val();
            var varSoftTissueInjuries = $tds.closest('tr').find('.js_SoftTissueInjuries').val();
            var varFacialSkeletalInjuries = $tds.closest('tr').find('.js_FacialSkeletalInjuries').val();
            var varLuxationInjuries = $tds.closest('tr').find('.js_LuxationInjuries').val();
            var varTtVitalityTesting = $tds.closest('tr').find('.js_TtVitalityTesting').val();
            var varTtRadiographicInterpretation = $tds.closest('tr').find('.js_TtRadiographicInterpretation').val();
            var varTtImpressionPhotographsCast = $tds.closest('tr').find('.js_TtImpressionPhotographsCast').val();
            var varTtRestoration = $tds.closest('tr').find('.js_TtRestoration').val();
            var varSplinting = $tds.closest('tr').find('.js_Splinting').val();
            var varCrownLengthening = $tds.closest('tr').find('.js_CrownLengthening').val();

            var varSurgicalManagement = $tds.closest('tr').find('.js_SurgicalManagement').val();
            var varOrthodonticIntrusion = $tds.closest('tr').find('.js_OrthodonticIntrusion').val();
            var varTtReview1 = $tds.closest('tr').find('.js_TtReview1').val();
            var varTtReview2 = $tds.closest('tr').find('.js_TtReview2').val();
            var varTtReview3 = $tds.closest('tr').find('.js_TtReview3').val();

            $("#TraumatisedToothId").val(varTraumatisedToothId);
            $("#ToothNumbersE").val(varToothNumber);
            $("#EllisType").val(varEllisType);
            $("#SoftTissueInjuries").val(varSoftTissueInjuries);
            $("#FacialSkeletalInjuries").val(varFacialSkeletalInjuries);
            $("#LuxationInjuries").val(varLuxationInjuries);
            $("#TtVitalityTesting").val(varTtVitalityTesting);
            $("#TtRadiographicInterpretation").val(varTtRadiographicInterpretation);
            $("#TtImpressionPhotographsCast").val(varTtImpressionPhotographsCast);
            $("#TtRestoration").val(varTtRestoration);
            $("#Splinting").val(varSplinting);
            $("#CrownLengthening").val(varCrownLengthening);

            $("#SurgicalManagement").val(varSurgicalManagement);
            $("#OrthodonticIntrusion").val(varOrthodonticIntrusion);
            $("#TtReview1").val(varTtReview1);
            $("#TtReview2").val(varTtReview2);
            $("#TtReview3").val(varTtReview3);
            row.remove();

            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("TraumatisedToothDetailsById", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbBleachingDetails tbody").empty();
                    $('#tbTraumatisedDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbTraumatisedDetails input.nHidden").length;
                        var TraumatisedToothId = item.TraumatisedToothId;
                        var ToothNumbersE = item.ToothNumber;

                        var EllisType = item.EllisType;
                        var SoftTissueInjuries = item.SoftTissueInjuries;
                        var FacialSkeletalInjuries = item.FacialSkeletalInjuries;
                        var LuxationInjuries = item.LuxationInjuries;
                        var TtVitalityTesting = item.TtVitalityTesting;
                        var TtRadiographicInterpretation = item.TtRadiographicInterpretation;
                        var TtImpressionPhotographsCast = item.TtImpressionPhotographsCast;
                        var TtRestoration = item.TtRestoration;
                        var Splinting = item.Splinting;
                        var CrownLengthening = item.CrownLengthening;
                        var SurgicalManagement = item.SurgicalManagement;
                        var OrthodonticIntrusion = item.OrthodonticIntrusion;
                        var TtReview1 = item.TtReview1;
                        var TtReview2 = item.TtReview2;
                        var TtReview3 = item.TtReview3;


                        var markupTraumatisedToothId = " <td><input name='TtList[" + itemIndex + "].TraumatisedToothId' id='TtList[" + itemIndex + "]_TraumatisedToothId' type='hidden' value=" + TraumatisedToothId + ">"
                        var markupToothNumbersE = "<input type='hidden' id='TtList[" + itemIndex + "]_ToothNumbersE' class='form-control nHidden'  name='TtList[" + itemIndex + "].ToothNumbersE' value='" + ToothNumbersE + "'>";
                        var markupEllisType = "<td>" + EllisType + "<input type='hidden' id='TtList[" + itemIndex + "]_EllisType' class='form-control js_EllisType'  name='TtList[" + itemIndex + "].EllisType' value='" + EllisType + "'></td>";
                        var markupSoftTissueInjuries = "<td>" + SoftTissueInjuries + "<input type='hidden' id='TtList[" + itemIndex + "]_SoftTissueInjuries' class='form-control js_SoftTissueInjuries'  name='TtList[" + itemIndex + "].SoftTissueInjuries' value='" + SoftTissueInjuries + "'></td>";
                        var markupFacialSkeletalInjuries = "<td>" + FacialSkeletalInjuries + "<input type='hidden' id='TtList[" + itemIndex + "]_FacialSkeletalInjuries' class='form-control js_FacialSkeletalInjuries'  name='TtList[" + itemIndex + "].FacialSkeletalInjuries' value='" + FacialSkeletalInjuries + "'></td>";
                        var markupLuxationInjuries = "<td>" + LuxationInjuries + "<input type='hidden' id='TtList[" + itemIndex + "]_LuxationInjuries' class='form-control js_LuxationInjuries'  name='TtList[" + itemIndex + "].LuxationInjuries' value='" + LuxationInjuries + "'></td>";
                        var markupTtVitalityTesting = "<td>" + TtVitalityTesting + "<input type='hidden' id='TtList[" + itemIndex + "]_TtVitalityTesting' class='form-control js_TtVitalityTesting'  name='TtList[" + itemIndex + "].TtVitalityTesting' value='" + TtVitalityTesting + "'></td>";
                        var markupTtRadiographicInterpretation = "<td>" + TtRadiographicInterpretation + "<input type='hidden' id='TtList[" + itemIndex + "]_TtRadiographicInterpretation' class='form-control js_TtRadiographicInterpretation'  name='TtList[" + itemIndex + "].TtRadiographicInterpretation' value='" + TtRadiographicInterpretation + "'></td>";
                        var markupTtImpressionPhotographsCast = "<td>" + TtImpressionPhotographsCast + "<input type='hidden' id='TtList[" + itemIndex + "]_TtImpressionPhotographsCast' class='form-control js_TtImpressionPhotographsCast'  name='TtList[" + itemIndex + "].TtImpressionPhotographsCast' value='" + TtImpressionPhotographsCast + "'></td>";
                        var markupTtRestoration = "<td>" + TtRestoration + "<input type='hidden' id='TtList[" + itemIndex + "]_TtRestoration' class='form-control js_TtRestoration'  name='TtList[" + itemIndex + "].TtRestoration' value='" + TtRestoration + "'></td>";
                        var markupSplinting = "<td>" + Splinting + "<input type='hidden' id='TtList[" + itemIndex + "]_Splinting' class='form-control js_Splinting'  name='TtList[" + itemIndex + "].Splinting' value='" + Splinting + "'></td>";
                        var markupCrownLengthening = "<td>" + CrownLengthening + "<input type='hidden' id='TtList[" + itemIndex + "]_CrownLengthening' class='form-control js_CrownLengthening'  name='TtList[" + itemIndex + "].CrownLengthening' value='" + CrownLengthening + "'></td>";
                        var markupSurgicalManagement = "<td>" + SurgicalManagement + "<input type='hidden' id='TtList[" + itemIndex + "]_SurgicalManagement' class='form-control js_SurgicalManagement'  name='TtList[" + itemIndex + "].SurgicalManagement' value='" + SurgicalManagement + "'></td>";
                        var markupOrthodonticIntrusion = "<td>" + OrthodonticIntrusion + "<input type='hidden' id='TtList[" + itemIndex + "]_OrthodonticIntrusion' class='form-control js_OrthodonticIntrusion'  name='TtList[" + itemIndex + "].OrthodonticIntrusion' value='" + OrthodonticIntrusion + "'></td>";
                        var markupTtReview1 = "<td>" + TtReview1 + "<input type='hidden' id='TtList[" + itemIndex + "]_TtReview1' class='form-control js_TtReview1'  name='TtList[" + itemIndex + "].TtReview1' value='" + TtReview1 + "'></td>";
                        var markupTtReview2 = "<td>" + TtReview2 + "<input type='hidden' id='TtList[" + itemIndex + "]_TtReview2' class='form-control js_TtReview2'  name='TtList[" + itemIndex + "].TtReview2' value='" + TtReview2 + "'></td>";
                        var markupTtReview3 = "<td>" + TtReview3 + "<input type='hidden' id='TtList[" + itemIndex + "]_TtReview3' class='form-control js_TtReview3'  name='TtList[" + itemIndex + "].TtReview3' value='" + TtReview3 + "'></td>";

                        var deleteButton = "<td> <button type='button' class='TraumatisedToothdelete btn btn-danger btn-xs' data-id='" + BleachingId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='TraumatisedToothEdit btn btn-primary btn-xs' data-id='" + BleachingId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                        var markupFinal = "<tr>" + Edit + deleteButton + markupTraumatisedToothId + ToothNumbersE + markupToothNumbersE + markupEllisType + markupSoftTissueInjuries + markupFacialSkeletalInjuries + markupLuxationInjuries + markupTtVitalityTesting + markupTtRadiographicInterpretation + markupTtImpressionPhotographsCast + markupTtRestoration + markupSplinting + markupCrownLengthening + markupSurgicalManagement + markupOrthodonticIntrusion + markupTtReview1 + markupTtReview2 + markupTtReview3 + "</tr>";
                        $("#tbTraumatisedDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });


    $('#tbTraumatisedDetails').on('click', ".TraumatisedToothdelete", function () {
        var url = '@Url.Action("DeleteTraumatisedToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { TraumatisedToothId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });



    $("#btnRootCanalAdd").click(function (e) {
        
        var itemIndex = $("#tbRootCanalDetails input.oHidden").length;
        e.preventDefault();
        if ($("#RootCanalId").val() != 0) {
            var RootCanalId = $("#RootCanalId").val();
        }
        else {
            var RootCanalId = 0;
        }
        var ToothNumbersF = $("#ToothNumbersF option:selected").text();
        if (ToothNumbersF != '') {
            var RcRadiographicInterpretation = $("#RcRadiographicInterpretation").val();
            var AccessOpeningCanal = $("#AccessOpeningCanal").val();
            var NoOfCanal = $("#NoOfCanal").val();
            var AdditionalCanals = $("#AdditionalCanals").val();
            var WorkingLengthDetermination = $("#WorkingLengthDetermination").val();
            var ShapingAndCleaning = $("#ShapingAndCleaning").val();
            var RotaryInstrumentation = $("#RotaryInstrumentation").val();
            var IrrigantUsed = $("#IrrigantUsed").val();
            var IntracanalMedicament = $("#IntracanalMedicament").val();
            var MasterConeSelection = $("#MasterConeSelection").val();
            var ObturationTechnique = $("#ObturationTechnique").val();
            var PostEndodonticRestoration = $("#PostEndodonticRestoration").val();
            var ProstheticRehabilitation = $("#ProstheticRehabilitation").val();


            var idArrayO = [];
            $('.oHidden').each(function () {
                idArrayO.push($(this).val());
            });

            if (jQuery.inArray(ToothNumbersF, idArrayO) != '-1') {
                alert("Already Added");
            }
            else {
                var markupRootCanalId = " <td><input name='RcList[" + itemIndex + "].RootCanalId' id='RcList[" + itemIndex + "]_RootCanalId' type='hidden' value=" + RootCanalId + ">"
                var markupToothNumbersF = "<input type='hidden' id='RcList[" + itemIndex + "]_ToothNumbersF' class='form-control oHidden'  name='RcList[" + itemIndex + "].ToothNumbersF' value='" + ToothNumbersF + "'>";
                var markupRcRadiographicInterpretation = "<td>" + RcRadiographicInterpretation + "<input type='hidden' id='RcList[" + itemIndex + "]_RcRadiographicInterpretation' class='form-control'  name='RcList[" + itemIndex + "].RcRadiographicInterpretation' value='" + RcRadiographicInterpretation + "'></td>";
                var markupAccessOpeningCanal = "<td>" + AccessOpeningCanal + "<input type='hidden' id='RcList[" + itemIndex + "]_AccessOpeningCanal' class='form-control'  name='RcList[" + itemIndex + "].AccessOpeningCanal' value='" + AccessOpeningCanal + "'></td>";
                var markupNoOfCanal = "<td>" + NoOfCanal + "<input type='hidden' id='RcList[" + itemIndex + "]_NoOfCanal' class='form-control'  name='RcList[" + itemIndex + "].NoOfCanal' value='" + NoOfCanal + "'></td>";
                var markupAdditionalCanals = "<td>" + AdditionalCanals + "<input type='hidden' id='RcList[" + itemIndex + "]_AdditionalCanals' class='form-control'  name='RcList[" + itemIndex + "].AdditionalCanals' value='" + AdditionalCanals + "'></td>";
                var markupWorkingLengthDetermination = "<td>" + WorkingLengthDetermination + "<input type='hidden' id='RcList[" + itemIndex + "]_WorkingLengthDetermination' class='form-control'  name='RcList[" + itemIndex + "].WorkingLengthDetermination' value='" + WorkingLengthDetermination + "'></td>";
                var markupShapingAndCleaning = "<td>" + ShapingAndCleaning + "<input type='hidden' id='RcList[" + itemIndex + "]_ShapingAndCleaning' class='form-control'  name='RcList[" + itemIndex + "].ShapingAndCleaning' value='" + ShapingAndCleaning + "'></td>";
                var markupRotaryInstrumentation = "<td>" + RotaryInstrumentation + "<input type='hidden' id='RcList[" + itemIndex + "]_RotaryInstrumentation' class='form-control'  name='RcList[" + itemIndex + "].RotaryInstrumentation' value='" + RotaryInstrumentation + "'></td>";
                var markupIrrigantUsed = "<td>" + IrrigantUsed + "<input type='hidden' id='RcList[" + itemIndex + "]_IrrigantUsed' class='form-control'  name='RcList[" + itemIndex + "].IrrigantUsed' value='" + IrrigantUsed + "'></td>";
                var markupIntracanalMedicament = "<td>" + IntracanalMedicament + "<input type='hidden' id='RcList[" + itemIndex + "]_IntracanalMedicament' class='form-control'  name='RcList[" + itemIndex + "].IntracanalMedicament' value='" + IntracanalMedicament + "'></td>";
                var markupMasterConeSelection = "<td>" + MasterConeSelection + "<input type='hidden' id='RcList[" + itemIndex + "]_MasterConeSelection' class='form-control'  name='RcList[" + itemIndex + "].MasterConeSelection' value='" + MasterConeSelection + "'></td>";
                var markupObturationTechnique = "<td>" + ObturationTechnique + "<input type='hidden' id='RcList[" + itemIndex + "]_ObturationTechnique' class='form-control'  name='RcList[" + itemIndex + "].ObturationTechnique' value='" + ObturationTechnique + "'></td>";
                var markupPostEndodonticRestoration = "<td>" + PostEndodonticRestoration + "<input type='hidden' id='RcList[" + itemIndex + "]_PostEndodonticRestoration' class='form-control'  name='RcList[" + itemIndex + "].PostEndodonticRestoration' value='" + PostEndodonticRestoration + "'></td>";
                var markupProstheticRehabilitation = "<td>" + ProstheticRehabilitation + "<input type='hidden' id='RcList[" + itemIndex + "]_ProstheticRehabilitation' class='form-control'  name='RcList[" + itemIndex + "].ProstheticRehabilitation' value='" + ProstheticRehabilitation + "'></td>";


                var deleteButton = "<td> <button type='button' class='RootCanalToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                var Edit = "<td> <button type='button' class='RootCanalToothEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                var markupFinal = "<tr>" + Edit + deleteButton + markupRootCanalId + ToothNumbersF + markupToothNumbersF + markupRcRadiographicInterpretation + markupAccessOpeningCanal + markupNoOfCanal + markupAdditionalCanals + markupWorkingLengthDetermination + markupShapingAndCleaning + markupRotaryInstrumentation + markupIrrigantUsed + markupIntracanalMedicament + markupMasterConeSelection + markupObturationTechnique + markupPostEndodonticRestoration + markupProstheticRehabilitation + "</tr>";
                $("#tbRootCanalDetails tbody").append(markupFinal);
                $("#ToothNumbersF").val("");
                $("#RcRadiographicInterpretation").val("");
                $("#AccessOpeningCanal").val("");
                $("#NoOfCanal").val("");
                $("#AdditionalCanals").val("");
                $("#WorkingLengthDetermination").val("");
                $("#ShapingAndCleaning").val("");
                $("#RotaryInstrumentation").val("");
                $("#IrrigantUsed").val("");
                $("#IntracanalMedicament").val("");
                $("#MasterConeSelection").val("");
                $("#ObturationTechnique").val("");
                $("#PostEndodonticRestoration").val("");
                $("#ProstheticRehabilitation").val("");

            }
        }
        else {
            alert("Please select a tooth!");
        }
    }
                   );


    $('#tbRootCanalDetails').on('click', ".RootCanalToothEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');   // Find the row
            var $tds = row.find("td");
            var varRootCanalId = Id;
            var varToothNumber = $tds.closest('tr').find('.oHidden').val();
            var varRcRadiographicInterpretation = $tds.closest('tr').find('.js_RcRadiographicInterpretation').val();
            var varAccessOpeningCanal = $tds.closest('tr').find('.js_AccessOpeningCanal').val();
            var varNoOfCanal = $tds.closest('tr').find('.js_NoOfCanal').val();
            var varAdditionalCanals = $tds.closest('tr').find('.js_AdditionalCanals').val();
            var varWorkingLengthDetermination = $tds.closest('tr').find('.js_WorkingLengthDetermination').val();
            var varShapingAndCleaning = $tds.closest('tr').find('.js_ShapingAndCleaning').val();
            var varRotaryInstrumentation = $tds.closest('tr').find('.js_RotaryInstrumentation').val();
            var varIrrigantUsed = $tds.closest('tr').find('.js_IrrigantUsed').val();
            var varIntracanalMedicament = $tds.closest('tr').find('.js_IntracanalMedicament').val();
            var varMasterConeSelection = $tds.closest('tr').find('.js_MasterConeSelection').val();
            var varObturationTechnique = $tds.closest('tr').find('.js_ObturationTechnique').val();
            var varPostEndodonticRestoration = $tds.closest('tr').find('.js_PostEndodonticRestoration').val();
            var varProstheticRehabilitation = $tds.closest('tr').find('.js_ProstheticRehabilitation').val();


            $("#RootCanalId").val(varRootCanalId);
            $("#ToothNumbersF").val(varToothNumber);
            $("#RcRadiographicInterpretation").val(varRcRadiographicInterpretation);
            $("#AccessOpeningCanal").val(varAccessOpeningCanal);
            $("#NoOfCanal").val(varNoOfCanal);
            $("#AdditionalCanals").val(varAdditionalCanals);
            $("#WorkingLengthDetermination").val(varWorkingLengthDetermination);
            $("#ShapingAndCleaning").val(varShapingAndCleaning);
            $("#RotaryInstrumentation").val(varRotaryInstrumentation);
            $("#IrrigantUsed").val(varIrrigantUsed);
            $("#IntracanalMedicament").val(varIntracanalMedicament);
            $("#MasterConeSelection").val(varMasterConeSelection);
            $("#ObturationTechnique").val(varObturationTechnique);
            $("#PostEndodonticRestoration").val(varPostEndodonticRestoration);
            $("#ProstheticRehabilitation").val(varProstheticRehabilitation);

            row.remove();

            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("RootCanalDetailsById", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    //$("#tbBleachingDetails tbody").empty();
                    $('#tbRootCanalDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        //$("#RestorativeProId").val(item.RestorativeProId);
                        var itemIndex = $("#tbRootCanalDetails input.oHidden").length;
                        var RootCanalId = item.RootCanalId;
                        var ToothNumbersF = item.ToothNumber;

                        var RcRadiographicInterpretation = item.RcRadiographicInterpretation;
                        var AccessOpeningCanal = item.AccessOpeningCanal;
                        var NoOfCanal = item.NoOfCanal;
                        var AdditionalCanals = item.AdditionalCanals;
                        var WorkingLengthDetermination = item.WorkingLengthDetermination;
                        var ShapingAndCleaning = item.ShapingAndCleaning;
                        var RotaryInstrumentation = item.RotaryInstrumentation;
                        var IrrigantUsed = item.IrrigantUsed;
                        var IntracanalMedicament = item.IntracanalMedicament;
                        var MasterConeSelection = item.MasterConeSelection;
                        var ObturationTechnique = item.ObturationTechnique;
                        var PostEndodonticRestoration = item.PostEndodonticRestoration;
                        var ProstheticRehabilitation = item.ProstheticRehabilitation;





                        var markupRootCanalId = " <td><input name='RcList[" + itemIndex + "].RootCanalId' id='RcList[" + itemIndex + "]_RootCanalId' type='hidden' value=" + RootCanalId + ">"
                        var markupToothNumbersF = "<input type='hidden' id='RcList[" + itemIndex + "]_ToothNumbersF' class='form-control oHidden'  name='RcList[" + itemIndex + "].ToothNumbersF' value='" + ToothNumbersF + "'>";
                        var markupRcRadiographicInterpretation = "<td>" + RcRadiographicInterpretation + "<input type='hidden' id='RcList[" + itemIndex + "]_RcRadiographicInterpretation' class='form-control'  name='RcList[" + itemIndex + "].RcRadiographicInterpretation' value='" + RcRadiographicInterpretation + "'></td>";
                        var markupAccessOpeningCanal = "<td>" + AccessOpeningCanal + "<input type='hidden' id='RcList[" + itemIndex + "]_AccessOpeningCanal' class='form-control'  name='RcList[" + itemIndex + "].AccessOpeningCanal' value='" + AccessOpeningCanal + "'></td>";
                        var markupNoOfCanal = "<td>" + NoOfCanal + "<input type='hidden' id='RcList[" + itemIndex + "]_NoOfCanal' class='form-control'  name='RcList[" + itemIndex + "].NoOfCanal' value='" + NoOfCanal + "'></td>";
                        var markupAdditionalCanals = "<td>" + AdditionalCanals + "<input type='hidden' id='RcList[" + itemIndex + "]_AdditionalCanals' class='form-control'  name='RcList[" + itemIndex + "].AdditionalCanals' value='" + AdditionalCanals + "'></td>";
                        var markupWorkingLengthDetermination = "<td>" + WorkingLengthDetermination + "<input type='hidden' id='RcList[" + itemIndex + "]_WorkingLengthDetermination' class='form-control'  name='RcList[" + itemIndex + "].WorkingLengthDetermination' value='" + WorkingLengthDetermination + "'></td>";
                        var markupShapingAndCleaning = "<td>" + ShapingAndCleaning + "<input type='hidden' id='RcList[" + itemIndex + "]_ShapingAndCleaning' class='form-control'  name='RcList[" + itemIndex + "].ShapingAndCleaning' value='" + ShapingAndCleaning + "'></td>";
                        var markupRotaryInstrumentation = "<td>" + RotaryInstrumentation + "<input type='hidden' id='RcList[" + itemIndex + "]_RotaryInstrumentation' class='form-control'  name='RcList[" + itemIndex + "].RotaryInstrumentation' value='" + RotaryInstrumentation + "'></td>";
                        var markupIrrigantUsed = "<td>" + IrrigantUsed + "<input type='hidden' id='RcList[" + itemIndex + "]_IrrigantUsed' class='form-control'  name='RcList[" + itemIndex + "].IrrigantUsed' value='" + IrrigantUsed + "'></td>";
                        var markupIntracanalMedicament = "<td>" + IntracanalMedicament + "<input type='hidden' id='RcList[" + itemIndex + "]_IntracanalMedicament' class='form-control'  name='RcList[" + itemIndex + "].IntracanalMedicament' value='" + IntracanalMedicament + "'></td>";
                        var markupMasterConeSelection = "<td>" + MasterConeSelection + "<input type='hidden' id='RcList[" + itemIndex + "]_MasterConeSelection' class='form-control'  name='RcList[" + itemIndex + "].MasterConeSelection' value='" + MasterConeSelection + "'></td>";
                        var markupObturationTechnique = "<td>" + ObturationTechnique + "<input type='hidden' id='RcList[" + itemIndex + "]_ObturationTechnique' class='form-control'  name='RcList[" + itemIndex + "].ObturationTechnique' value='" + ObturationTechnique + "'></td>";
                        var markupPostEndodonticRestoration = "<td>" + PostEndodonticRestoration + "<input type='hidden' id='RcList[" + itemIndex + "]_PostEndodonticRestoration' class='form-control'  name='RcList[" + itemIndex + "].PostEndodonticRestoration' value='" + PostEndodonticRestoration + "'></td>";
                        var markupProstheticRehabilitation = "<td>" + ProstheticRehabilitation + "<input type='hidden' id='RcList[" + itemIndex + "]_ProstheticRehabilitation' class='form-control'  name='RcList[" + itemIndex + "].ProstheticRehabilitation' value='" + ProstheticRehabilitation + "'></td>";


                        var deleteButton = "<td> <button type='button' class='RootCanalToothdelete btn btn-danger btn-xs' data-id='" + RootCanalId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='RootCanalToothEdit btn btn-primary btn-xs' data-id='" + RootCanalId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                        var markupFinal = "<tr>" + Edit + deleteButton + markupRootCanalId + ToothNumbersF + markupToothNumbersF + markupRcRadiographicInterpretation + markupAccessOpeningCanal + markupNoOfCanal + markupAdditionalCanals + markupWorkingLengthDetermination + markupShapingAndCleaning + markupRotaryInstrumentation + markupIrrigantUsed + markupIntracanalMedicament + markupMasterConeSelection + markupObturationTechnique + markupPostEndodonticRestoration + markupProstheticRehabilitation + "</tr>";
                        $("#tbRootCanalDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });


    $('#tbRootCanalDetails').on('click', ".RootCanalToothdelete", function () {
        var url = '@Url.Action("DeleteRootCanalToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { RootCanalId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });
    ///////////////



    $("#btnReRootCanalAdd").click(function (e) {
        
        var itemIndex = $("#tbReRootCanalDetails input.pHidden").length;
        e.preventDefault();
        if ($("#ReRootCanalId").val() != 0) {
            var ReRootCanalId = $("#ReRootCanalId").val();
        }
        else {
            var ReRootCanalId = 0;
        }
        var ToothNumbersG = $("#ToothNumbersG option:selected").text();
        var ReRadiographicInterpretation = $("#ReRadiographicInterpretation").val();
        var GpRemovalCanalLocation = $("#GpRemovalCanalLocation").val();
        var ReNoOfCanal = $("#ReNoOfCanal").val();
        var ReAdditionalCanals = $("#ReAdditionalCanals").val();
        var ReWorkingLengthDetermination = $("#ReWorkingLengthDetermination").val();
        var ReShapingAndCleaning = $("#ReShapingAndCleaning").val();
        var ReRotaryInstrumentation = $("#ReRotaryInstrumentation").val();
        var ReIrrigantUsed = $("#ReIrrigantUsed").val();
        var ReIntracanalMedicament = $("#ReIntracanalMedicament").val();
        var ReMasterConeSelection = $("#ReMasterConeSelection").val();
        var ReObturationTechnique = $("#ReObturationTechnique").val();
        var RePostEndodonticRestoration = $("#RePostEndodonticRestoration").val();
        var ReProstheticRehabilitation = $("#ReProstheticRehabilitation").val();


        var idArrayP = [];
        $('.pHidden').each(function () {
            idArrayP.push($(this).val());
        });

        if (jQuery.inArray(ToothNumbersG, idArrayP) != '-1') {
            alert("Already Added");
        }
        else {
            var markupReRootCanalId = " <td><input name='ReList[" + itemIndex + "].ReRootCanalId' id='ReList[" + itemIndex + "]_ReRootCanalId' type='hidden' value=" + ReRootCanalId + ">"
            var markupToothNumbersG = "<input type='hidden' id='ReList[" + itemIndex + "]_ToothNumbersG' class='form-control pHidden'  name='ReList[" + itemIndex + "].ToothNumbersG' value='" + ToothNumbersG + "'>";
            var markupReRadiographicInterpretation = "<td>" + ReRadiographicInterpretation + "<input type='hidden' id='ReList[" + itemIndex + "]_ReRadiographicInterpretation' class='form-control'  name='ReList[" + itemIndex + "].ReRadiographicInterpretation' value='" + ReRadiographicInterpretation + "'></td>";
            var markupGpRemovalCanalLocation = "<td>" + GpRemovalCanalLocation + "<input type='hidden' id='ReList[" + itemIndex + "]_GpRemovalCanalLocation' class='form-control'  name='ReList[" + itemIndex + "].GpRemovalCanalLocation' value='" + GpRemovalCanalLocation + "'></td>";
            var markupReNoOfCanal = "<td>" + ReNoOfCanal + "<input type='hidden' id='ReList[" + itemIndex + "]_ReNoOfCanal' class='form-control'  name='ReList[" + itemIndex + "].ReNoOfCanal' value='" + ReNoOfCanal + "'></td>";
            var markupReAdditionalCanals = "<td>" + ReAdditionalCanals + "<input type='hidden' id='ReList[" + itemIndex + "]_ReAdditionalCanals' class='form-control'  name='ReList[" + itemIndex + "].ReAdditionalCanals' value='" + ReAdditionalCanals + "'></td>";
            var markupReWorkingLengthDetermination = "<td>" + ReWorkingLengthDetermination + "<input type='hidden' id='ReList[" + itemIndex + "]_ReWorkingLengthDetermination' class='form-control'  name='ReList[" + itemIndex + "].ReWorkingLengthDetermination' value='" + ReWorkingLengthDetermination + "'></td>";
            var markupReShapingAndCleaning = "<td>" + ReShapingAndCleaning + "<input type='hidden' id='ReList[" + itemIndex + "]_ReShapingAndCleaning' class='form-control'  name='ReList[" + itemIndex + "].ReShapingAndCleaning' value='" + ReShapingAndCleaning + "'></td>";
            var markupReRotaryInstrumentation = "<td>" + ReRotaryInstrumentation + "<input type='hidden' id='ReList[" + itemIndex + "]_ReRotaryInstrumentation' class='form-control'  name='ReList[" + itemIndex + "].ReRotaryInstrumentation' value='" + ReRotaryInstrumentation + "'></td>";
            var markupReIrrigantUsed = "<td>" + ReIrrigantUsed + "<input type='hidden' id='ReList[" + itemIndex + "]_ReIrrigantUsed' class='form-control'  name='ReList[" + itemIndex + "].ReIrrigantUsed' value='" + ReIrrigantUsed + "'></td>";
            var markupReIntracanalMedicament = "<td>" + ReIntracanalMedicament + "<input type='hidden' id='ReList[" + itemIndex + "]_ReIntracanalMedicament' class='form-control'  name='ReList[" + itemIndex + "].ReIntracanalMedicament' value='" + ReIntracanalMedicament + "'></td>";
            var markupReMasterConeSelection = "<td>" + ReMasterConeSelection + "<input type='hidden' id='ReList[" + itemIndex + "]_ReMasterConeSelection' class='form-control'  name='ReList[" + itemIndex + "].ReMasterConeSelection' value='" + ReMasterConeSelection + "'></td>";
            var markupReObturationTechnique = "<td>" + ReObturationTechnique + "<input type='hidden' id='ReList[" + itemIndex + "]_ReObturationTechnique' class='form-control'  name='ReList[" + itemIndex + "].ReObturationTechnique' value='" + ReObturationTechnique + "'></td>";
            var markupRePostEndodonticRestoration = "<td>" + RePostEndodonticRestoration + "<input type='hidden' id='ReList[" + itemIndex + "]_RePostEndodonticRestoration' class='form-control'  name='ReList[" + itemIndex + "].RePostEndodonticRestoration' value='" + RePostEndodonticRestoration + "'></td>";
            var markupReProstheticRehabilitation = "<td>" + ReProstheticRehabilitation + "<input type='hidden' id='ReList[" + itemIndex + "]_ReProstheticRehabilitation' class='form-control'  name='ReList[" + itemIndex + "].ReProstheticRehabilitation' value='" + ReProstheticRehabilitation + "'></td>";


            var deleteButton = "<td> <button type='button' class='ReRootCanalToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
            var Edit = "<td> <button type='button' class='ReRootCanalEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
            var markupFinal = "<tr>" + Edit + deleteButton + markupReRootCanalId + ToothNumbersG + markupToothNumbersG + markupReRadiographicInterpretation + markupGpRemovalCanalLocation + markupReNoOfCanal + markupReAdditionalCanals + markupReWorkingLengthDetermination + markupReShapingAndCleaning + markupReRotaryInstrumentation + markupReIrrigantUsed + markupReIntracanalMedicament + markupReMasterConeSelection + markupReObturationTechnique + markupRePostEndodonticRestoration + markupReProstheticRehabilitation + "</tr>";
            $("#tbReRootCanalDetails tbody").append(markupFinal);
            //$("#ToothNumbersB").val("");
        }
    }
        );

    $('#tbReRootCanalDetails').on('click', ".ReRootCanalEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');
            var $tds = row.find("td");

            var varReRootCanalId = Id;
            var varToothNumber = $tds.closest('tr').find('.pHidden').val();
            var varReRadiographicInterpretation = $tds.closest('tr').find('.js_ReRadiographicInterpretation').val();
            var varGpRemovalCanalLocation = $tds.closest('tr').find('.js_GpRemovalCanalLocation').val();
            var varReNoOfCanal = $tds.closest('tr').find('.js_ReNoOfCanal').val();
            var varReAdditionalCanals = $tds.closest('tr').find('.js_ReAdditionalCanals').val();
            var varReWorkingLengthDetermination = $tds.closest('tr').find('.js_ReWorkingLengthDetermination').val();
            var varReShapingAndCleaning = $tds.closest('tr').find('.js_ReShapingAndCleaning').val();
            var varReRotaryInstrumentation = $tds.closest('tr').find('.js_ReRotaryInstrumentation').val();
            var varReIrrigantUsed = $tds.closest('tr').find('.js_ReIrrigantUsed').val();
            var varReIntracanalMedicament = $tds.closest('tr').find('.js_ReIntracanalMedicament').val();
            var varReMasterConeSelection = $tds.closest('tr').find('.js_ReMasterConeSelection').val();
            var varReObturationTechnique = $tds.closest('tr').find('.js_ReObturationTechnique').val();
            var varRePostEndodonticRestoration = $tds.closest('tr').find('.js_RePostEndodonticRestoration').val();
            var varReProstheticRehabilitation = $tds.closest('tr').find('.js_ReProstheticRehabilitation').val();


            $("#ReRootCanalId").val(varReRootCanalId);
            $("#ToothNumbersG").val(varToothNumber);
            $("#ReRadiographicInterpretation").val(varReRadiographicInterpretation);
            $("#GpRemovalCanalLocation").val(varGpRemovalCanalLocation);
            $("#ReNoOfCanal").val(varReNoOfCanal);
            $("#ReAdditionalCanals").val(varReAdditionalCanals);
            $("#ReWorkingLengthDetermination").val(varReWorkingLengthDetermination);
            $("#ReShapingAndCleaning").val(varReShapingAndCleaning);
            $("#ReRotaryInstrumentation").val(varReRotaryInstrumentation);
            $("#ReIrrigantUsed").val(varReIrrigantUsed);
            $("#ReIntracanalMedicament").val(varReIntracanalMedicament);
            $("#ReMasterConeSelection").val(varReMasterConeSelection);
            $("#ReObturationTechnique").val(varReObturationTechnique);
            $("#RePostEndodonticRestoration").val(varRePostEndodonticRestoration);
            $("#ReProstheticRehabilitation").val(varReProstheticRehabilitation);

            row.remove();

            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("ReRctDetails", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $('#tbReRootCanalDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        var itemIndex = $("#tbReRootCanalDetails input.pHidden").length;
                        var ReRootCanalId = item.ReRootCanalId;
                        var ToothNumbersG = item.ToothNumber;

                        var ReRadiographicInterpretation = item.ReRadiographicInterpretation;
                        var GpRemovalCanalLocation = item.GpRemovalCanalLocation;
                        var ReNoOfCanal = item.ReNoOfCanal;
                        var ReAdditionalCanals = item.ReAdditionalCanals;
                        var ReWorkingLengthDetermination = item.ReWorkingLengthDetermination;
                        var ReShapingAndCleaning = item.ReShapingAndCleaning;
                        var ReRotaryInstrumentation = item.ReRotaryInstrumentation;
                        var ReIrrigantUsed = item.ReIrrigantUsed;
                        var ReIntracanalMedicament = item.ReIntracanalMedicament;
                        var ReMasterConeSelection = item.ReMasterConeSelection;
                        var ReObturationTechnique = item.ReObturationTechnique;
                        var RePostEndodonticRestoration = item.RePostEndodonticRestoration;
                        var ReProstheticRehabilitation = item.ReProstheticRehabilitation;

                        var markupReRootCanalId = " <td><input name='ReList[" + itemIndex + "].ReRootCanalId' id='ReList[" + itemIndex + "]_ReRootCanalId' type='hidden' value=" + ReRootCanalId + ">"
                        var markupToothNumbersG = "<input type='hidden' id='ReList[" + itemIndex + "]_ToothNumbersG' class='form-control pHidden'  name='ReList[" + itemIndex + "].ToothNumbersG' value='" + ToothNumbersG + "'>";
                        var markupReRadiographicInterpretation = "<td>" + ReRadiographicInterpretation + "<input type='hidden' id='ReList[" + itemIndex + "]_ReRadiographicInterpretation' class='form-control'  name='ReList[" + itemIndex + "].ReRadiographicInterpretation' value='" + ReRadiographicInterpretation + "'></td>";
                        var markupGpRemovalCanalLocation = "<td>" + GpRemovalCanalLocation + "<input type='hidden' id='ReList[" + itemIndex + "]_GpRemovalCanalLocation' class='form-control'  name='ReList[" + itemIndex + "].GpRemovalCanalLocation' value='" + GpRemovalCanalLocation + "'></td>";
                        var markupReNoOfCanal = "<td>" + ReNoOfCanal + "<input type='hidden' id='ReList[" + itemIndex + "]_ReNoOfCanal' class='form-control'  name='ReList[" + itemIndex + "].ReNoOfCanal' value='" + ReNoOfCanal + "'></td>";
                        var markupReAdditionalCanals = "<td>" + ReAdditionalCanals + "<input type='hidden' id='ReList[" + itemIndex + "]_ReAdditionalCanals' class='form-control'  name='ReList[" + itemIndex + "].ReAdditionalCanals' value='" + ReAdditionalCanals + "'></td>";
                        var markupReWorkingLengthDetermination = "<td>" + ReWorkingLengthDetermination + "<input type='hidden' id='ReList[" + itemIndex + "]_ReWorkingLengthDetermination' class='form-control'  name='ReList[" + itemIndex + "].ReWorkingLengthDetermination' value='" + ReWorkingLengthDetermination + "'></td>";
                        var markupReShapingAndCleaning = "<td>" + ReShapingAndCleaning + "<input type='hidden' id='ReList[" + itemIndex + "]_ReShapingAndCleaning' class='form-control'  name='ReList[" + itemIndex + "].ReShapingAndCleaning' value='" + ReShapingAndCleaning + "'></td>";
                        var markupReRotaryInstrumentation = "<td>" + ReRotaryInstrumentation + "<input type='hidden' id='ReList[" + itemIndex + "]_ReRotaryInstrumentation' class='form-control'  name='ReList[" + itemIndex + "].ReRotaryInstrumentation' value='" + ReRotaryInstrumentation + "'></td>";
                        var markupReIrrigantUsed = "<td>" + ReIrrigantUsed + "<input type='hidden' id='ReList[" + itemIndex + "]_ReIrrigantUsed' class='form-control'  name='ReList[" + itemIndex + "].ReIrrigantUsed' value='" + ReIrrigantUsed + "'></td>";
                        var markupReIntracanalMedicament = "<td>" + ReIntracanalMedicament + "<input type='hidden' id='ReList[" + itemIndex + "]_ReIntracanalMedicament' class='form-control'  name='ReList[" + itemIndex + "].ReIntracanalMedicament' value='" + ReIntracanalMedicament + "'></td>";
                        var markupReMasterConeSelection = "<td>" + ReMasterConeSelection + "<input type='hidden' id='ReList[" + itemIndex + "]_ReMasterConeSelection' class='form-control'  name='ReList[" + itemIndex + "].ReMasterConeSelection' value='" + ReMasterConeSelection + "'></td>";
                        var markupReObturationTechnique = "<td>" + ReObturationTechnique + "<input type='hidden' id='ReList[" + itemIndex + "]_ReObturationTechnique' class='form-control'  name='ReList[" + itemIndex + "].ReObturationTechnique' value='" + ReObturationTechnique + "'></td>";
                        var markupRePostEndodonticRestoration = "<td>" + RePostEndodonticRestoration + "<input type='hidden' id='ReList[" + itemIndex + "]_RePostEndodonticRestoration' class='form-control'  name='ReList[" + itemIndex + "].RePostEndodonticRestoration' value='" + RePostEndodonticRestoration + "'></td>";
                        var markupReProstheticRehabilitation = "<td>" + ReProstheticRehabilitation + "<input type='hidden' id='ReList[" + itemIndex + "]_ReProstheticRehabilitation' class='form-control'  name='ReList[" + itemIndex + "].ReProstheticRehabilitation' value='" + ReProstheticRehabilitation + "'></td>";


                        var deleteButton = "<td> <button type='button' class='ReRootCanalToothdelete btn btn-danger btn-xs' data-id='" + ReRootCanalId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='ReRootCanalEdit btn btn-primary btn-xs' data-id='" + ReRootCanalId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                        var markupFinal = "<tr>" + Edit + deleteButton + markupReRootCanalId + ToothNumbersG + markupToothNumbersG + markupReRadiographicInterpretation + markupGpRemovalCanalLocation + markupReNoOfCanal + markupReAdditionalCanals + markupReWorkingLengthDetermination + markupReShapingAndCleaning + markupReRotaryInstrumentation + markupReIrrigantUsed + markupReIntracanalMedicament + markupReMasterConeSelection + markupReObturationTechnique + markupRePostEndodonticRestoration + markupReProstheticRehabilitation + "</tr>";
                        $("#tbReRootCanalDetails tbody").append(markupFinal);
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
    });

    $('#tbReRootCanalDetails').on('click', ".ReRootCanalToothdelete", function () {
        var url = '@Url.Action("DeleteReRootCanalToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { ReRootCanalId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });

    $("#btnIncRootFormAdd").click(function (e) {
        
        var itemIndex = $("#tbIncRootFormDetails input.qHidden").length;
        e.preventDefault();
        if ($("#IncompleteRootId").val() != 0) {
            var IncompleteRootId = $("#IncompleteRootId").val();
        }
        else {
            var IncompleteRootId = 0;
        }

        var ToothNumbersH = $("#ToothNumbersH option:selected").text();
        var IncVitality = $("#IncVitality").val();
        var IncPhotographCast = $("#IncPhotographCast").val();
        var IncRadiographInterpretation = $("#IncRadiographInterpretation").val();
        var IncTreatmentProcedure = $("#IncTreatmentProcedure").val();
        var IncMaterialChoice = $("#IncMaterialChoice").val();
        var IncSiteOfManagement = $("#IncSiteOfManagement").val();
        var IncOtherRestorativePro = $("#IncOtherRestorativePro").val();
        var IncReview1 = $("#IncReview1").val();
        var IncReview2 = $("#IncReview2").val();
        var IncReview3 = $("#IncReview3").val();

        var idArrayR = [];
        $('.qHidden').each(function () {
            idArrayR.push($(this).val());
        });

        if (jQuery.inArray(ToothNumbersH, idArrayR) != '-1') {
            alert("Already Added");
        }
        else {
            var markupIncompleteRootId = " <td><input name='RfList[" + itemIndex + "].IncompleteRootId' id='RfList[" + itemIndex + "]_IncompleteRootId' type='hidden' value=" + IncompleteRootId + ">"
            var markupToothNumbersH = "<input type='hidden' id='RfList[" + itemIndex + "]_ToothNumbersH' class='form-control qHidden'  name='RfList[" + itemIndex + "].ToothNumbersH' value='" + ToothNumbersH + "'>";
            var markupIncVitality = "<td>" + IncVitality + "<input type='hidden' id='RfList[" + itemIndex + "]_IncVitality' class='form-control'  name='RfList[" + itemIndex + "].IncVitality' value='" + IncVitality + "'></td>";
            var markupIncPhotographCast = "<td>" + IncPhotographCast + "<input type='hidden' id='RfList[" + itemIndex + "]_IncPhotographCast' class='form-control'  name='RfList[" + itemIndex + "].IncPhotographCast' value='" + IncPhotographCast + "'></td>";
            var markupIncRadiographInterpretation = "<td>" + IncRadiographInterpretation + "<input type='hidden' id='RfList[" + itemIndex + "]_IncRadiographInterpretation' class='form-control'  name='RfList[" + itemIndex + "].IncRadiographInterpretation' value='" + IncRadiographInterpretation + "'></td>";
            var markupIncTreatmentProcedure = "<td>" + IncTreatmentProcedure + "<input type='hidden' id='RfList[" + itemIndex + "]_IncTreatmentProcedure' class='form-control'  name='RfList[" + itemIndex + "].IncTreatmentProcedure' value='" + IncTreatmentProcedure + "'></td>";
            var markupIncMaterialChoice = "<td>" + IncMaterialChoice + "<input type='hidden' id='RfList[" + itemIndex + "]_IncMaterialChoice' class='form-control'  name='RfList[" + itemIndex + "].IncMaterialChoice' value='" + IncMaterialChoice + "'></td>";
            var markupIncSiteOfManagement = "<td>" + IncSiteOfManagement + "<input type='hidden' id='RfList[" + itemIndex + "]_IncSiteOfManagement' class='form-control'  name='RfList[" + itemIndex + "].IncSiteOfManagement' value='" + IncSiteOfManagement + "'></td>";
            var markupIncOtherRestorativePro = "<td>" + IncOtherRestorativePro + "<input type='hidden' id='RfList[" + itemIndex + "]_IncOtherRestorativePro' class='form-control'  name='RfList[" + itemIndex + "].IncOtherRestorativePro' value='" + IncOtherRestorativePro + "'></td>";
            var markupIncReview1 = "<td>" + IncReview1 + "<input type='hidden' id='RfList[" + itemIndex + "]_IncReview1' class='form-control'  name='RfList[" + itemIndex + "].IncReview1' value='" + IncReview1 + "'></td>";
            var markupIncReview2 = "<td>" + IncReview2 + "<input type='hidden' id='RfList[" + itemIndex + "]_IncReview2' class='form-control'  name='RfList[" + itemIndex + "].IncReview2' value='" + IncReview2 + "'></td>";
            var markupIncReview3 = "<td>" + IncReview3 + "<input type='hidden' id='RfList[" + itemIndex + "]_IncReview3' class='form-control'  name='RfList[" + itemIndex + "].IncReview3' value='" + IncReview3 + "'></td>";



            var deleteButton = "<td> <button type='button' class='IncRootFormToothdelete btn btn-danger btn-xs' data-id='0'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
            var Edit = "<td> <button type='button' class='IncRootFormEdit btn btn-primary btn-xs' data-id='0'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
            var markupFinal = "<tr>" + Edit + deleteButton + markupIncompleteRootId + ToothNumbersH + markupToothNumbersH + markupIncVitality + markupIncPhotographCast + markupIncRadiographInterpretation + markupIncTreatmentProcedure + markupIncMaterialChoice + markupIncSiteOfManagement + markupIncOtherRestorativePro + markupIncReview1 + markupIncReview2 + markupIncReview3 + "</tr>";
            $("#tbIncRootFormDetails tbody").append(markupFinal);
            $("#IncVitality").val("");
            $("#IncPhotographCast").val("");
            $("#IncRadiographInterpretation").val("");
            $("#IncTreatmentProcedure").val("");
            $("#IncMaterialChoice").val("");
            $("#IncSiteOfManagement").val("");
            $("#IncOtherRestorativePro").val("");
            $("#IncReview1").val("");
            $("#IncReview2").val("");
            $("#IncReview3").val("");
        }
    }
);
    $('#tbIncRootFormDetails').on('click', ".IncRootFormToothdelete", function () {
        var url = '@Url.Action("DeleteIncRootFormToothDet", "CONS")';
        
        var Con = confirm("Do you want to delete ?");
        if (Con == true) {
            var id = $(this).data('id');
            var row = $(this).closest('tr');
            if (id == 0) {
                row.remove();
            }
            else {
                $.post(url, { IncompleteRootId: id }, function (response) {
                    if (response) {
                        row.remove(); // OK, so remove the row
                    } else {
                        // Oops - display and error message?
                    }
                });
            }
        }
    });


    $('#tbIncRootFormDetails').on('click', ".IncRootFormEdit", function () {
        
        var Con = confirm("Do you want to Edit ?");
        if (Con == true) {
            var Id = $(this).data('id');
            var row = $(this).closest('tr');
            var $tds = row.find("td");

            var varIncompleteRootId = Id;
            var varToothNumber = $tds.closest('tr').find('.qHidden').val();
            var varIncVitality = $tds.closest('tr').find('.js_IncVitality').val();
            var varIncPhotographCast = $tds.closest('tr').find('.js_IncPhotographCast').val();
            var varIncRadiographInterpretation = $tds.closest('tr').find('.js_IncRadiographInterpretation').val();
            var varIncTreatmentProcedure = $tds.closest('tr').find('.js_IncTreatmentProcedure').val();
            var varIncMaterialChoice = $tds.closest('tr').find('.js_IncMaterialChoice').val();
            var varIncSiteOfManagement = $tds.closest('tr').find('.js_IncSiteOfManagement').val();
            var varIncOtherRestorativePro = $tds.closest('tr').find('.js_IncOtherRestorativePro').val();
            var varIncReview1 = $tds.closest('tr').find('.js_IncReview1').val();
            var varIncReview2 = $tds.closest('tr').find('.js_IncReview2').val();
            var varIncReview3 = $tds.closest('tr').find('.js_IncReview3').val();

            $("#IncompleteRootId").val(varIncompleteRootId);
            $("#ToothNumbersH").val(varToothNumber);
            $("#IncVitality").val(varIncVitality);
            $("#IncPhotographCast").val(varIncPhotographCast);
            $("#IncRadiographInterpretation").val(varIncRadiographInterpretation);
            $("#IncTreatmentProcedure").val(varIncTreatmentProcedure);
            $("#IncMaterialChoice").val(varIncMaterialChoice);
            $("#IncSiteOfManagement").val(varIncSiteOfManagement);
            $("#IncOtherRestorativePro").val(varIncOtherRestorativePro);
            $("#IncReview1").val(varIncReview1);
            $("#IncReview2").val(varIncReview2);
            $("#IncReview3").val(varIncReview3);

            row.remove();

            var CONSId = $("#ConservativeId").val();
            $.ajax({
                type: "GET",
                url: '@Url.Action("IncompleteRootDetails", "CONS")',
                data: { Id: Id, ConservativeId: CONSId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {

                    $('#tbIncRootFormDetails tr').not(function () { return !!$(this).has('th').length; }).remove();
                    var items = '';
                    $.each(data, function (i, item) {
                        var itemIndex = $("#tbIncRootFormDetails input.qHidden").length;
                        var IncompleteRootId = item.IncompleteRootId;
                        var ToothNumbersH = item.ToothNumber;
                        var IncVitality = item.IncVitality;
                        var IncPhotographCast = item.IncPhotographCast;
                        var IncRadiographInterpretation = item.IncRadiographInterpretation;
                        var IncTreatmentProcedure = item.IncTreatmentProcedure;
                        var IncMaterialChoice = item.IncMaterialChoice;
                        var IncSiteOfManagement = item.IncSiteOfManagement;
                        var IncOtherRestorativePro = item.IncOtherRestorativePro;
                        var IncReview1 = item.IncReview1;
                        var IncReview2 = item.IncReview2;
                        var IncReview3 = item.IncReview3;

                        var markupIncompleteRootId = " <td><input name='RfList[" + itemIndex + "].IncompleteRootId' id='RfList[" + itemIndex + "]_IncompleteRootId' type='hidden' value=" + IncompleteRootId + ">"
                        var markupToothNumbersH = "<input type='hidden' id='RfList[" + itemIndex + "]_ToothNumbersH' class='form-control qHidden'  name='RfList[" + itemIndex + "].ToothNumbersH' value='" + ToothNumbersH + "'>";
                        var markupIncVitality = "<td>" + IncVitality + "<input type='hidden' id='RfList[" + itemIndex + "]_IncVitality' class='form-control'  name='RfList[" + itemIndex + "].IncVitality' value='" + IncVitality + "'></td>";
                        var markupIncPhotographCast = "<td>" + IncPhotographCast + "<input type='hidden' id='RfList[" + itemIndex + "]_IncPhotographCast' class='form-control'  name='RfList[" + itemIndex + "].IncPhotographCast' value='" + IncPhotographCast + "'></td>";
                        var markupIncRadiographInterpretation = "<td>" + IncRadiographInterpretation + "<input type='hidden' id='RfList[" + itemIndex + "]_IncRadiographInterpretation' class='form-control'  name='RfList[" + itemIndex + "].IncRadiographInterpretation' value='" + IncRadiographInterpretation + "'></td>";
                        var markupIncTreatmentProcedure = "<td>" + IncTreatmentProcedure + "<input type='hidden' id='RfList[" + itemIndex + "]_IncTreatmentProcedure' class='form-control'  name='RfList[" + itemIndex + "].IncTreatmentProcedure' value='" + IncTreatmentProcedure + "'></td>";
                        var markupIncMaterialChoice = "<td>" + IncMaterialChoice + "<input type='hidden' id='RfList[" + itemIndex + "]_IncMaterialChoice' class='form-control'  name='RfList[" + itemIndex + "].IncMaterialChoice' value='" + IncMaterialChoice + "'></td>";
                        var markupIncSiteOfManagement = "<td>" + IncSiteOfManagement + "<input type='hidden' id='RfList[" + itemIndex + "]_IncSiteOfManagement' class='form-control'  name='RfList[" + itemIndex + "].IncSiteOfManagement' value='" + IncSiteOfManagement + "'></td>";
                        var markupIncOtherRestorativePro = "<td>" + IncOtherRestorativePro + "<input type='hidden' id='RfList[" + itemIndex + "]_IncOtherRestorativePro' class='form-control'  name='RfList[" + itemIndex + "].IncOtherRestorativePro' value='" + IncOtherRestorativePro + "'></td>";
                        var markupIncReview1 = "<td>" + IncReview1 + "<input type='hidden' id='RfList[" + itemIndex + "]_IncReview1' class='form-control'  name='RfList[" + itemIndex + "].IncReview1' value='" + IncReview1 + "'></td>";
                        var markupIncReview2 = "<td>" + IncReview2 + "<input type='hidden' id='RfList[" + itemIndex + "]_IncReview2' class='form-control'  name='RfList[" + itemIndex + "].IncReview2' value='" + IncReview2 + "'></td>";
                        var markupIncReview3 = "<td>" + IncReview3 + "<input type='hidden' id='RfList[" + itemIndex + "]_IncReview3' class='form-control'  name='RfList[" + itemIndex + "].IncReview3' value='" + IncReview3 + "'></td>";



                        var deleteButton = "<td> <button type='button' class='IncRootFormToothdelete btn btn-danger btn-xs' data-id='" + IncompleteRootId + "'> <i class='glyphicon glyphicon-trash'></i></button> </td>";
                        var Edit = "<td> <button type='button' class='IncRootFormEdit btn btn-primary btn-xs' data-id='" + IncompleteRootId + "'> <i class='glyphicon glyphicon-pencil'></i></button> </td>";
                        var markupFinal = "<tr>" + Edit + deleteButton + markupIncompleteRootId + ToothNumbersH + markupToothNumbersH + markupIncVitality + markupIncPhotographCast + markupIncRadiographInterpretation + markupIncTreatmentProcedure + markupIncMaterialChoice + markupIncSiteOfManagement + markupIncOtherRestorativePro + markupIncReview1 + markupIncReview2 + markupIncReview3 + "</tr>";
                        $("#tbIncRootFormDetails tbody").append(markupFinal);


                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });

        }
    });
                </script>
            }
