@using DIMS.Helpers
@model IEnumerable<DIMS.ViewModels.BookIssuesViewModel>

@{
    ViewBag.Title = "Book Issue List";
    var result = ViewBag.Result;
}



<p>
    @Html.ActionLink("Create New", "Create")
</p>


<div class="box box-default box-solid">
    <div class="box-header with-border">
        <h4 class="box-title">@ViewBag.Title</h4>
    </div>
    <div class="box-body">
        @if (result != null && result.Success && !ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            @BootstrapAlert.BootstrapCustomAlertHtmlString(result.Message, BootstrapAlertType.Success)
        }
        @if (ViewData.ModelState.Any(x => x.Value.Errors.Any()))
        {
            foreach (var modelError in Html.ViewData.ModelState.SelectMany(keyValuePair => keyValuePair.Value.Errors))
            {
                @BootstrapAlert.BootstrapCustomAlertHtmlString(@modelError.ErrorMessage, BootstrapAlertType.Danger)
            }
        }
        <table class="table table-bordered">
            <tr>
                <th>
                    S.No
                </th>
                <th>
                   Title
                </th>
                <th>
                    Issued To
                </th>
                <th>
                    Issue - Return
                </th>
                <th>
                    Issued By
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Status
                </th>
            </tr>
            @{int i = 0;}
            @if (Model.Any())
            {
                foreach (var item in Model)
                {
                    i++;
                    <tr>
                        <td><span>@i</span></td>
                        <td>@Html.DisplayFor(model => item.Book.Title)</td>
                        <td>@Html.DisplayFor(model => item.Doctor.DoctorName) </td>
                        <td>@string.Concat(item.IssuedDate.Value.ToShortDateString(), " ", item.ReturnDate.Value.ToShortDateString())</td>
                        <td>@Html.DisplayFor(model => item.IssueBy) </td>
                        <td>@Html.DisplayFor(model => item.Quantity) </td>
                        <td>
                            @{
                                if (item.IsReturned == false)
                                {
                                    <span class="label label-danger item_remove" data-item="@item.Id"  data-item_name="@item.Book.Title" data-quantity="@item.Quantity" data-toggle="modal" data-target="#confirm-delete">Click To Return</span>
                                }
                                else
                                {
                                    <span class="label label-success">Returned</span>
                                }
                            }
                        </td>

                    </tr>
                }
            }
            else
            {
                <tr>
                    <th colspan="5">
                        No Items are availeble..
                    </th>

                </tr>
            }

        </table>
    </div>
</div>



<div class="modal fade" id="confirm-delete" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">

            <div class="modal-header">

                <h4 class="modal-title" id="myModalLabel">Confirm Return</h4>
            </div>

            <div class="modal-body">
                <input type="hidden" id="item_issue_id" name="item_issue_id" value="">
                <p>Are you sure to return this item !</p>

                <ul class="list2">
                    <li>Item <span id="modal_item"></span></li>
                    <li>Quantity <span id="modal_item_quantity"></span></li>
                </ul>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                <a class="btn cfees btn-ok" data-loading-text="<i class='fa fa-spinner fa-spin '></i> Please Wait..">Return</a>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>

        $(function () {
            $('#confirm-delete').on('show.bs.modal', function (e) {
                $('#item_issue_id').val("");
                $('.debug-url').html('');
                $('#modal_item_quantity,#modal_item,#modal_item_cat').text("");
                var item_issue_id = $(e.relatedTarget).data('item');
                var quantity = $(e.relatedTarget).data('quantity');
                var item_name = $(e.relatedTarget).data('item_name');
                $('#item_issue_id').val(item_issue_id);
                $('#modal_item').text(item_name);
                $('#modal_item_quantity').text(quantity);

            });
            $("#confirm-delete").modal({
                backdrop: false,
                show: false

            });


            $(document).on('click', '.btn-ok', function () {
                var $this = $('.btn-ok');
                $this.button('loading');
                var obj = { itemIssueId: $('#item_issue_id').val() };
                window.AjaxCall('/ItemIssue/ReturnItem', JSON.stringify(obj), 'POST').done(function (response) {
                    if (response.Status) {
                        successMsg("Item retrun successfully");
                        $("#confirm-delete").modal('hide');
                        location.reload();
                    } else {
                        errorMsg("Unable to return item");
                    }
                }).fail(function (error) {

                });


            });
        });
    </script>
}
